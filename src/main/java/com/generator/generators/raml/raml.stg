/* raml 720cf6a1-0b89-44f4-bcd6-88756ab85493*/
delimiters "~", "~"

binaryResponse(contentType) ::= <<200:
  body:
    ~contentType~:>>

booleanParam(defaultValue,description,name,required) ::= <<~name~:
  description: ~description~
  type: boolean
  ~if(required)~required: true~else~# not required ~endif~
  ~if(defaultValue)~default: ~defaultValue~~else~# no default ~endif~>>

dateParam(defaultValue,description,example,name,pattern,required) ::= <<~name~:
  description: ~description~
  type: date
  ~if(pattern)~pattern: ~pattern~~else~# no pattern~endif~
  ~if(example)~example: ~example~~else~# no date example ~endif~
  ~if(required)~required: true~else~# not required ~endif~
  ~if(defaultValue)~default: ~defaultValue~~else~# no default ~endif~>>

deleteAction(description,headers,query,responses) ::= <<delete:
  description: ~description~
  ~query~
  ~headers~
  responses:
    ~responses:{it|~it~};separator="\n"~>>

endpoint(actions,uri,uriParams) ::= <<~uri~:
  ~if(uriParams)~~uriParams~~endif~
  ~actions:{it|~it~};separator="\n"~>>

errorResponse(code,description) ::= <<~code~:
  body:
    application/json:
      schema: |
        { "$schema": "http://json-schema.org/schema",
          "type": "object",
          "description": "~description~",
          "properties": {
            "STATUS":  { "type": "integer" },
            "TYPE":  { "type": "string" },
            "MESSAGE":  { "type": "string" },
            "DETAILS":  { "type": "array" }
          },
          "required": [ "STATUS","TYPE" ]
        }>>

file(baseUri,endpoints,http,https,title,version) ::= <<#%RAML 0.8
title: ~title~
baseUri: ~baseUri~
version: ~version~
protocols: [~if(http)~ HTTP~endif~~if(https)~~if(http)~,~endif~HTTPS~endif~ ]
~endpoints:{it|~it~};separator="\n"~>>

fileParam(description,name,required) ::= <<~name~:
  description: ~description~
  type: file
  ~if(required)~required: true~else~# not required ~endif~>>

formBody(formParams,multipart) ::= <<body:
  ~if(multipart)~multipart/form-data~else~application/x-www-form-urlencoded~endif~:
    formParameters:
      ~formParams:{it|~it~};separator="\n"~>>

getAction(description,headers,query,responses) ::= <<get:
  description: ~description~
  ~query~
  ~headers~
  responses:
    ~responses:{it|~it~};separator="\n"~>>

header(description,enums,required,example,name) ::= <<~name~:
  description: ~description~
  ~if(enums)~enum: [~enums:{it|~it~};separator=", "~]~else~# no enums~endif~
  ~if(example)~example: ~example~~else~# no example ~endif~
  ~if(required)~required: true~else~# not required ~endif~>>

numberParam(defaultValue,description,example,maximum,minimum,name,repeat,required) ::= <<~name~:
  description: ~description~
  type: number
  ~if(minimum)~minimum: ~minimum~~else~# no minimum ~endif~
  ~if(maximum)~maximum: ~maximum~~else~# no maximum ~endif~
  ~if(example)~example: ~example~~else~# no example ~endif~
  ~if(repeat)~repeat: ~repeat~~else~# no repeat ~endif~
  ~if(required)~required: true~else~# not required ~endif~
  ~if(defaultValue)~default: ~defaultValue~~else~# no default ~endif~>>

postAction(body,description,headers,query,responses) ::= <<post:
  description: ~description~
  ~query~
  ~headers~
  ~body~
  responses:
      ~responses:{it|~it~};separator="\n"~>>

putAction(body,description,headers,query,responses) ::= <<put:
  description: ~description~
  ~query~
  ~headers~
  ~body~
  responses:
      ~responses:{it|~it~};separator="\n"~>>

queryParams(queryParams) ::= <<queryParameters:
  ~queryParams:{it|~it~};separator="\n"~>>

stringParam(defaultValue,description,enums,example,maxLength,minLength,name,pattern,repeat,required) ::= <<~name~:
  description: ~description~
  type: string
  ~if(enums)~enum: [~enums:{it|~it~};separator=", "~]~else~# no enums~endif~
  ~if(pattern)~pattern: ~pattern~~else~# no pattern~endif~
  ~if(minLength)~minLength: ~minLength~~else~# no min length~endif~
  ~if(maxLength)~maxLength: ~maxLength~~else~# no max length~endif~
  ~if(example)~example: ~example~~else~# no example ~endif~
  ~if(repeat)~repeat: ~repeat~~else~# no repeat ~endif~
  ~if(required)~required: true~else~# not required ~endif~
  ~if(defaultValue)~default: ~defaultValue~~else~# no default ~endif~>>

uriParams(uriParams) ::= <<uriParameters:
  ~uriParams:{it|~it~};separator="\n"~>>

jsonResponse(required,schemaDescription,properties) ::= <<200:
  body:
    application/json:
      schema: |
        { "$schema": "http://json-schema.org/schema",
          "type": "object",
          "description": "~schemaDescription~",
          "properties": {
            ~properties:{it|"~it.name~": { "type": "~it.type~" \}};separator=",\n"~
          },
          "required": [ ~required:{it|"~it~"};separator=", "~ ]
        }>>

integerParam(required,repeat,name,minimum,example,maximum,description,defaultValue) ::= <<~name~:
  description: ~description~
  type: integer
  ~if(minimum)~minimum: ~minimum~~else~# no minimum ~endif~
  ~if(maximum)~maximum: ~maximum~~else~# no maximum ~endif~
  ~if(example)~example: ~example~~else~# no example ~endif~
  ~if(repeat)~repeat: ~repeat~~else~# no repeat ~endif~
  ~if(required)~required: true~else~# not required ~endif~
  ~if(defaultValue)~default: ~defaultValue~~else~# no default ~endif~>>

headerParams(headerParams) ::= <<headers:
  ~headerParams:{it|~it~};separator="\n"~>>