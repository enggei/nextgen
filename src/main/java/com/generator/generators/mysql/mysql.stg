/* mysql 4f599727-5e92-48ab-970a-abd4ce4d4341*/
delimiters "~", "~"

alterTableDropColumn(column,table) ::= <<ALTER TABLE `~table~` DROP COLUMN `~column~`;>>

alterTableDropForeignKeyConstraint(name,table) ::= <<ALTER TABLE `~table~` DROP FOREIGN KEY `~name~`;>>

alterTableDropIndex(name,table) ::= <<ALTER TABLE `~table~` DROP INDEX `~name~`;>>

alterTableDropUniqueKey(name,table) ::= <<ALTER TABLE `~table~` DROP INDEX `~name~`;>>

alterTableModifyColumn(autoIncrement,column,comment,defaultValue,nullable,onUpdate,table,type) ::= <<ALTER TABLE `~table~` MODIFY COLUMN `~column~` ~type~~if(nullable)~~else~ NOT NULL~endif~~if(autoIncrement)~ auto_increment~endif~~if(defaultValue)~ default ~defaultValue~~endif~~if(onUpdate)~ on update ~onUpdate~~endif~~if(comment)~ COMMENT '~comment~'~endif~;>>

alterTableUpdateForeignKeyConstraint(column,name,onDelete,onUpdate,refColumn,refTable,table) ::= <<ALTER TABLE `~table~` DROP FOREIGN KEY `~name~`, ADD CONSTRAINT `~name~` FOREIGN KEY (`~column~`) REFERENCES `~refTable~` (`~refColumn~`) ON DELETE ~if(onDelete)~~onDelete~~else~RESTRICT~endif~ ON UPDATE ~if(onUpdate)~~onUpdate~~else~RESTRICT~endif~;>>

createDatabase(name,script) ::= <<create database ~name~;
use ~name~;
~script~>>

createForeignConstraints(column,name,onDelete,onUpdate,refColumn,refTable) ::= <<CONSTRAINT ~if(name)~`~name~`~endif~ FOREIGN KEY (`~column~`) REFERENCES `~refTable~` (`~refColumn~`) ON DELETE ~if(onDelete)~~onDelete~~else~RESTRICT~endif~ ON UPDATE ~if(onUpdate)~~onUpdate~~else~RESTRICT~endif~>>

createKey(indexType,key_,name) ::= <<KEY ~if(name)~`~name~` ~endif~~if(indexType)~USING ~indexType~ ~endif~(~key_:{it|`~it~`}; separator=","~)>>

eom() ::= <<}>>

gt() ::= <<> >>

alterTableAddColumn(before,column,table) ::= <<ALTER TABLE `~table~` ADD COLUMN ~column~~if(before)~ BEFORE ~before~~endif~;>>

alterTableAddForeignKeyConstraint(column,name,onDelete,onUpdate,refColumn,refTable,table) ::= <<ALTER TABLE `~table~` ADD CONSTRAINT `~name~` FOREIGN KEY (`~column~`) REFERENCES `~refTable~` (`~refColumn~`) ON DELETE ~if(onDelete)~~onDelete~~else~RESTRICT~endif~ ON UPDATE ~if(onUpdate)~~onUpdate~~else~RESTRICT~endif~;>>

alterTableAddIndex(columns,indexType,name,table) ::= <<ALTER TABLE `~table~` ADD INDEX `~name~` ~if(indexType)~USING ~indexType~ ~endif~(~columns:{it|`~it~`}; separator=", "~);>>

alterTableUpdateIndex(columns,indexType,name,table) ::= <<ALTER TABLE `~table~` DROP INDEX `~name~`, ADD INDEX `~name~` ~if(indexType)~USING ~indexType~ ~endif~(~columns:{it|`~it~`}; separator=", "~);>>

alterTableUpdateUniqueKey(columns,indexType,name,table) ::= <<ALTER TABLE `~table~` DROP INDEX `~name~`, ADD UNIQUE INDEX `~name~` ~if(indexType)~USING ~indexType~ ~endif~(~columns:{it|`~it~`}; separator=", "~);>>

createColumn(autoIncrement,defaultValue,name,nullable,onUpdate,type,comment) ::= <<`~name~` ~type~~if(nullable)~~else~ NOT NULL~endif~~if(autoIncrement)~ auto_increment~endif~~if(defaultValue)~ default ~defaultValue~~endif~~if(onUpdate)~ on update ~onUpdate~~endif~~if(comment)~ COMMENT '~comment~'~endif~>>

alterTableAddUniqueKey(table,indexType,name,columns) ::= <<ALTER TABLE `~table~` ADD UNIQUE INDEX `~name~` ~if(indexType)~USING ~indexType~ ~endif~(~columns:{it|`~it~`}; separator=", "~);>>

createPrimaryKey(name,primaries) ::= <<PRIMARY KEY ~if(name)~`~name~`~endif~ (~primaries:{it|`~it~`}; separator=","~)>>

createTable(columns,footer,keys,name) ::= <<CREATE TABLE `~name~` (~if(columns)~
~columns:{it| ~it~};separator=",\n"~~if(keys)~,~endif~~endif~~if(keys)~
~keys:{it|~it~};separator=",\n"~~endif~)~if(footer)~
~footer~~endif~;>>

createUniqueKey(indexType,key_,name) ::= <<UNIQUE KEY ~if(name)~`~name~` ~endif~~if(indexType)~USING ~indexType~ ~endif~(~key_:{it|`~it~`}; separator=","~)>>

disableKeys() ::= <</*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;>>

dropTable(table) ::= <<DROP TABLE `~table~`;>>

enableKeys() ::= <</*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;>>

insert(columns,table,values) ::= <<INSERT INTO TABLE ~table~ (~columns:{it|~it~};separator=","~) VALUES (~values:{it|~it~};separator=","~);>>

join(columns,joins,order,tables) ::= <<SELECT ~columns:{it|~it~};separator=", "~
FROM ~tables:{it|~it~};separator=", "~~if(joins)~

WHERE ~joins:{it|~it.source~=~it.fk~};separator=" AND "~~endif~~if(order)~
ORDER BY ~order:{it|~it~};separator=","~~endif~;>>

preparedStatement(params,sql) ::= <<final PreparedStatement stmt = connection.prepareStatement("~sql~");
~params:{it|set~it.type~(stmt, ~i~, siteWeather.get~it.name;format="capitalize"~());};separator="\n"~>>

recreateDatabase(name,script) ::= <<drop database if exists ~name~;
~createDatabase(name=name,script=script)~>>

select(columns,order,table) ::= <<SELECT ~columns:{it|~it~};separator=", "~ FROM ~table~~if(order)~ ORDER BY ~order:{it|~it~};separator=","~~endif~;>>

tableFooter(autoIncrement,avgRowLength,charset,comments,connection,engine,maxRows,minRows,packKeys,rowFormat) ::= <<~if(engine)~ ENGINE=~engine~~endif~~if(autoIncrement)~ AUTO_INCREMENT=~autoIncrement~~endif~~if(charset)~ COLLATE='~charset~'~endif~~if(connection)~ CONNECTION=~connection~~endif~~if(packKeys)~ PACK_KEYS=~packKeys~~endif~~if(rowFormat)~ ROW_FORMAT=~rowFormat~~endif~~if(avgRowLength)~ AVG_ROW_LENGTH=~avgRowLength~~endif~~if(minRows)~ MIN_ROWS=~minRows~~endif~~if(maxRows)~ MAX_ROWS=~maxRows~~endif~~if(comments)~ COMMENT='~comments~'~endif~>>

update(columns,primaryColumn,table) ::= <<UPDATE ~table~ SET ~columns:{it|~it~ = ?};separator=", "~ WHERE ~primaryColumn~=?;>>