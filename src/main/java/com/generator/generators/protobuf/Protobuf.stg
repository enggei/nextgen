/* uuid : e203b5be-3086-4390-b4b8-413f92106980 */
delimiters "~", "~"

/** comments,STRINGPROPERTY;name,STRINGPROPERTY;properties,LISTPROPERTY; **/
enum(comments,name,properties) ::= <<~if(comments)~
//~comments~
~endif~
enum ~name~ {
	~properties:{it|~it;format="humpToCap"~ = ~i~;}; separator="\n"~
} 
>>

/** comments,STRINGPROPERTY;name,STRINGPROPERTY;properties,LISTPROPERTY; **/
extend(comments,name,properties) ::= << ~if(comments)~
//~comments~
~endif~
extend ~name;format="capitalize"~ {
  ~properties:{it|~it~}; separator="\n"~
}
>>

/** max,STRINGPROPERTY;min,STRINGPROPERTY; **/
extensions(max,min) ::= << 
extensions ~min~ to ~max~; 
>>

/** groupName,STRINGPROPERTY;messages,KEYVALUELISTPROPERTY,name;packageName,STRINGPROPERTY; **/
groupMessagesModel(groupName,messages,packageName) ::= <<define(['ProtoBuf'], function (ProtoBuf) {

    // package : ~packageName~
    var builder = ProtoBuf.loadProtoFile("~groupName~.proto");

    ~messages:{it|var ~it.name~ = builder.build("~packageName~.~it.name~");};separator="\n"~

    return {
        ~messages:{it|~it.name~: ~it.name~};separator=",\n"~
    };
});
>>

/** comments,STRINGPROPERTY;name,STRINGPROPERTY;properties,LISTPROPERTY; **/
message(comments,name,properties) ::= << ~if(comments)~
//~comments~
~endif~
message ~name;format="capitalize"~ {
   ~properties:{it|~it~}; separator="\n"~
}
>>

/** comments,STRINGPROPERTY;defaultValue,STRINGPROPERTY;fieldConstraint,STRINGPROPERTY;name,STRINGPROPERTY;ordinal,STRINGPROPERTY;packedValue,STRINGPROPERTY;type,STRINGPROPERTY; **/
messageField(comments,defaultValue,fieldConstraint,name,ordinal,packedValue,type) ::= <<~fieldConstraint~ ~type~ ~name~ = ~ordinal~~if(defaultValue)~ [default = ~defaultValue~]~elseif(packedValue)~ [packed = ~packedValue~]~endif~;~if(comments)~ //~comments~~endif~ 
>>

/** deliverables,LISTPROPERTY;imports,LISTPROPERTY;options,KEYVALUELISTPROPERTY,name,value;package,STRINGPROPERTY; **/
protobufPackage(deliverables,imports,options,package) ::= <<package ~package~;

// AUTO-GENERATED - edit 'Protobuf.stg' to make output-changes

~if(options)~
~options:{it|option ~it.name~ = ~it.value~;};separator="\n"~~endif~

~if(imports)~
~imports:{it|import "~it~.proto";};separator="\n"~~endif~


~deliverables:{it|~it~}; separator="\n\n"~ 
>>
