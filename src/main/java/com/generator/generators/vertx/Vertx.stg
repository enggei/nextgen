/* Vertx c0fb5777-2802-413a-b5d2-4448fac13334*/
delimiters "~", "~"

eom() ::= <<}>>

gt() ::= <<> >>

RouterVerticle(endpoints,indexUri,name,packageName) ::= <<package ~packageName~;

import io.vertx.core.AbstractVerticle;
import io.vertx.core.Future;
import io.vertx.core.http.HttpServerOptions;
import io.vertx.ext.web.Router;
import io.vertx.ext.web.RoutingContext;
import io.vertx.ext.web.handler.BodyHandler;
import io.vertx.ext.web.handler.StaticHandler;

import static io.netty.handler.codec.http.HttpResponseStatus.BAD_REQUEST;

/**
 * Created 28.05.17.
 */
public abstract class ~name~ extends AbstractVerticle {

   protected static final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(~name~.class);

   @Override
   public void start(Future<Void> startFuture) throws Exception {
      log.info("Starting ~name~ using config " + config().encode());

      final Router router = Router.router(vertx);
      router.route().handler(BodyHandler.create());

		~endpoints:{it|
      router.get("~it.uri~").handler(routingContext -> {
         log.debug(debug(routingContext));
         on~it.name~(routingContext);
      ~eom()~);
		};separator="\n"~

      router.route().handler(StaticHandler.create().
            setWebRoot(config().getString("web.root")).
            setIndexPage("~indexUri~"));

      // fallback handler (400 - BAD REQUEST)
      router.route().last().handler(routingContext -> routingContext.put(BAD_REQUEST.reasonPhrase(), routingContext.request().path()).
            fail(BAD_REQUEST.code()));

      vertx.createHttpServer(new HttpServerOptions()).
            requestHandler(router::accept).
            listen(config().getInteger("content.port"));

      startFuture.complete();
   }

   ~endpoints:{it|protected abstract void on~it.name~(RoutingContext routingContext);};separator="\n"~

	protected static String debug(RoutingContext request) {
		final StringBuilder out = new StringBuilder();
		for (Map.Entry<String, String> param : request.request().params())
			out.append(param.getKey()).append("=").append(param.getValue()).append("\n");
		return request.request().uri() + " " + out.toString().trim();
	}
}>>