

# Only these steps are required when developing:

# 1 run npm install once, to install libraries defined in webpack

# 2 development - uses file-listener. If server is running, run this, and server will return up-to-date files:
npm run develop

# deployment
npm run deploy




# the following steps was done to setup client:
# It is NOT necessary to run this more than once:

npm init
npm install webpack webpack-cli --save-dev
npm i react-svg-loader css-loader style-loader file-loader image-webpack-loader sass-loader node-sass --save-dev
npm i html-webpack-plugin html-loader --save-dev
npm install @babel/core babel-loader @babel/preset-env @babel/preset-react babel-plugin-transform-decorators-legacy @babel/plugin-proposal-decorators @babel/plugin-proposal-class-properties --save-dev

# support hot reload
npm i webpack-dev-server --save-dev

# react
npm i react react-dom npm react-router-dom prop-types --save-dev

# mobx
npm i mobx mobx-react mobx mobx-state-tree babel-preset-mobx babel-loader --save-dev
npm i mobx-react-devtools --save-dev

# react bootstrap
npm i bootstrap react-bootstrap react-router-bootstrap --save-dev

# superagent for rest-calls
npm i superagent superagent-promise promise.prototype.finally --save-dev

# mxGraph
npm i mxgraph-js script-loader --save-dev
npm i --save-dev script-loader
npm i mxgraph


# draggable components
npm i react-draggable --save-dev

# graph
npm i d3 react-d3-graph --save-dev

#utilities
npm i uuid --save-dev

# certificates
cd /home/goe/projects/nextgen/components/core/src/main/resources
#server-ssl certificate
keytool -genkey -alias sslProbe -keyalg RSA -keystore sslStore.jceks -deststoretype pkcs12 -dname "CN=Geir Enge, OU=QUT, O=QUT, L=Brisbane, S=AU, C=EN" -storepass sslPassword
#jwt certificate
keytool -genseckey -keystore jwtStore.jceks -storetype jceks -storepass jwtPassword -keyalg HMacSHA256 -keysize 2048 -alias HS256 -keypass jwtPassword -dname "CN=Geir Enge, OU=QUT, O=QUT, L=Brisbane, S=AU, C=EN" -validity 360
