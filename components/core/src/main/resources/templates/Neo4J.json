{
  "uuid" : "78736754-0769-45f5-b4e4-eec7df6f03bc",
  "name" : "Neo4J",
  "delimiter" : "~",
  "templates" : [ {
    "uuid" : "36bdedab-d23c-4c1e-9111-21b71e362a10",
    "name" : "Entities",
    "text" : "",
    "children" : [ {
      "uuid" : "bbe1e861-a07d-4516-ac58-76059fd89ed4",
      "name" : "NodeWrapper",
      "text" : "package ~package~;\n\npublic class ~name;format=\"capitalize\"~ {\n\n\tprivate final org.neo4j.graphdb.Node node;\n\t~externalFields:{it|private ~it.type~ _~it.name~~if(it.initializer)~ = ~it.initializer~~endif~;};separator=\"\\n\"~\n\n\tpublic ~name;format=\"capitalize\"~(org.neo4j.graphdb.Node node) { \n\t\tthis.node = node;\n\t}\n\n\tpublic org.neo4j.graphdb.Node getNode() { \n\t\treturn this.node;\n\t}\n\n\t@Override\n\tpublic boolean equals(java.lang.Object o) { \n\t\tif (this == o) return true;\n\t\tif (o == null || getClass() != o.getClass()) return false;\n\t\tfinal ~name;format=\"capitalize\"~ other = (~name;format=\"capitalize\"~) o;\n\t\treturn node.equals(other.node);\n\t}\n\n\t@Override\n\tpublic int hashCode() { \n\t\treturn java.util.Objects.hash(node);\n\t}\n\n\t~accessors:{it|~it~};separator=\"\\n\\n\"~\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"\"~if(lexical)~ + ~endif~~lexical:{it|node.getProperty(\"~it~\")};separator=\" + \\\" \\\" + \"~;\n\t}\n\n\t~methods:{it|~it~};separator=\"\\n\\n\"~\n} ",
      "parameters" : [ {
        "uuid" : "c736d03e-a2ba-47d5-a066-5fc2eff867a7",
        "name" : "package",
        "type" : "SINGLE",
        "argumentType" : "Object"
      }, {
        "uuid" : "ca02ee05-94c6-4ad7-9462-3dfa3a5a37ec",
        "name" : "name",
        "type" : "SINGLE",
        "argumentType" : "Object"
      }, {
        "uuid" : "44324363-3a3b-4d98-a3df-f7817d8d0ebc",
        "name" : "externalFields",
        "type" : "KVLIST",
        "argumentType" : "Object",
        "keys" : [ {
          "uuid" : "9c4453fc-38a6-4b42-966f-d67a05156e4c",
          "name" : "type",
          "argumentType" : "Object"
        }, {
          "uuid" : "5e71d013-4d76-4809-a28a-5298f2ce271a",
          "name" : "name",
          "argumentType" : "Object"
        }, {
          "uuid" : "becee7e2-28e7-494b-822e-8328e1a8160d",
          "name" : "initializer",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "e3bf991a-a626-4faf-a571-faf60cea0008",
        "name" : "accessors",
        "type" : "LIST",
        "argumentType" : "Object"
      }, {
        "uuid" : "8f020d32-c335-4c72-9c86-3076d5db6021",
        "name" : "lexical",
        "type" : "LIST",
        "argumentType" : "Object"
      }, {
        "uuid" : "fc684dcd-b259-44ba-a422-93ed533b9ee8",
        "name" : "methods",
        "type" : "LIST",
        "argumentType" : "Object"
      } ],
      "children" : [ {
        "uuid" : "1f644569-ced1-4ac3-88d9-d9ba5588fd9f",
        "name" : "primitiveAccessors",
        "text" : "public ~className;format=\"capitalize\"~ set~name;format=\"capitalize\"~(~type~ value) { \n\tif (value == null) node.removeProperty(\"~name~\"); \n\telse node.setProperty(\"~name~\", value);\n\treturn this;\n}\n\npublic ~type~ get~name;format=\"capitalize\"~() { \n\tif (node.hasProperty(\"~name~\")) return (~type~) node.getProperty(\"~name~\");\n\treturn null;\n}\n\npublic ~type~ get~name;format=\"capitalize\"~(~type~ defaultValue) { \n\tif (node.hasProperty(\"~name~\")) return (~type~) node.getProperty(\"~name~\");\n\treturn defaultValue;\n}\n\npublic boolean has~name;format=\"capitalize\"~() { \n\treturn node.hasProperty(\"~name~\");\n}\n\npublic ~className;format=\"capitalize\"~ remove~name;format=\"capitalize\"~() { \n\tnode.removeProperty(\"~name~\");\n\treturn this;\n}",
        "parameters" : [ {
          "uuid" : "fb3b9086-e6df-4cd2-a19f-f8c4be3e3ee7",
          "name" : "className",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "96789533-4810-47b3-aa34-9c762f16c4d2",
          "name" : "name",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "9733d727-a691-40a9-ba4a-0844dc7acc82",
          "name" : "type",
          "type" : "SINGLE",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "adb625e7-714e-4df2-8133-acd78e798abe",
        "name" : "listReferenceAccessors",
        "text" : "public ~className;format=\"capitalize\"~ add~name;format=\"capitalize\"~(~type~ dst) { \n\tfinal java.util.Optional<org.neo4j.graphdb.Relationship> existing = java.util.stream.StreamSupport.stream(node.getRelationships(org.neo4j.graphdb.Direction.OUTGOING, org.neo4j.graphdb.RelationshipType.withName(\"~name~\")).spliterator(), false).filter((r) -> r.getOtherNode(node).equals(dst.getNode())).findAny();\n\tif (existing.isPresent()) return this;\n\tnode.createRelationshipTo(dst.getNode(), org.neo4j.graphdb.RelationshipType.withName(\"~name~\"));\n\treturn this;\n}\n\npublic java.util.stream.Stream<~type~> get~name;format=\"capitalize\"~() { \n\treturn java.util.stream.StreamSupport.stream(node.getRelationships(org.neo4j.graphdb.Direction.OUTGOING, org.neo4j.graphdb.RelationshipType.withName(\"~name~\")).spliterator(), false).map((relationship) -> new ~type~(relationship.getOtherNode(node)));\n}\n\npublic ~className;format=\"capitalize\"~ remove~name;format=\"capitalize\"~(~type~ dst) { \n\tfinal java.util.Optional<org.neo4j.graphdb.Relationship> existing = java.util.stream.StreamSupport.stream(node.getRelationships(org.neo4j.graphdb.Direction.OUTGOING, org.neo4j.graphdb.RelationshipType.withName(\"~name~\")).spliterator(), false).filter((r) -> r.getOtherNode(node).equals(dst.getNode())).findAny();\n\texisting.ifPresent(org.neo4j.graphdb.Relationship::delete);\n\treturn this;\n}",
        "parameters" : [ {
          "uuid" : "e480898b-0176-4ad2-a95f-8646d5d95886",
          "name" : "className",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "6ff94c72-5dd8-4261-b45e-5536a70f24be",
          "name" : "name",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "20bfdc18-1db4-40c8-9f7d-5269babd0f80",
          "name" : "type",
          "type" : "SINGLE",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "d20dad1e-291a-4d48-85f6-4bb4d3173a57",
        "name" : "listPrimitiveAccessors",
        "text" : "public ~className;format=\"capitalize\"~ add~name;format=\"capitalize\"~(~type~ dst) { \n\tfinal java.util.Optional<org.neo4j.graphdb.Node> existing = java.util.stream.StreamSupport.stream(node.getRelationships(org.neo4j.graphdb.Direction.OUTGOING, org.neo4j.graphdb.RelationshipType.withName(\"~name~\")).spliterator(), false).map((r) -> r.getOtherNode(node)).filter((n) -> dst.equals(n.getProperty(\"value\"))).findAny();\n\tif (existing.isPresent()) return this;\n\tfinal org.neo4j.graphdb.Node newNode = node.getGraphDatabase().createNode(org.neo4j.graphdb.Label.label(\"~type~\"));\n\tnewNode.setProperty(\"value\", dst);\n\tnode.createRelationshipTo(newNode, org.neo4j.graphdb.RelationshipType.withName(\"~name~\"));\n\treturn this;\n}\n\npublic java.util.stream.Stream<~type~> get~name;format=\"capitalize\"~() { \n\treturn java.util.stream.StreamSupport.stream(node.getRelationships(org.neo4j.graphdb.Direction.OUTGOING, org.neo4j.graphdb.RelationshipType.withName(\"~name~\")).spliterator(), false).map((relationship) -> (~type~) relationship.getOtherNode(node).getProperty(\"value\"));\n} ",
        "parameters" : [ {
          "uuid" : "1a51ba00-d7e5-47ca-8a5a-9bf443b12f29",
          "name" : "className",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "2f564020-7627-4e4a-8494-fb786998c22d",
          "name" : "name",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "5348e0ff-1092-47af-9440-06d7dca9a955",
          "name" : "type",
          "type" : "SINGLE",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "7c9142ef-d876-48c1-9e62-16d2ba9900e5",
        "name" : "enumAccessors",
        "text" : "public ~className;format=\"capitalize\"~ set~name;format=\"capitalize\"~(~type~ value) { \n\tif (value == null) node.removeProperty(\"~name~\"); \n\telse node.setProperty(\"~name~\", value.name());\n\treturn this;\n}\n\npublic ~type~ get~name;format=\"capitalize\"~() { \n\tif (node.hasProperty(\"~name~\")) return ~type~.valueOf((java.lang.String) node.getProperty(\"~name~\"));\n\treturn null;\n}\n\npublic ~type~ get~name;format=\"capitalize\"~(~type~ defaultValue) { \n\tif (node.hasProperty(\"~name~\")) return ~type~.valueOf((java.lang.String) node.getProperty(\"~name~\"));\n\treturn defaultValue;\n}\n\npublic boolean has~name;format=\"capitalize\"~() { \n\treturn node.hasProperty(\"~name~\");\n}\n\npublic ~className;format=\"capitalize\"~ remove~name;format=\"capitalize\"~() { \n\tnode.removeProperty(\"~name~\");\n\treturn this;\n}",
        "parameters" : [ {
          "uuid" : "eae5e2cc-a8e4-4288-ad82-af4c8a10c360",
          "name" : "className",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "09352b54-811f-4eaf-b3ca-9351c9bf449e",
          "name" : "name",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "37e8b3d1-7fee-4bc8-8385-cf14e6f849d8",
          "name" : "type",
          "type" : "SINGLE",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "548f330d-68f5-40be-a037-16dfea33925b",
        "name" : "referenceAccessors",
        "text" : "public ~className;format=\"capitalize\"~ set~name;format=\"capitalize\"~(~type~ dst) { \n\tfinal org.neo4j.graphdb.Relationship relationship = get~name;format=\"capitalize\"~Relation();\n\tif (relationship != null)  { \n\t\tif (relationship.getOtherNode(node).equals(dst.getNode())) return this;\n\t\trelationship.delete();\n\t}\n\tnode.createRelationshipTo(dst.getNode(), org.neo4j.graphdb.RelationshipType.withName(\"~name~\"));\n\treturn this;\n}\n\npublic ~type~ get~name;format=\"capitalize\"~() { \n\tfinal org.neo4j.graphdb.Relationship relationship = get~name;format=\"capitalize\"~Relation();\n\treturn relationship == null ? null : new ~type~(relationship.getOtherNode(node));\n}\n\npublic ~className;format=\"capitalize\"~ remove~name;format=\"capitalize\"~(~type~ dst) { \n\tfinal java.util.Optional<org.neo4j.graphdb.Relationship> existing = java.util.stream.StreamSupport.stream(node.getRelationships(org.neo4j.graphdb.Direction.OUTGOING, org.neo4j.graphdb.RelationshipType.withName(\"~name~\")).spliterator(), false).filter((r) -> r.getOtherNode(node).equals(dst.getNode())).findAny();\n\texisting.ifPresent(org.neo4j.graphdb.Relationship::delete);\n\treturn this;\n}\n\npublic org.neo4j.graphdb.Relationship get~name;format=\"capitalize\"~Relation() { \n\treturn node.getSingleRelationship(org.neo4j.graphdb.RelationshipType.withName(\"~name~\"), org.neo4j.graphdb.Direction.OUTGOING);\n} ",
        "parameters" : [ {
          "uuid" : "e924a66f-8fd6-40c8-8dd4-de1164611c7a",
          "name" : "className",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "00fe0423-3a52-4575-af15-de18831063c4",
          "name" : "name",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "4a628748-a479-47bc-b82b-c12785c7a3bf",
          "name" : "type",
          "type" : "SINGLE",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "81e00ea3-95be-41d7-b4fe-b9bb7b3028e8",
        "name" : "externalAccessors",
        "text" : "public ~className;format=\"capitalize\"~ set~name;format=\"capitalize\"~(~type~ value) { \n\tthis._~name~ = value;\n\treturn this;\n}\n\npublic ~type~ get~name;format=\"capitalize\"~() { \n\treturn this._~name~;\n}\n\npublic ~type~ get~name;format=\"capitalize\"~(~type~ defaultValue) { \n\treturn this._~name~ == null ? defaultValue : this._~name~;\n}",
        "parameters" : [ {
          "uuid" : "6d9f1a27-e7e5-4122-8b69-84fa1286ee57",
          "name" : "className",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "af662c86-2746-4c4e-b75e-c22b92ea25e8",
          "name" : "name",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "e913733d-ccc4-4db2-8c45-0432944474b8",
          "name" : "type",
          "type" : "SINGLE",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "4c1bf0fd-081b-4e21-942f-4b6b543661da",
        "name" : "incomingReferenceStream",
        "text" : "public java.util.stream.Stream<~type~> getIncoming~name;format=\"capitalize\"~() { \n\treturn java.util.stream.StreamSupport.stream(node.getRelationships(org.neo4j.graphdb.Direction.INCOMING, org.neo4j.graphdb.RelationshipType.withName(\"~name~\")).spliterator(), false).map((relationship) -> new ~type~(relationship.getOtherNode(node)));\n}",
        "parameters" : [ {
          "uuid" : "f97c9a28-d899-4837-8db2-159c2b6bd38e",
          "name" : "type",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "eb1fddd1-9ad4-4ca7-8792-8f207a4cb2a4",
          "name" : "name",
          "type" : "SINGLE",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "e15fdadd-c29b-4680-b71c-1d4219061c8d",
        "name" : "enumListAccessors",
        "text" : "public ~className;format=\"capitalize\"~ add~name;format=\"capitalize\"~(~type~ dst) { \n\tfinal java.util.Optional<org.neo4j.graphdb.Node> existing = java.util.stream.StreamSupport.stream(node.getRelationships(org.neo4j.graphdb.Direction.OUTGOING, org.neo4j.graphdb.RelationshipType.withName(\"~name~\")).spliterator(), false).map((r) -> r.getOtherNode(node)).filter((n) -> dst.equals(n.getProperty(\"value\"))).findAny();\n\tif (existing.isPresent()) return this;\n\tfinal org.neo4j.graphdb.Node newNode = node.getGraphDatabase().createNode(org.neo4j.graphdb.Label.label(\"~type~\"));\n\tnewNode.setProperty(\"value\", dst.name());\n\tnode.createRelationshipTo(newNode, org.neo4j.graphdb.RelationshipType.withName(\"~name~\"));\n\treturn this;\n}\n\npublic java.util.stream.Stream<~type~> get~name;format=\"capitalize\"~() { \n\treturn java.util.stream.StreamSupport.stream(node.getRelationships(org.neo4j.graphdb.Direction.OUTGOING, org.neo4j.graphdb.RelationshipType.withName(\"~name~\")).spliterator(), false).map((relationship) -> ~type~.valueOf(relationship.getOtherNode(node).getProperty(\"value\").toString()));\n} ",
        "parameters" : [ {
          "uuid" : "58e2edaa-56ce-496c-b626-38b97de17eb4",
          "name" : "className",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "be3519a1-b71c-4590-9ba9-41177b05e98a",
          "name" : "name",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "e629809c-d1a2-4d6c-a88d-e79e1850d7ad",
          "name" : "type",
          "type" : "SINGLE",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "0247f33f-954e-4c95-ab1e-c2ef16852b21",
        "name" : "nodeToJsonObject",
        "text" : "public io.vertx.core.json.JsonObject toJsonObject() {\n\tio.vertx.core.json.JsonObject jsonObject = new io.vertx.core.json.JsonObject();\n\tif (node.hasProperty(\"uuid\")) jsonObject.put(\"uuid\", node.getProperty(\"uuid\"));\n\t~properties:{it|if (node.hasProperty(\"~it.name~\")) jsonObject.put(\"~it.name~\", node.getProperty(\"~it.name~\"));};separator=\"\\n\"~\n~refs:{it|\n\tfinal ~it.type~ _~it.name~ = get~it.name;format=\"capitalize\"~();\n\tif (_~it.name~ != null) jsonObject.put(\"~it.name~\", _~it.name~.toJsonObject());\n};separator=\"\\n\"~\n~refList:{it|\n\tfinal io.vertx.core.json.JsonArray _~it.name~ = new io.vertx.core.json.JsonArray();\n\tget~it.name;format=\"capitalize\"~().forEach(element -> _~it.name~.add(element.toJsonObject()));\n\tif (!_~it.name~.isEmpty()) jsonObject.put(\"~it.name~\", _~it.name~);\n};separator=\"\\n\"~\n~primitiveList:{it|\n\tfinal io.vertx.core.json.JsonArray _~it.name~ = new io.vertx.core.json.JsonArray();\n\tget~it.name;format=\"capitalize\"~().forEach(_~it.name~::add);\n\tif (!_~it.name~.isEmpty()) jsonObject.put(\"~it.name~\", _~it.name~);\n};separator=\"\\n\"~\n\treturn jsonObject;\n} ",
        "parameters" : [ {
          "uuid" : "39a299df-676f-490e-b911-df159704c823",
          "name" : "properties",
          "type" : "KVLIST",
          "argumentType" : "Object",
          "keys" : [ {
            "uuid" : "669bcc84-5456-4fe3-b279-7611acb2a139",
            "name" : "name",
            "argumentType" : "Object"
          } ]
        }, {
          "uuid" : "1aadfee9-e4a2-4cef-a120-f1aefd47dba9",
          "name" : "refs",
          "type" : "KVLIST",
          "argumentType" : "Object",
          "keys" : [ {
            "uuid" : "33656d2c-d173-4507-8dac-5fd0a235fcae",
            "name" : "type",
            "argumentType" : "Object"
          }, {
            "uuid" : "7b5266b2-0aaf-486b-944f-feec4ef31a53",
            "name" : "name",
            "argumentType" : "Object"
          } ]
        }, {
          "uuid" : "7f3b19bd-89d4-472f-87a1-2720fd775418",
          "name" : "refList",
          "type" : "KVLIST",
          "argumentType" : "Object",
          "keys" : [ {
            "uuid" : "e2f32b1b-ebbc-4f59-b704-c0262cb6cea5",
            "name" : "name",
            "argumentType" : "Object"
          } ]
        }, {
          "uuid" : "f7b3ba74-eccd-401c-90bc-aa228482f02b",
          "name" : "primitiveList",
          "type" : "KVLIST",
          "argumentType" : "Object",
          "keys" : [ {
            "uuid" : "9bbf9dbe-3b8e-4582-b514-70277aa565c8",
            "name" : "name",
            "argumentType" : "Object"
          } ]
        } ]
      }, {
        "uuid" : "7704c494-fa83-4f9b-b1bb-741a72088738",
        "name" : "deleteNode",
        "text" : "public void deleteTree() {\n~refs:{it|\n\tfinal ~it.type~ _~it.name~ = get~it.name;format=\"capitalize\"~();\n\tif (_~it.name~ != null) _~it.name~.deleteTree();\n};separator=\"\\n\"~\n~refList:{it|\n\tget~it.name;format=\"capitalize\"~().forEach(element -> element.deleteTree());\n};separator=\"\\n\"~\n\tnode.getRelationships(org.neo4j.graphdb.Direction.INCOMING).forEach(org.neo4j.graphdb.Relationship::delete);\n\tnode.delete();\n} ",
        "parameters" : [ {
          "uuid" : "c4cb3511-441a-4f0e-9655-1bd6a30c2ece",
          "name" : "refs",
          "type" : "KVLIST",
          "argumentType" : "Object",
          "keys" : [ {
            "uuid" : "2422ecad-192e-424c-bc01-61cf8c7bb8f8",
            "name" : "type",
            "argumentType" : "Object"
          }, {
            "uuid" : "6cb4a753-27eb-4638-aab9-a09cb491fb90",
            "name" : "name",
            "argumentType" : "Object"
          } ]
        }, {
          "uuid" : "682f21cf-ba86-4a64-b046-1ce0de0adfaa",
          "name" : "refList",
          "type" : "KVLIST",
          "argumentType" : "Object",
          "keys" : [ {
            "uuid" : "1b98cbe9-b072-4013-aa3a-4e9bfcc2cb83",
            "name" : "name",
            "argumentType" : "Object"
          } ]
        } ]
      } ]
    }, {
      "uuid" : "041dcc81-91db-41c1-bacd-ac90f635b371",
      "name" : "NeoFactory",
      "text" : "package ~package~;\n\npublic class ~name;format=\"capitalize\"~ {\n\n\tprivate final org.neo4j.graphdb.GraphDatabaseService db;\n\n\tpublic ~name;format=\"capitalize\"~(java.lang.String dir) { \n\t\tthis(new org.neo4j.graphdb.factory.GraphDatabaseFactory().newEmbeddedDatabaseBuilder(new java.io.File(dir)).setConfig(org.neo4j.graphdb.factory.GraphDatabaseSettings.allow_upgrade, \"true\").newGraphDatabase());\n\t\tRuntime.getRuntime().addShutdownHook(new java.lang.Thread(db::shutdown));\n\t}\n\n\tpublic ~name;format=\"capitalize\"~(org.neo4j.graphdb.GraphDatabaseService db) { \n\t\tthis.db = db;\n\t}\n\n\tpublic org.neo4j.graphdb.GraphDatabaseService getDatabaseService() { \n\t\treturn this.db;\n\t}\n\n\tpublic void doInTransaction(java.util.function.Consumer<org.neo4j.graphdb.Transaction> action) { \n\t\tdoInTransaction(action, java.lang.Throwable::printStackTrace);\n\t}\n\n\tpublic void doInTransaction(java.util.function.Consumer<org.neo4j.graphdb.Transaction> action, java.util.function.Consumer<java.lang.Throwable> onException) { \n\t\ttry (org.neo4j.graphdb.Transaction tx = db.beginTx())  { \n\t\t\taction.accept(tx);\n\t\t\ttx.success();\n\t\t} catch (java.lang.Throwable t)  { \n\t\t\tonException.accept(t);\n\t\t}\n\t}\n\n\tpublic <T> T getInTransaction(java.util.function.Function<org.neo4j.graphdb.Transaction, T> action) {\n\t\treturn getInTransaction(action, throwable -> {\n\t\t\tthrowable.printStackTrace();\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic <T> T getInTransaction(java.util.function.Function<org.neo4j.graphdb.Transaction, T> action, java.util.function.Function<java.lang.Throwable, T> onException) {\n\t\tT returnValue;\n\t\ttry (org.neo4j.graphdb.Transaction tx = db.beginTx()) {\n\t\t\treturnValue = action.apply(tx);\n\t\t\ttx.success();\n\t\t} catch (java.lang.Throwable t) {\n\t\t\treturn onException.apply(t);\n\t\t}\n\t\treturn returnValue;\n\t}\n\n\t~accessors:{it|~it~};separator=\"\\n\\n\"~\n} ",
      "parameters" : [ {
        "uuid" : "2308286f-0426-4e03-a353-3cfbdece14aa",
        "name" : "package",
        "type" : "SINGLE",
        "argumentType" : "Object"
      }, {
        "uuid" : "c981e622-6715-45a6-90e1-b9769e96b73d",
        "name" : "name",
        "type" : "SINGLE",
        "argumentType" : "Object"
      }, {
        "uuid" : "241b72b6-982b-4a5b-bd54-8a0a9a8a2a47",
        "name" : "accessors",
        "type" : "LIST",
        "argumentType" : "Object"
      } ],
      "children" : [ {
        "uuid" : "75d8bdac-df70-443b-8b8a-ce3456b1aae1",
        "name" : "NeoFactoryAccessors",
        "text" : "public ~name;format=\"capitalize\"~ new~name;format=\"capitalize\"~() { \n\treturn new~name;format=\"capitalize\"~(db.createNode(org.neo4j.graphdb.Label.label(\"~name~\")));\n}\n\npublic ~name;format=\"capitalize\"~ new~name;format=\"capitalize\"~(org.neo4j.graphdb.Node node) { \n\treturn new ~name;format=\"capitalize\"~(node);\n}\n\npublic java.util.stream.Stream<~name;format=\"capitalize\"~> findAll~name;format=\"capitalize\"~() { \n\treturn db.findNodes(org.neo4j.graphdb.Label.label(\"~name~\")).stream().map(this::new~name;format=\"capitalize\"~);\n}\n\n~properties:{it|~it~};separator=\"\\n\\n\"~",
        "parameters" : [ {
          "uuid" : "cda5f5bd-9a40-4fdb-a97b-e8a19d3757e2",
          "name" : "name",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "c2372d04-c6e5-4fed-aa61-51b46d2b259b",
          "name" : "properties",
          "type" : "LIST",
          "argumentType" : "Object"
        } ]
      }, {
        "uuid" : "eca7a261-a0f4-40ed-be82-eb6f1c931658",
        "name" : "NeoFactoryPropertyAccessors",
        "text" : "public ~entity;format=\"capitalize\"~ find~entity;format=\"capitalize\"~By~propertyName;format=\"capitalize\"~(~propertyType~ value) {\n\tfinal org.neo4j.graphdb.Node node = db.findNode(org.neo4j.graphdb.Label.label(\"~entity~\"), \"~propertyName~\", value~if(isEnum)~.name()~endif~);\n\treturn node == null ? null : new ~entity;format=\"capitalize\"~(node);\n}\n\npublic ~entity;format=\"capitalize\"~ findOrCreate~entity;format=\"capitalize\"~By~propertyName;format=\"capitalize\"~(~propertyType~ value) {\n\tfinal ~entity;format=\"capitalize\"~ existing = find~entity;format=\"capitalize\"~By~propertyName;format=\"capitalize\"~(value);\n\treturn existing == null ? new~entity;format=\"capitalize\"~().set~propertyName;format=\"capitalize\"~(value) : existing;\n}\n\npublic java.util.stream.Stream<~entity;format=\"capitalize\"~> findAll~entity;format=\"capitalize\"~By~propertyName;format=\"capitalize\"~(~propertyType~ value) {\n\treturn db.findNodes(org.neo4j.graphdb.Label.label(\"~entity~\"), \"~propertyName~\", value~if(isEnum)~.name()~endif~).stream().map(this::new~entity;format=\"capitalize\"~);\n} ",
        "parameters" : [ {
          "uuid" : "6175ef30-649d-4dda-8fc3-c8b96b3e9bc0",
          "name" : "entity",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "484361a9-f990-4925-89aa-b0db5899f62a",
          "name" : "propertyName",
          "type" : "SINGLE",
          "argumentType" : "String"
        }, {
          "uuid" : "47a78177-3b0e-4756-89ad-d4510948bade",
          "name" : "propertyType",
          "type" : "SINGLE",
          "argumentType" : "Object"
        }, {
          "uuid" : "25248602-7165-4067-948c-f8371964310e",
          "name" : "isEnum",
          "type" : "SINGLE",
          "argumentType" : "Boolean"
        } ]
      } ]
    } ]
  }, {
    "uuid" : "c01a688d-8913-48c5-b4b0-53efded2fe01",
    "name" : "Types",
    "text" : "",
    "children" : [ {
      "uuid" : "74b2e718-c0c2-4242-b298-b0d1b1272265",
      "name" : "GraphDatabaseFactory",
      "text" : "org.neo4j.graphdb.factory.GraphDatabaseFactory",
      "parameters" : [ ]
    }, {
      "uuid" : "aa89018f-fb49-4f93-ba1a-c3007b30c46d",
      "name" : "GraphDatabaseSettings",
      "text" : "org.neo4j.graphdb.factory.GraphDatabaseSettings",
      "parameters" : [ ]
    }, {
      "uuid" : "ae93592d-bc38-4920-a58a-213599b01a57",
      "name" : "GraphDatabaseService",
      "text" : "org.neo4j.graphdb.GraphDatabaseService",
      "parameters" : [ ]
    }, {
      "uuid" : "249faef2-c77c-4a11-a64c-d565a9456eaa",
      "name" : "Node",
      "text" : "org.neo4j.graphdb.Node",
      "parameters" : [ ]
    }, {
      "uuid" : "5fc931ca-f30e-4ff5-bfe4-b4fa404097de",
      "name" : "Label",
      "text" : "org.neo4j.graphdb.Label",
      "parameters" : [ ]
    }, {
      "uuid" : "8c239118-a68d-41c4-ad90-97f1467c0237",
      "name" : "Direction",
      "text" : "org.neo4j.graphdb.Direction",
      "parameters" : [ ]
    }, {
      "uuid" : "c1ff9e32-40a3-4fa4-80d6-08ac6d0bf2c3",
      "name" : "Relationship",
      "text" : "org.neo4j.graphdb.Relationship",
      "parameters" : [ ]
    }, {
      "uuid" : "fec84bd1-4dbc-488a-a807-01869d4d6a9e",
      "name" : "RelationshipType",
      "text" : "org.neo4j.graphdb.RelationshipType",
      "parameters" : [ ]
    }, {
      "uuid" : "5543c5f3-f103-4e5e-b110-ecdcd6ce3572",
      "name" : "Transaction",
      "text" : "org.neo4j.graphdb.Transaction",
      "parameters" : [ ]
    } ]
  } ]
}