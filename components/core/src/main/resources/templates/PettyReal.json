{
  "uuid" : "87156b4e-7d3d-48ad-99be-cd6b367cb80d",
  "name" : "PettyReal",
  "delimiter" : "~",
  "templates" : [ {
    "uuid" : "8986c7d5-68e9-4d8b-a068-248816fa81ee",
    "name" : "Page",
    "text" : "import React from 'react';\nimport { inject, observer } from 'mobx-react';\n~components:{it|import ~it.name~ from '../components/~it.name~';};separator=\"\\n\"~\n\n~if(stores)~@inject(~stores:{it|'~it~'};separator=\",\"~)~endif~\n@observer\nclass ~name~ extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t~constructorStatements:{it|~it~};separator=\"\\n\"~\n\t}\n\n\tcomponentDidMount() {\n\t\t~componentDidMountStatements:{it|~it~};separator=\"\\n\"~\n\t\t// this.props.siteStore.load~name~(this.props.match.params.id);\n\t}\n\n\trender() {\n\n\t\t~renderConst:{it|~it~};separator=\"\\n\"~\n\n~if(renderCondition)~\n\tif(~renderCondition~)\n\t\treturn ( \n\t\t\t~renderTrue~\n\t\t);\n\telse\n\t\treturn (\n\t\t\t~renderFalse~\n\t\t);\n~else~\n\treturn (\n\t\t~renderElement~\n\t);\n~endif~\n\t}\n}\n\nexport default (~name~); ",
    "parameters" : [ {
      "uuid" : "b77e7eab-d7e6-44a3-87a3-5a46c2e2ec54",
      "name" : "components",
      "type" : "KVLIST",
      "argumentType" : "Object",
      "keys" : [ {
        "uuid" : "4dba8c79-8f9c-422a-8daa-d63cd3b7ee0e",
        "name" : "name",
        "argumentType" : "Object"
      } ]
    }, {
      "uuid" : "20a260b7-55ad-447f-96d3-db6a9626af7b",
      "name" : "stores",
      "type" : "LIST",
      "argumentType" : "Object"
    }, {
      "uuid" : "18b0499f-1a57-41e0-be3d-6386478df40c",
      "name" : "name",
      "type" : "SINGLE",
      "argumentType" : "Object"
    }, {
      "uuid" : "a645bc6b-11b9-4c34-ac71-839b92bf51ca",
      "name" : "constructorStatements",
      "type" : "LIST",
      "argumentType" : "Object"
    }, {
      "uuid" : "9cc74b7a-6a2f-4233-9611-8f999a987705",
      "name" : "componentDidMountStatements",
      "type" : "LIST",
      "argumentType" : "Object"
    }, {
      "uuid" : "2134f894-e930-4c34-bb8e-2803a6879953",
      "name" : "renderConst",
      "type" : "LIST",
      "argumentType" : "Object"
    }, {
      "uuid" : "2d9b1f83-9afe-4b87-ada6-5af11ca87f52",
      "name" : "renderCondition",
      "type" : "SINGLE",
      "argumentType" : "Object"
    }, {
      "uuid" : "d3ab0e7c-42c0-46d7-816e-b425d7aeefd6",
      "name" : "renderTrue",
      "type" : "SINGLE",
      "argumentType" : "Object"
    }, {
      "uuid" : "91f02041-abe3-40d2-932c-37150a5f8b94",
      "name" : "renderFalse",
      "type" : "SINGLE",
      "argumentType" : "Object"
    }, {
      "uuid" : "0c666a1b-e5d4-416d-a645-1763ea8a9d15",
      "name" : "renderElement",
      "type" : "SINGLE",
      "argumentType" : "Object"
    } ],
    "children" : [ {
      "uuid" : "e3602da0-5e86-458e-8e44-995a78c4edf3",
      "name" : "RenderConst",
      "text" : "const { ~elements:{it|~it~};separator=\",\"~ } = this.props.~source~; ",
      "parameters" : [ {
        "uuid" : "6940afc1-7ace-4b77-9647-b2f09ca9d179",
        "name" : "elements",
        "type" : "LIST",
        "argumentType" : "Object"
      }, {
        "uuid" : "33b2cde1-9df4-41ac-81d5-91dd1127b05c",
        "name" : "source",
        "type" : "SINGLE",
        "argumentType" : "Object"
      } ]
    } ]
  }, {
    "uuid" : "d4b55bb0-aa23-454e-84ac-4958b3fe577a",
    "name" : "components",
    "text" : "",
    "children" : [ {
      "uuid" : "cbe1eac7-11be-4c09-a983-cf23fcce0fd7",
      "name" : "NavigationBar",
      "text" : "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport UserMenu from './UserMenu.js';\n\nconst useStyles = theme => ({\n\tnews: {\n\t\tflex: 1\n\t}\n});\n\nconst LoginLink = React.forwardRef( (props, ref) => (\n\t<Link innerRef={ ref } to=\"/login\" { ...props } />\n));\n\nconst LogoutLink = React.forwardRef( (props, ref) => (\n\t<Link innerRef={ ref } to=\"/logout\" { ...props } />\n));\n\nconst LoggedOutView = props => {\n\tif (!props.currentUser)  {\n\t\treturn (<Button color=\"inherit\" component={ LoginLink }>\n\t\t\tLogin\n\t\t</Button>);\n\t}\n\treturn null;\n}\n\nconst LoggedInView = props => {\n\tif (props.currentUser)  {\n\t\treturn (<Button color=\"inherit\" component={ LogoutLink }>\n\t\t\tLogout\n\t\t</Button>);\n\t}\n\treturn null;\n}\n\n@inject('userStore', 'appStore')\n@observer\n@withStyles(useStyles)\nclass NavigationBar extends React.Component {\n\n\tconstructor(){\n\t\tsuper();\n\t}\n\n\trender() {\n\t\treturn ( \n\t\t\t<div>\n\t\t\t\t<AppBar color='primary' position='static'>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<UserMenu currentUser={ this.props.userStore.currentUser } />\n\t\t\t\t\t\t<Typography variant=\"h6\" className={ this.props.classes.news }>~header~</Typography>\n\t\t\t\t\t\t<LoggedOutView currentUser={ this.props.userStore.currentUser } />\n\t\t\t\t\t\t<LoggedInView currentUser={ this.props.userStore.currentUser } />\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default (NavigationBar); ",
      "parameters" : [ {
        "uuid" : "7aceda70-5eb4-470e-a5f7-2d44cca8f79b",
        "name" : "header",
        "type" : "SINGLE",
        "argumentType" : "Object"
      } ]
    }, {
      "uuid" : "1556e164-55ae-438c-bfe5-cc27aa9b95e5",
      "name" : "UserMenu",
      "text" : "import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst LoginLink = React.forwardRef( (props, ref) => (\n\t<Link innerRef={ ref } to=\"/login\" { ...props } />\n));\n\nconst LogoutLink = React.forwardRef( (props, ref) => (\n\t<Link innerRef={ ref } to=\"/logout\" { ...props } />\n));\n\nexport default function UserMenu(props) {\n\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tfunction handleClick(event) {\n\t\tsetAnchorEl(event.currentTarget);\n\t}\n\n\tfunction handleClose() {\n\t\tsetAnchorEl(null);\n\t}\n\n\tif (!props.currentUser)  {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" aria-label=\"Menu\" onClick={handleClick}>\n\t\t\t\t\t<MenuIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t\t<MenuItem component={ LoginLink } onClick={handleClose}>Login</MenuItem>\n\t\t\t\t</Menu>\n\t\t\t</div>);\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" aria-label=\"Menu\" onClick={handleClick}>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t\t{props.currentUser.menus.map((e, i) => (<MenuItem key={e.key} component={ React.forwardRef( (props, ref) => (<Link innerRef={ ref } to={e.url} { ...props } />)) } onClick={handleClose}> {e.label} </MenuItem>))}\n\t\t\t\t\t<MenuItem component={ LogoutLink } onClick={handleClose}> Logout </MenuItem> \n\t\t\t\t</Menu>\n\t\t\t</div>);\n\t}\n} ",
      "parameters" : [ ]
    }, {
      "uuid" : "ff4f8a9d-a753-44d3-8bd8-e934d1206e16",
      "name" : "LoginForm",
      "text" : "import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport ListErrors from './ListErrors.js';\nimport Copyright from './Copyright.js';\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\t\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function LoginForm(props) {\n\n\tconst classes = useStyles();\n\tconst { values, errors, inProgress } = props.authStore;\n\tconst { onSubmit } = props;\n\n\treturn (\n\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<ListErrors errors={errors} />\n\t\t\t<div className={classes.paper}>\n\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tLog in\n\t\t\t\t</Typography>\n\t\t\t\t<form className={ classes.form } onSubmit={ onSubmit } noValidate>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={ values.username }\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\tautoFocus />\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={ values.password }\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\" />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\">\n\t\t\t\t\t\tLog in\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<Box mt={8}>\n\t\t\t\t<Copyright />\n\t\t\t</Box>\n\t\t</Container>\n\t);\n} ",
      "parameters" : [ ]
    }, {
      "uuid" : "8efb91c3-bb42-48f2-9d8b-7c37f329e9d9",
      "name" : "ListErrors",
      "text" : "import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = theme => ({\n\terrors: {\n\t\tcolor: 'red'\n\t}\n});\n\n@withStyles(useStyles)\nclass ListErrors extends React.Component {\n\n\trender() {\n\n\t\tconst errors = this.props.errors;\n\n\t\tif (errors) \n\t\t\treturn (\n\t\t\t\t<ul className={ this.props.classes.errors }> { Object.keys(errors).map(key => { return (<li key={key}><Typography>{errors[key]}</Typography></li>);}) }\n\t\t\t\t</ul>\n\t\t\t);\n\n\t\treturn null;\n\t}\n}\n\nexport default ListErrors; ",
      "parameters" : [ ]
    }, {
      "uuid" : "3c6d9c09-a4c5-462d-951d-81c533404793",
      "name" : "Copyright",
      "text" : "import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n\n\treturn (\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t{'Copyright © ~companyName~ '}\n\t\t\t{new Date().getFullYear()}\n\t\t</Typography>\n\t);\n} ",
      "parameters" : [ {
        "uuid" : "0fc960bf-5b1d-4b0a-b372-a13f2e9d2398",
        "name" : "companyName",
        "type" : "SINGLE",
        "argumentType" : "Object"
      } ]
    }, {
      "uuid" : "20c00688-5d82-45b2-923a-9772f0b2b737",
      "name" : "LogoutForm",
      "text" : "import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function SignOut(props) {\n\n\tconst classes = useStyles();\n\tconst { onSubmit } = props;\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<div className={classes.paper}>\n\t\t\t\t<form className={classes.form} noValidate onSubmit={ onSubmit }>\t\t\t\t\t\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit} >\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Container>\n\t);\n} ",
      "parameters" : [ ]
    } ]
  }, {
    "uuid" : "c3789574-8160-46a0-aff4-54d88f00b669",
    "name" : "Pages",
    "text" : "",
    "children" : [ {
      "uuid" : "d5cfadd2-d9e1-4af9-93fd-87fedca3638a",
      "name" : "LoginPage",
      "text" : "import { withRouter } from 'react-router-dom';\nimport React from 'react';\n\nimport { inject, observer } from 'mobx-react';\n\nimport LoginForm from '../components/LoginForm.js';\n\n@withRouter\n@inject('authStore')\n@observer\nclass LoginPage extends React.Component {\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.handleSubmitForm = this.handleSubmitForm.bind(this);\n\t\tthis.handleUsernameChange = this.handleUsernameChange.bind(this);\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\n\t}\n\n\thandleSubmitForm = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.authStore.login().then(() => this.props.history.replace('/')).catch(e => {});\n\t}\n\n\thandleUsernameChange = (e) => {\n\t\tthis.props.authStore.setUsername(e.target.value);\n\t}\n\n\thandlePasswordChange = (e) => {\n\t\tthis.props.authStore.setPassword(e.target.value);\n\t}\n\n\trender() {\n\t\treturn (<LoginForm authStore={ this.props.authStore } onSubmit={ this.handleSubmitForm } />);\n\t}\n}\n\nexport default (LoginPage); ",
      "parameters" : [ ]
    }, {
      "uuid" : "f05e1147-cca8-48fe-8924-a0513ca64127",
      "name" : "LogoutPage",
      "text" : "import { withRouter } from 'react-router-dom';\nimport React from 'react';\n\nimport { inject, observer } from 'mobx-react';\n\nimport LogoutForm from '../components/LogoutForm';\n\n@withRouter\n@inject('authStore')\n@observer\nclass LogoutPage extends React.Component {\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.handleSubmitForm = this.handleSubmitForm.bind(this);\n\t}\n\n\thandleSubmitForm = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.authStore.logout().then(() => this.props.history.replace('/')).catch(e => {});\n\t}\n\n\trender() {\n\t\treturn (<LogoutForm authStore={ this.props.authStore } onSubmit={ this.handleSubmitForm } />);\n\t}\n}\n\nexport default (LogoutPage); ",
      "parameters" : [ ]
    } ]
  }, {
    "uuid" : "14d182ed-63d3-41fd-bfba-92cb78e679f9",
    "name" : "stores",
    "text" : "",
    "children" : [ {
      "uuid" : "0d8e8a98-9550-4241-a594-2b4d79d0a93c",
      "name" : "AppStore",
      "text" : "import { observable, action,  reaction } from 'mobx';\nimport agent from '../Agent.js';\n\nclass AppStore {\n\n\t@observable loading;\n\t@observable errors = undefined;\n\t@observable appName = '~appName~';\n\t@observable token = window.localStorage.getItem('jwt');\n\t@observable appLoaded = false;\n\n\tconstructor() {\n\t\treaction(() => this.token, (token) => { if (token) window.localStorage.setItem('jwt',token); else window.localStorage.removeItem('jwt'); });\n\t}\n\n\t@action setToken(token) {\n\t\tthis.token = token;\n\t}\n\n\t@action setAppLoaded() {\n\t\tthis.appLoaded = true;\n\t}\n}\n\nexport default new AppStore(); ",
      "parameters" : [ {
        "uuid" : "fead5d32-a2ae-4385-ba06-610425cc8bd2",
        "name" : "appName",
        "type" : "SINGLE",
        "argumentType" : "Object"
      } ]
    }, {
      "uuid" : "2806754b-7e78-42d5-82e1-9e8edbfc6321",
      "name" : "AuthStore",
      "text" : "import { observable, action,  reaction } from 'mobx';\nimport agent from '../Agent';\nimport userStore from './UserStore';\nimport appStore from './AppStore';\n\nclass AuthStore {\n\n\t@observable inProgress = false;\n\t@observable errors = undefined;\n\t@observable values = { username: 'geirove', password: 'geirove' };\n\n\tconstructor() {\n\t}\n\n\t@action setUsername(username) {\n\t\tthis.values.username = username;\n\t}\n\n\t@action setPassword(password) {\n\t\tthis.values.password = password;\n\t}\n\n\t@action reset() {\n\t\tthis.values.username = '';\n\t\tthis.values.password = '';\n\t\tthis.errors = undefined;\n\t}\n\n\t@action login() {\n\t\tthis.inProgress = true;;\n\t\tthis.errors = undefined;\n\t\treturn agent.Auth.login(this.values.username, this.values.password)\n\t\t\t\t.then(({ user }) => appStore.setToken(user.token))\n\t\t\t\t.then(() => userStore.pullUser())\n\t\t\t\t.catch(action((err) => {\n\t\t\t\t\tthis.errors = err.response && err.response.body && err.response.body.errors;\n\t\t\t\t\tthrow err;\n\t\t\t\t}))\n\t\t\t\t.finally(action(() => this.inProgress = false));\n\t}\n\n\t@action logout() {\n\t\tappStore.setToken(undefined)\n\t\tuserStore.forgetUser();\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport default new AuthStore(); ",
      "parameters" : [ ]
    }, {
      "uuid" : "3afa85a3-e070-4288-9f3d-b953d03461bd",
      "name" : "UserStore",
      "text" : "import { observable, action,  reaction } from 'mobx';\nimport agent from '../Agent';\n\nclass UserStore {\n\n\t@observable loading;\n\t@observable errors = undefined;\n\t@observable currentUser;\n\t@observable updatingUser;\n\t@observable updatingUserErrors;\n\n\tconstructor() {\n\t}\n\n\t@action pullUser() {\n\t\tthis.loading = true;\n\t\tthis.errors = undefined;\n\t\treturn agent.Auth.current().then(action(({ user }) => this.currentUser = user)).finally(action(() => this.loadingUser = false));\n\t}\n\n\t@action updateUser(newUser) {\n\t\tthis.updatingUser = true;\n\t\treturn agent.Auth.save(newUser).then(action(({ user }) => this.currentUser = user)).finally(action(() => this.updatingUser = false));\n\t}\n\n\t@action forgetUser() {\n\t\tthis.currentUser = undefined;\n\t}\n}\n\nexport default new UserStore(); ",
      "parameters" : [ ]
    } ]
  }, {
    "uuid" : "ebf3951d-426f-4282-996d-b0eec2f29a7f",
    "name" : "WebVerticle",
    "text" : "package ~packageName~;\n\nimport ~packageName~.api.LoginRequest;\nimport ~packageName~.api.UserSession;\nimport ~packageName~.domain.SSLDeploymentSettings;\nimport ~packageName~.domain.ServerDeploymentOptions;\nimport ~packageName~.domain.UserDeploymentSettings;\nimport io.netty.handler.codec.http.HttpResponseStatus;\nimport io.vertx.core.AbstractVerticle;\nimport io.vertx.core.Future;\nimport io.vertx.core.http.HttpServerOptions;\nimport io.vertx.core.json.JsonObject;\nimport io.vertx.core.net.PemKeyCertOptions;\nimport io.vertx.ext.auth.KeyStoreOptions;\nimport io.vertx.ext.auth.jwt.JWTAuth;\nimport io.vertx.ext.auth.jwt.JWTAuthOptions;\nimport io.vertx.ext.jwt.JWTOptions;\nimport io.vertx.ext.web.Router;\nimport io.vertx.ext.web.RoutingContext;\nimport io.vertx.ext.web.handler.BodyHandler;\nimport io.vertx.ext.web.handler.JWTAuthHandler;\nimport io.vertx.ext.web.handler.SessionHandler;\nimport io.vertx.ext.web.handler.StaticHandler;\nimport io.vertx.ext.web.sstore.LocalSessionStore;\n\nimport java.io.File;\nimport java.util.Optional;\nimport java.util.concurrent.atomic.AtomicInteger;\n\nimport static ~packageName~.PasswordUtils.verifyUserPassword;\nimport static ~packageName~.WebUtils.*;\nimport static ~packageName~.api.WebApiJsonFactory.*;\nimport static io.netty.handler.codec.http.HttpResponseStatus.*;\n\npublic class ~name~ extends AbstractVerticle {\n\n\tprotected final static org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(~name~.class);\n\n\t@Override\n\tpublic void start(Future<Void> startFuture) throws Exception {\n\t\tlog.info(\"starting ~name~\");\n\n\t\tfinal ServerDeploymentOptions deploymentOptions = new ServerDeploymentOptions(config());\n\t\tfinal Optional<SSLDeploymentSettings> ssl = Optional.ofNullable(deploymentOptions.getSsl());\n\n\t\tfinal KeyStoreOptions keyStoreOptions = new KeyStoreOptions().\n\t\t\t\t\tsetPath(deploymentOptions.getJwt().getPath()).\n\t\t\t\t\tsetPassword(deploymentOptions.getJwt().getPassword()).\n\t\t\t\t\tsetType(deploymentOptions.getJwt().getType());\n\n\t\tfinal JWTAuthOptions jwtAuthOptions = new JWTAuthOptions().setKeyStore(keyStoreOptions);\n\t\tfinal JWTAuth auth = JWTAuth.create(vertx, jwtAuthOptions);\n\n\t\tfinal Router router = Router.router(vertx);\n\t\trouter.route().handler(BodyHandler.create());\n\t\trouter.route().handler(SessionHandler.create(LocalSessionStore.create(vertx)));\n\t\trouter.post(\"/login\").handler(routingContext -> login(routingContext, auth));\n\t\trouter.route(\"/api/*\").handler(JWTAuthHandler.create(auth, \"/login\"));\n\t\trouter.get(\"/user\").handler(this::getUser);\n\t\trouter.get(\"/images/:name\").handler(this::getImage);\n\t\t~endpoints:{it|router.~it.action~(\"~it.route~\").handler(this::~it.handler~);};separator=\"\\n\"~\n\t\trouter.get(\"/api/current\").handler(this::getCurrent);\n\t\trouter.get(\"/report/current\").handler(this::getReport);\n\n\t\tfinal HttpServerOptions serverOptions = new HttpServerOptions();\n\n\t\tssl.ifPresent(sslDeploymentSettings ->\n\t\t\t\t\tserverOptions\n\t\t\t\t\t\t\t\t.setSsl(true)\n\t\t\t\t\t\t\t\t.setPemKeyCertOptions(\n\t\t\t\t\t\t\t\t\t\tnew PemKeyCertOptions().\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetKeyPath(sslDeploymentSettings.getKey()).\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCertPath(sslDeploymentSettings.getCert())));\n\n\t\tfinal StaticHandler staticHandler = StaticHandler.create();\n\t\tstaticHandler.setWebRoot(deploymentOptions.getWebRoot());\n\t\tstaticHandler.setCachingEnabled(false);\n\t\trouter.route(\"/*\").handler(staticHandler);\n\n\t\tvertx.createHttpServer(serverOptions).requestHandler(router::accept).listen(deploymentOptions.getPort());\n\n\t\tlog.info(\"server running on \" + (ssl.isPresent() ? \"https\" : \"http\") + \"://\" + deploymentOptions.getTcpHost() + \":\" + deploymentOptions.getPort());\n\t\tlog.info(\"server running on \" + (ssl.isPresent() ? \"https\" : \"http\") + \"://\" + deploymentOptions.getTcpName(\"pettyresidential.info\") + \":\" + deploymentOptions.getPort());\n\n\t\tstartFuture.succeeded();\n\t}\n\n\tprivate void login(RoutingContext routingContext, JWTAuth auth) {\n\t\tWebUtils.debug(\"login\", routingContext);\n\n\t\tfinal LoginRequest loginRequest = newLoginRequest(routingContext.getBodyAsJson());\n\t\tfinal ServerDeploymentOptions deploymentOptions = new ServerDeploymentOptions(config());\n\n\t\tfinal Optional<UserDeploymentSettings> userFound = deploymentOptions.getJwt().getUsers()\n\t\t\t\t\t.filter(userDeploymentSettings -> userDeploymentSettings.getUsername().equals(loginRequest.getUsername()))\n\t\t\t\t\t.findFirst();\n\n\t\tif (!userFound.isPresent()) {\n\t\t\t\tsendErrors(routingContext, UNAUTHORIZED, \"User credentials not found\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tfinal boolean passwordMatch = verifyUserPassword(loginRequest.getPassword(), userFound.get().getPassword(), userFound.get().getSalt());\n\n\t\tif (!passwordMatch) {\n\t\t\t\tsendFailResponse(routingContext, BAD_REQUEST, \"User credentials not found\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tuserFound.get()\n\t\t\t\t\t.setToken(auth.generateToken(\n\t\t\t\t\t\t\t\tnewJWTPayload()\n\t\t\t\t\t\t\t\t\t\t.setSub(userFound.get().getUsername())\n\t\t\t\t\t\t\t\t\t\t.getJsonObject(),\n\t\t\t\t\t\t\t\tnew JWTOptions()\n\t\t\t\t\t\t\t\t\t\t.setExpiresInMinutes(deploymentOptions.getJwt().getExpiresInMinutes())\n\t\t\t\t\t\t\t\t\t\t.setSubject(userFound.get().getUsername())));\n\n\t\tfinal UserSession userSession = newUserSession()\n\t\t\t\t\t.setToken(userFound.get().getToken())\n\t\t\t\t\t.setUsername(userFound.get().getUsername());\n\n\t\tsetUserMenus(userFound.get(), userSession);\n\n\t\tsendResponse(routingContext, OK, new JsonObject().put(\"user\", userSession.getJsonObject()));\n\t}\n\n\tprivate void getUser(RoutingContext routingContext) {\n\n\t\tfinal String authorization = routingContext.request().getHeader(\"Authorization\");\n\t\tfinal String token = authorization == null ? null : authorization.substring(7).trim();\n\n\t\tfinal ServerDeploymentOptions deploymentOptions = new ServerDeploymentOptions(config());\n\t\tfinal Optional<UserDeploymentSettings> userFound = deploymentOptions.getJwt().getUsers()\n\t\t\t\t\t.filter(userDeploymentSettings -> userDeploymentSettings.getToken()!=null)\n\t\t\t\t\t.filter(userDeploymentSettings -> userDeploymentSettings.getToken().equals(token))\n\t\t\t\t\t.findFirst();\n\n\t\tif (!userFound.isPresent()) {\n\t\t\t\tsendFailResponse(routingContext, BAD_REQUEST, \"User session not found\");\n\t\t\t\treturn;\n\t\t}\n\n\t\tfinal UserSession userSession = newUserSession()\n\t\t\t\t\t.setToken(userFound.get().getToken())\n\t\t\t\t\t.setUsername(userFound.get().getUsername())\n\t\t\t\t\t.addMenus(newUserMenu()\n\t\t\t\t\t.setLabel(\"Trends\")\n\t\t\t\t\t.setUrl(\"/trends\")\n\t\t\t\t\t.setKey(1));\n\n\t\tsetUserMenus(userFound.get(), userSession);\n\n\t\tsendResponse(routingContext, OK, new JsonObject().put(\"user\", userSession.getJsonObject()));\n\t}\n\n\tprivate void getImage(RoutingContext routingContext) {\n\t\troutingContext.response()\n\t\t\t\t\t.putHeader(\"Content-Type\", \"image/jpg\")\n\t\t\t\t\t.sendFile(new File(\".\", routingContext.pathParam(\"name\")).getAbsolutePath());\n\t}\n\n\tprivate void getCurrent(RoutingContext routingContext) {\n\n\t}\n\n\t~endpoints:{it|~it.handlerImpl~};separator=\"\\n\\n\"~\n\n\tprivate void getReport(RoutingContext routingContext) {\n\t\troutingContext.response()\n\t\t\t\t\t.putHeader(\"Content-Type\", \"application/pdf\")\n\t\t\t\t\t.setStatusCode(HttpResponseStatus.OK.code())\n\t\t\t\t\t.sendFile(\"./report.pdf\");\n\t}\n\n\tprivate void setUserMenus(UserDeploymentSettings settings, UserSession session) {\n\n\t\tfinal AtomicInteger key = new AtomicInteger(0);\n\t\tsettings.getAccess().forEach(userAccess -> session.addMenus(newUserMenu().setKey(key.incrementAndGet()).setUrl(userAccess.getUrl()).setLabel(userAccess.getLabel())));\n\t}\n} ",
    "parameters" : [ {
      "uuid" : "a1646aaf-283a-4cd3-bff1-3b6597402220",
      "name" : "packageName",
      "type" : "SINGLE",
      "argumentType" : "Object"
    }, {
      "uuid" : "4cbdca7f-cf2c-4658-82aa-b986309315fc",
      "name" : "name",
      "type" : "SINGLE",
      "argumentType" : "Object"
    }, {
      "uuid" : "29519477-fe65-4fa3-ba23-e9e1bee0c478",
      "name" : "endpoints",
      "type" : "KVLIST",
      "argumentType" : "Object",
      "keys" : [ {
        "uuid" : "cefeb53a-9717-45ba-a5b7-05971ad9cee0",
        "name" : "action",
        "argumentType" : "Object"
      }, {
        "uuid" : "8463208c-3215-458f-9b77-c800febf6f8c",
        "name" : "route",
        "argumentType" : "Object"
      }, {
        "uuid" : "168f232f-b46d-42ae-b8ef-89bf3e302ca8",
        "name" : "handler",
        "argumentType" : "Object"
      }, {
        "uuid" : "2d63d726-7f76-4ce5-bfc2-78a4cd4ae045",
        "name" : "handlerImpl",
        "argumentType" : "Object"
      } ]
    } ],
    "children" : [ {
      "uuid" : "7462c8f1-f031-4036-aca9-785b5755ba43",
      "name" : "EndpointHandler",
      "text" : "private void ~name~(RoutingContext routingContext) {\n\tlog.info(\"handle ~name~\");\n\t~statements:{it|~it~};separator=\"\\n\\n\"~\n} ",
      "parameters" : [ {
        "uuid" : "59544046-a96a-4627-a15b-b921241c65fa",
        "name" : "name",
        "type" : "SINGLE",
        "argumentType" : "Object"
      }, {
        "uuid" : "94e401ea-8abc-491f-9572-c619ba9b20ae",
        "name" : "statements",
        "type" : "LIST",
        "argumentType" : "Object"
      } ]
    } ]
  }, {
    "uuid" : "54a1c3ab-7140-4f8a-a119-c9dbf8e52b32",
    "name" : "SystemDescription",
    "text" : "~appName~\n~appTitle~\n\nRoutes:\n\n\nPages:\n~pages:{it|~it~};separator=\"\\n\\n\"~ ",
    "parameters" : [ {
      "uuid" : "3d85b8a8-b703-4f67-8f98-38b29ee13629",
      "name" : "appName",
      "type" : "SINGLE",
      "argumentType" : "Object"
    }, {
      "uuid" : "736a949d-87e9-4191-adf3-d8c43d03b907",
      "name" : "appTitle",
      "type" : "SINGLE",
      "argumentType" : "Object"
    }, {
      "uuid" : "1e6e0edf-e536-41c4-980b-753b014d532a",
      "name" : "pages",
      "type" : "LIST",
      "argumentType" : "Object"
    } ],
    "children" : [ {
      "uuid" : "911fd9ad-fe39-42c3-999a-c041d247dd7b",
      "name" : "SystemPage",
      "text" : "Page:\n\n~name~ ",
      "parameters" : [ {
        "uuid" : "f349d725-19a8-4a45-a89b-31808df87c62",
        "name" : "name",
        "type" : "SINGLE",
        "argumentType" : "Object"
      } ]
    } ]
  } ]
}