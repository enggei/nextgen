package com.generator.generators.html5;

import org.stringtemplate.v4.ST;
import org.stringtemplate.v4.STGroup;
import org.stringtemplate.v4.STGroupString;

import java.util.concurrent.atomic.AtomicBoolean;

/**
 * Wraps STGroup-methods based on 'html5.stg' file<br/>
 */
public final class Html5Group {

   private final STGroup stGroup;
   private final char delimiter;

	public Html5Group() {
		this(new STGroupString(stg));
   }

   public Html5Group(STGroup stGroup) {
      this.stGroup = stGroup;
      this.stGroup.registerRenderer(String.class, new DefaultAttributeRenderer());
      this.delimiter = stGroup.delimiterStartChar;
   }

   public Html5Group(java.io.File templateFile) {
   	this.stGroup = new org.stringtemplate.v4.STGroupFile(templateFile.getAbsolutePath());
	   this.stGroup.registerRenderer(String.class, new DefaultAttributeRenderer());
	   this.delimiter = stGroup.delimiterStartChar;
	}

   public STGroup getSTGroup() {
      return stGroup;
   }

   public char getDelimiter() {
      return delimiter;
   }

	public interface Html5GroupTemplate {

	}

   public detailsST newdetails() {
      return new detailsST(stGroup);
   }

   public audioST newaudio() {
      return new audioST(stGroup);
   }

   public theadST newthead() {
      return new theadST(stGroup);
   }

   public timeST newtime() {
      return new timeST(stGroup);
   }

   public thST newth() {
      return new thST(stGroup);
   }

   public trST newtr() {
      return new trST(stGroup);
   }

   public trackST newtrack() {
      return new trackST(stGroup);
   }

   public titleST newtitle() {
      return new titleST(stGroup);
   }

   public uST newu() {
      return new uST(stGroup);
   }

   public ulST newul() {
      return new ulST(stGroup);
   }

   public ttST newtt() {
      return new ttST(stGroup);
   }

   public videoST newvideo() {
      return new videoST(stGroup);
   }

   public wbrST newwbr() {
      return new wbrST(stGroup);
   }

   public varST newvar() {
      return new varST(stGroup);
   }

   public articleST newarticle() {
      return new articleST(stGroup);
   }

   public acronymST newacronym() {
      return new acronymST(stGroup);
   }

   public addressST newaddress() {
      return new addressST(stGroup);
   }

   public baseST newbase() {
      return new baseST(stGroup);
   }

   public asideST newaside() {
      return new asideST(stGroup);
   }

   public appletST newapplet() {
      return new appletST(stGroup);
   }

   public areaST newarea() {
      return new areaST(stGroup);
   }

   public basefontST newbasefont() {
      return new basefontST(stGroup);
   }

   public aST newa() {
      return new aST(stGroup);
   }

   public bST newb() {
      return new bST(stGroup);
   }

   public blockST newblock() {
      return new blockST(stGroup);
   }

   public blockquoteST newblockquote() {
      return new blockquoteST(stGroup);
   }

   public bigST newbig() {
      return new bigST(stGroup);
   }

   public bdoST newbdo() {
      return new bdoST(stGroup);
   }

   public bdiST newbdi() {
      return new bdiST(stGroup);
   }

   public abbrST newabbr() {
      return new abbrST(stGroup);
   }

   public strikeST newstrike() {
      return new strikeST(stGroup);
   }

   public spanST newspan() {
      return new spanST(stGroup);
   }

   public styleST newstyle() {
      return new styleST(stGroup);
   }

   public strongST newstrong() {
      return new strongST(stGroup);
   }

   public subST newsub() {
      return new subST(stGroup);
   }

   public supST newsup() {
      return new supST(stGroup);
   }

   public summaryST newsummary() {
      return new summaryST(stGroup);
   }

   public tableST newtable() {
      return new tableST(stGroup);
   }

   public tdST newtd() {
      return new tdST(stGroup);
   }

   public tbodyST newtbody() {
      return new tbodyST(stGroup);
   }

   public textareaST newtextarea() {
      return new textareaST(stGroup);
   }

   public codeST newcode() {
      return new codeST(stGroup);
   }

   public citeST newcite() {
      return new citeST(stGroup);
   }

   public colST newcol() {
      return new colST(stGroup);
   }

   public commentST newcomment() {
      return new commentST(stGroup);
   }

   public datalistST newdatalist() {
      return new datalistST(stGroup);
   }

   public colgroupST newcolgroup() {
      return new colgroupST(stGroup);
   }

   public ddST newdd() {
      return new ddST(stGroup);
   }

   public bodyST newbody() {
      return new bodyST(stGroup);
   }

   public brST newbr() {
      return new brST(stGroup);
   }

   public buttonST newbutton() {
      return new buttonST(stGroup);
   }

   public tfootST newtfoot() {
      return new tfootST(stGroup);
   }

   public qST newq() {
      return new qST(stGroup);
   }

   public rpST newrp() {
      return new rpST(stGroup);
   }

   public rtST newrt() {
      return new rtST(stGroup);
   }

   public captionST newcaption() {
      return new captionST(stGroup);
   }

   public canvasST newcanvas() {
      return new canvasST(stGroup);
   }

   public centerST newcenter() {
      return new centerST(stGroup);
   }

   public dlST newdl() {
      return new dlST(stGroup);
   }

   public dtST newdt() {
      return new dtST(stGroup);
   }

   public emST newem() {
      return new emST(stGroup);
   }

   public embedST newembed() {
      return new embedST(stGroup);
   }

   public fieldsetST newfieldset() {
      return new fieldsetST(stGroup);
   }

   public eomST neweom() {
      return new eomST(stGroup);
   }

   public figcaptionST newfigcaption() {
      return new figcaptionST(stGroup);
   }

   public delST newdel() {
      return new delST(stGroup);
   }

   public rubyST newruby() {
      return new rubyST(stGroup);
   }

   public sST news() {
      return new sST(stGroup);
   }

   public sampST newsamp() {
      return new sampST(stGroup);
   }

   public scriptST newscript() {
      return new scriptST(stGroup);
   }

   public sectionST newsection() {
      return new sectionST(stGroup);
   }

   public selectST newselect() {
      return new selectST(stGroup);
   }

   public smallST newsmall() {
      return new smallST(stGroup);
   }

   public sourceST newsource() {
      return new sourceST(stGroup);
   }

   public objectST newobject() {
      return new objectST(stGroup);
   }

   public iframeST newiframe() {
      return new iframeST(stGroup);
   }

   public iST newi() {
      return new iST(stGroup);
   }

   public imgST newimg() {
      return new imgST(stGroup);
   }

   public hgroupST newhgroup() {
      return new hgroupST(stGroup);
   }

   public headST newhead() {
      return new headST(stGroup);
   }

   public headerST newheader() {
      return new headerST(stGroup);
   }

   public hrST newhr() {
      return new hrST(stGroup);
   }

   public kbdST newkbd() {
      return new kbdST(stGroup);
   }

   public markST newmark() {
      return new markST(stGroup);
   }

   public keygenST newkeygen() {
      return new keygenST(stGroup);
   }

   public inputST newinput() {
      return new inputST(stGroup);
   }

   public insST newins() {
      return new insST(stGroup);
   }

   public formST newform() {
      return new formST(stGroup);
   }

   public frameST newframe() {
      return new frameST(stGroup);
   }

   public framesetST newframeset() {
      return new framesetST(stGroup);
   }

   public figureST newfigure() {
      return new figureST(stGroup);
   }

   public fontST newfont() {
      return new fontST(stGroup);
   }

   public footerST newfooter() {
      return new footerST(stGroup);
   }

   public h4ST newh4() {
      return new h4ST(stGroup);
   }

   public h5ST newh5() {
      return new h5ST(stGroup);
   }

   public menuST newmenu() {
      return new menuST(stGroup);
   }

   public meterST newmeter() {
      return new meterST(stGroup);
   }

   public h6ST newh6() {
      return new h6ST(stGroup);
   }

   public metaST newmeta() {
      return new metaST(stGroup);
   }

   public gtST newgt() {
      return new gtST(stGroup);
   }

   public h2ST newh2() {
      return new h2ST(stGroup);
   }

   public h1ST newh1() {
      return new h1ST(stGroup);
   }

   public noscriptST newnoscript() {
      return new noscriptST(stGroup);
   }

   public h3ST newh3() {
      return new h3ST(stGroup);
   }

   public noframesST newnoframes() {
      return new noframesST(stGroup);
   }

   public mimeJsonST newmimeJson() {
      return new mimeJsonST(stGroup);
   }

   public navST newnav() {
      return new navST(stGroup);
   }

   public optgroupST newoptgroup() {
      return new optgroupST(stGroup);
   }

   public olST newol() {
      return new olST(stGroup);
   }

   public pST newp() {
      return new pST(stGroup);
   }

   public outputST newoutput() {
      return new outputST(stGroup);
   }

   public optionST newoption() {
      return new optionST(stGroup);
   }

   public progressST newprogress() {
      return new progressST(stGroup);
   }

   public preST newpre() {
      return new preST(stGroup);
   }

   public pageST newpage() {
      return new pageST(stGroup);
   }

   public paramST newparam() {
      return new paramST(stGroup);
   }

   public liST newli() {
      return new liST(stGroup);
   }

   public labelST newlabel() {
      return new labelST(stGroup);
   }

   public legendST newlegend() {
      return new legendST(stGroup);
   }

   public mapST newmap() {
      return new mapST(stGroup);
   }

   public linkST newlink() {
      return new linkST(stGroup);
   }

   public mainST newmain() {
      return new mainST(stGroup);
   }

   public menuitemST newmenuitem() {
      return new menuitemST(stGroup);
   }

   public divST newdiv() {
      return new divST(stGroup);
   }

   public dirST newdir() {
      return new dirST(stGroup);
   }

   public dialogST newdialog() {
      return new dialogST(stGroup);
   }

   public dfnST newdfn() {
      return new dfnST(stGroup);
   }

   public final class detailsST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _open;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private detailsST(STGroup group) {
   		template = group.getInstanceOf("details");
   	}

      public detailsST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public detailsST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public detailsST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public detailsST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public detailsST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public detailsST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public detailsST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public detailsST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public detailsST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public detailsST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public detailsST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public detailsST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public detailsST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public detailsST setOpen(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._open == null) {
            this._open = value;
         	template.add("open", value);
         }

      	return this;
      }

      public String getOpen() {
      	return (String) this._open;
      }

      public detailsST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public detailsST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public detailsST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public detailsST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public detailsST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class audioST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _autoplay;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private Object _controls;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _muted;
      private Object _preload;
      private Object _spellcheck;
      private Object _src;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _id;
      private Object _lang;
      private Object _loop;

      private final ST template;

      private audioST(STGroup group) {
   		template = group.getInstanceOf("audio");
   	}

      public audioST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public audioST setAutoplay(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._autoplay == null) {
            this._autoplay = value;
         	template.add("autoplay", value);
         }

      	return this;
      }

      public String getAutoplay() {
      	return (String) this._autoplay;
      }

      public audioST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public audioST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public audioST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public audioST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public audioST setControls(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._controls == null) {
            this._controls = value;
         	template.add("controls", value);
         }

      	return this;
      }

      public String getControls() {
      	return (String) this._controls;
      }

      public audioST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public audioST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public audioST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public audioST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public audioST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public audioST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public audioST setMuted(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._muted == null) {
            this._muted = value;
         	template.add("muted", value);
         }

      	return this;
      }

      public String getMuted() {
      	return (String) this._muted;
      }

      public audioST setPreload(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._preload == null) {
            this._preload = value;
         	template.add("preload", value);
         }

      	return this;
      }

      public String getPreload() {
      	return (String) this._preload;
      }

      public audioST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public audioST setSrc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._src == null) {
            this._src = value;
         	template.add("src", value);
         }

      	return this;
      }

      public String getSrc() {
      	return (String) this._src;
      }

      public audioST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public audioST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public audioST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public audioST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public audioST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public audioST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public audioST setLoop(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._loop == null) {
            this._loop = value;
         	template.add("loop", value);
         }

      	return this;
      }

      public String getLoop() {
      	return (String) this._loop;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class theadST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private theadST(STGroup group) {
   		template = group.getInstanceOf("thead");
   	}

      public theadST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public theadST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public theadST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public theadST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public theadST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public theadST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public theadST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public theadST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public theadST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public theadST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public theadST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public theadST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public theadST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public theadST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public theadST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public theadST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public theadST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public theadST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class timeST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _datetime;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private timeST(STGroup group) {
   		template = group.getInstanceOf("time");
   	}

      public timeST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public timeST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public timeST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public timeST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public timeST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public timeST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public timeST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public timeST setDatetime(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._datetime == null) {
            this._datetime = value;
         	template.add("datetime", value);
         }

      	return this;
      }

      public String getDatetime() {
      	return (String) this._datetime;
      }

      public timeST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public timeST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public timeST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public timeST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public timeST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public timeST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public timeST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public timeST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public timeST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public timeST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public timeST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class thST implements Html5GroupTemplate {

      private Object _abbr;
      private Object _accesskey;
      private Object _class;
      private Object _colspan;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _headers;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _rowspan;
      private Object _scope;
      private Object _sorted;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private thST(STGroup group) {
   		template = group.getInstanceOf("th");
   	}

      public thST setAbbr(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._abbr == null) {
            this._abbr = value;
         	template.add("abbr", value);
         }

      	return this;
      }

      public String getAbbr() {
      	return (String) this._abbr;
      }

      public thST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public thST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public thST setColspan(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._colspan == null) {
            this._colspan = value;
         	template.add("colspan", value);
         }

      	return this;
      }

      public String getColspan() {
      	return (String) this._colspan;
      }

      public thST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public thST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public thST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public thST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public thST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public thST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public thST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public thST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public thST setHeaders(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._headers == null) {
            this._headers = value;
         	template.add("headers", value);
         }

      	return this;
      }

      public String getHeaders() {
      	return (String) this._headers;
      }

      public thST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public thST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public thST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public thST setRowspan(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._rowspan == null) {
            this._rowspan = value;
         	template.add("rowspan", value);
         }

      	return this;
      }

      public String getRowspan() {
      	return (String) this._rowspan;
      }

      public thST setScope(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._scope == null) {
            this._scope = value;
         	template.add("scope", value);
         }

      	return this;
      }

      public String getScope() {
      	return (String) this._scope;
      }

      public thST setSorted(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._sorted == null) {
            this._sorted = value;
         	template.add("sorted", value);
         }

      	return this;
      }

      public String getSorted() {
      	return (String) this._sorted;
      }

      public thST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public thST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public thST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public thST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public thST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class trST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private trST(STGroup group) {
   		template = group.getInstanceOf("tr");
   	}

      public trST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public trST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public trST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public trST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public trST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public trST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public trST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public trST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public trST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public trST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public trST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public trST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public trST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public trST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public trST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public trST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public trST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public trST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class trackST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _default_;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _kind;
      private Object _label;
      private Object _lang;
      private Object _spellcheck;
      private Object _src;
      private Object _srclang;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private trackST(STGroup group) {
   		template = group.getInstanceOf("track");
   	}

      public trackST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public trackST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public trackST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public trackST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public trackST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public trackST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public trackST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public trackST setDefault_(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._default_ == null) {
            this._default_ = value;
         	template.add("default_", value);
         }

      	return this;
      }

      public String getDefault_() {
      	return (String) this._default_;
      }

      public trackST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public trackST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public trackST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public trackST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public trackST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public trackST setKind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._kind == null) {
            this._kind = value;
         	template.add("kind", value);
         }

      	return this;
      }

      public String getKind() {
      	return (String) this._kind;
      }

      public trackST setLabel(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._label == null) {
            this._label = value;
         	template.add("label", value);
         }

      	return this;
      }

      public String getLabel() {
      	return (String) this._label;
      }

      public trackST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public trackST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public trackST setSrc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._src == null) {
            this._src = value;
         	template.add("src", value);
         }

      	return this;
      }

      public String getSrc() {
      	return (String) this._src;
      }

      public trackST setSrclang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._srclang == null) {
            this._srclang = value;
         	template.add("srclang", value);
         }

      	return this;
      }

      public String getSrclang() {
      	return (String) this._srclang;
      }

      public trackST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public trackST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public trackST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public trackST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class titleST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private titleST(STGroup group) {
   		template = group.getInstanceOf("title");
   	}

      public titleST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public titleST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public titleST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public titleST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public titleST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public titleST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public titleST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public titleST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public titleST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public titleST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public titleST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public titleST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public titleST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public titleST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public titleST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public titleST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public titleST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public titleST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class uST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private uST(STGroup group) {
   		template = group.getInstanceOf("u");
   	}

      public uST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public uST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public uST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public uST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public uST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public uST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public uST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public uST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public uST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public uST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public uST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public uST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public uST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public uST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public uST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public uST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public uST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public uST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class ulST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private ulST(STGroup group) {
   		template = group.getInstanceOf("ul");
   	}

      public ulST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public ulST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public ulST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public ulST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public ulST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public ulST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public ulST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public ulST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public ulST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public ulST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public ulST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public ulST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public ulST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public ulST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public ulST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public ulST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public ulST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public ulST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class ttST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private ttST(STGroup group) {
   		template = group.getInstanceOf("tt");
   	}

      public ttST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public ttST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public ttST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public ttST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public ttST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public ttST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public ttST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public ttST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public ttST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public ttST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public ttST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public ttST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public ttST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public ttST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public ttST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public ttST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public ttST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public ttST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class videoST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _autoplay;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private Object _controls;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _height;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _loop;
      private Object _muted;
      private Object _poster;
      private Object _preload;
      private Object _spellcheck;
      private Object _src;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _width;

      private final ST template;

      private videoST(STGroup group) {
   		template = group.getInstanceOf("video");
   	}

      public videoST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public videoST setAutoplay(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._autoplay == null) {
            this._autoplay = value;
         	template.add("autoplay", value);
         }

      	return this;
      }

      public String getAutoplay() {
      	return (String) this._autoplay;
      }

      public videoST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public videoST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public videoST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public videoST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public videoST setControls(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._controls == null) {
            this._controls = value;
         	template.add("controls", value);
         }

      	return this;
      }

      public String getControls() {
      	return (String) this._controls;
      }

      public videoST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public videoST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public videoST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public videoST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public videoST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public videoST setHeight(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._height == null) {
            this._height = value;
         	template.add("height", value);
         }

      	return this;
      }

      public String getHeight() {
      	return (String) this._height;
      }

      public videoST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public videoST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public videoST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public videoST setLoop(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._loop == null) {
            this._loop = value;
         	template.add("loop", value);
         }

      	return this;
      }

      public String getLoop() {
      	return (String) this._loop;
      }

      public videoST setMuted(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._muted == null) {
            this._muted = value;
         	template.add("muted", value);
         }

      	return this;
      }

      public String getMuted() {
      	return (String) this._muted;
      }

      public videoST setPoster(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._poster == null) {
            this._poster = value;
         	template.add("poster", value);
         }

      	return this;
      }

      public String getPoster() {
      	return (String) this._poster;
      }

      public videoST setPreload(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._preload == null) {
            this._preload = value;
         	template.add("preload", value);
         }

      	return this;
      }

      public String getPreload() {
      	return (String) this._preload;
      }

      public videoST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public videoST setSrc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._src == null) {
            this._src = value;
         	template.add("src", value);
         }

      	return this;
      }

      public String getSrc() {
      	return (String) this._src;
      }

      public videoST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public videoST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public videoST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public videoST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public videoST setWidth(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._width == null) {
            this._width = value;
         	template.add("width", value);
         }

      	return this;
      }

      public String getWidth() {
      	return (String) this._width;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class wbrST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private wbrST(STGroup group) {
   		template = group.getInstanceOf("wbr");
   	}

      public wbrST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public wbrST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public wbrST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public wbrST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public wbrST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public wbrST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public wbrST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public wbrST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public wbrST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public wbrST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public wbrST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public wbrST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public wbrST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public wbrST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public wbrST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public wbrST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public wbrST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public wbrST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class varST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private varST(STGroup group) {
   		template = group.getInstanceOf("var");
   	}

      public varST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public varST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public varST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public varST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public varST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public varST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public varST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public varST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public varST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public varST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public varST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public varST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public varST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public varST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public varST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public varST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public varST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public varST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class articleST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private articleST(STGroup group) {
   		template = group.getInstanceOf("article");
   	}

      public articleST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public articleST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public articleST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public articleST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public articleST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public articleST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public articleST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public articleST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public articleST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public articleST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public articleST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public articleST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public articleST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public articleST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public articleST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public articleST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public articleST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public articleST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class acronymST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private acronymST(STGroup group) {
   		template = group.getInstanceOf("acronym");
   	}

      public acronymST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public acronymST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public acronymST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public acronymST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public acronymST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public acronymST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public acronymST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public acronymST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public acronymST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public acronymST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public acronymST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public acronymST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public acronymST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public acronymST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public acronymST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public acronymST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public acronymST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public acronymST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class addressST implements Html5GroupTemplate {

      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private addressST(STGroup group) {
   		template = group.getInstanceOf("address");
   	}

      public addressST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public addressST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public addressST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public addressST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public addressST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public addressST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public addressST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public addressST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public addressST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public addressST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public addressST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public addressST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public addressST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public addressST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public addressST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public addressST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public addressST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public addressST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class baseST implements Html5GroupTemplate {

      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _accesskey;
      private Object _class;
      private Object _contenteditable;
      private Object _tabindex;
      private Object _target;
      private Object _title;
      private Object _translate;
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _href;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;

      private final ST template;

      private baseST(STGroup group) {
   		template = group.getInstanceOf("base");
   	}

      public baseST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public baseST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public baseST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public baseST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public baseST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public baseST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public baseST setTarget(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._target == null) {
            this._target = value;
         	template.add("target", value);
         }

      	return this;
      }

      public String getTarget() {
      	return (String) this._target;
      }

      public baseST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public baseST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public baseST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public baseST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public baseST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public baseST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public baseST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public baseST setHref(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._href == null) {
            this._href = value;
         	template.add("href", value);
         }

      	return this;
      }

      public String getHref() {
      	return (String) this._href;
      }

      public baseST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public baseST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public baseST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public baseST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class asideST implements Html5GroupTemplate {

      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _databind;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;

      private final ST template;

      private asideST(STGroup group) {
   		template = group.getInstanceOf("aside");
   	}

      public asideST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public asideST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public asideST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public asideST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public asideST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public asideST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public asideST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public asideST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public asideST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public asideST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public asideST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public asideST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public asideST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public asideST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public asideST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public asideST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public asideST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public asideST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class appletST implements Html5GroupTemplate {

      private Object _code;
      private Object _codebase;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _height;
      private Object _hidden;
      private Object _accesskey;
      private Object _align;
      private Object _alt;
      private Object _archive;
      private Object _class;
      private Object _hspace;
      private Object _id;
      private Object _lang;
      private Object _name;
      private Object _object;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _vspace;
      private Object _width;

      private final ST template;

      private appletST(STGroup group) {
   		template = group.getInstanceOf("applet");
   	}

      public appletST setCode(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._code == null) {
            this._code = value;
         	template.add("code", value);
         }

      	return this;
      }

      public String getCode() {
      	return (String) this._code;
      }

      public appletST setCodebase(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._codebase == null) {
            this._codebase = value;
         	template.add("codebase", value);
         }

      	return this;
      }

      public String getCodebase() {
      	return (String) this._codebase;
      }

      public appletST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public appletST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public appletST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public appletST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public appletST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public appletST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public appletST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public appletST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public appletST setHeight(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._height == null) {
            this._height = value;
         	template.add("height", value);
         }

      	return this;
      }

      public String getHeight() {
      	return (String) this._height;
      }

      public appletST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public appletST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public appletST setAlign(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._align == null) {
            this._align = value;
         	template.add("align", value);
         }

      	return this;
      }

      public String getAlign() {
      	return (String) this._align;
      }

      public appletST setAlt(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._alt == null) {
            this._alt = value;
         	template.add("alt", value);
         }

      	return this;
      }

      public String getAlt() {
      	return (String) this._alt;
      }

      public appletST setArchive(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._archive == null) {
            this._archive = value;
         	template.add("archive", value);
         }

      	return this;
      }

      public String getArchive() {
      	return (String) this._archive;
      }

      public appletST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public appletST setHspace(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hspace == null) {
            this._hspace = value;
         	template.add("hspace", value);
         }

      	return this;
      }

      public String getHspace() {
      	return (String) this._hspace;
      }

      public appletST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public appletST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public appletST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public appletST setObject(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._object == null) {
            this._object = value;
         	template.add("object", value);
         }

      	return this;
      }

      public String getObject() {
      	return (String) this._object;
      }

      public appletST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public appletST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public appletST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public appletST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public appletST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public appletST setVspace(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._vspace == null) {
            this._vspace = value;
         	template.add("vspace", value);
         }

      	return this;
      }

      public String getVspace() {
      	return (String) this._vspace;
      }

      public appletST setWidth(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._width == null) {
            this._width = value;
         	template.add("width", value);
         }

      	return this;
      }

      public String getWidth() {
      	return (String) this._width;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class areaST implements Html5GroupTemplate {

      private Object _dir;
      private Object _download;
      private Object _draggable;
      private Object _hidden;
      private Object _href;
      private Object _translate;
      private Object _type;
      private Object _dropzone;
      private Object _hreflang;
      private Object _id;
      private Object _lang;
      private Object _media;
      private Object _rel;
      private Object _shape;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _target;
      private Object _title;
      private Object _accesskey;
      private Object _alt;
      private Object _class;
      private Object _contenteditable;
      private Object _contextmenu;
      private Object _coords;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;

      private final ST template;

      private areaST(STGroup group) {
   		template = group.getInstanceOf("area");
   	}

      public areaST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public areaST setDownload(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._download == null) {
            this._download = value;
         	template.add("download", value);
         }

      	return this;
      }

      public String getDownload() {
      	return (String) this._download;
      }

      public areaST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public areaST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public areaST setHref(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._href == null) {
            this._href = value;
         	template.add("href", value);
         }

      	return this;
      }

      public String getHref() {
      	return (String) this._href;
      }

      public areaST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public areaST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      public areaST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public areaST setHreflang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hreflang == null) {
            this._hreflang = value;
         	template.add("hreflang", value);
         }

      	return this;
      }

      public String getHreflang() {
      	return (String) this._hreflang;
      }

      public areaST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public areaST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public areaST setMedia(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._media == null) {
            this._media = value;
         	template.add("media", value);
         }

      	return this;
      }

      public String getMedia() {
      	return (String) this._media;
      }

      public areaST setRel(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._rel == null) {
            this._rel = value;
         	template.add("rel", value);
         }

      	return this;
      }

      public String getRel() {
      	return (String) this._rel;
      }

      public areaST setShape(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._shape == null) {
            this._shape = value;
         	template.add("shape", value);
         }

      	return this;
      }

      public String getShape() {
      	return (String) this._shape;
      }

      public areaST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public areaST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public areaST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public areaST setTarget(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._target == null) {
            this._target = value;
         	template.add("target", value);
         }

      	return this;
      }

      public String getTarget() {
      	return (String) this._target;
      }

      public areaST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public areaST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public areaST setAlt(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._alt == null) {
            this._alt = value;
         	template.add("alt", value);
         }

      	return this;
      }

      public String getAlt() {
      	return (String) this._alt;
      }

      public areaST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public areaST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public areaST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public areaST setCoords(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._coords == null) {
            this._coords = value;
         	template.add("coords", value);
         }

      	return this;
      }

      public String getCoords() {
      	return (String) this._coords;
      }

      public areaST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public areaST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class basefontST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private basefontST(STGroup group) {
   		template = group.getInstanceOf("basefont");
   	}

      public basefontST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public basefontST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public basefontST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public basefontST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public basefontST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public basefontST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public basefontST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public basefontST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public basefontST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public basefontST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public basefontST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public basefontST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public basefontST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public basefontST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public basefontST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public basefontST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public basefontST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public basefontST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class aST implements Html5GroupTemplate {

      private Object _lang;
      private Object _spellcheck;
      private Object _rel;
      private Object _style;
      private Object _tabindex;
      private Object _target;
      private Object _title;
      private Object _translate;
      private Object _type;
      private Object _dropzone;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _download;
      private Object _draggable;
      private Object _media;
      private Object _hidden;
      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private Object _hreflang;
      private Object _id;
      private Object _href;

      private final ST template;

      private aST(STGroup group) {
   		template = group.getInstanceOf("a");
   	}

      public aST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public aST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public aST setRel(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._rel == null) {
            this._rel = value;
         	template.add("rel", value);
         }

      	return this;
      }

      public String getRel() {
      	return (String) this._rel;
      }

      public aST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public aST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public aST setTarget(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._target == null) {
            this._target = value;
         	template.add("target", value);
         }

      	return this;
      }

      public String getTarget() {
      	return (String) this._target;
      }

      public aST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public aST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public aST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      public aST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public aST addDataValue(Object value_, Object name_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	this._data.add(map);

         template.addAggr("data.{value, name}", map.get("value"), map.get("name"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public aST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public aST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public aST setDownload(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._download == null) {
            this._download = value;
         	template.add("download", value);
         }

      	return this;
      }

      public String getDownload() {
      	return (String) this._download;
      }

      public aST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public aST setMedia(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._media == null) {
            this._media = value;
         	template.add("media", value);
         }

      	return this;
      }

      public String getMedia() {
      	return (String) this._media;
      }

      public aST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public aST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public aST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public aST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public aST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public aST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public aST setHreflang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hreflang == null) {
            this._hreflang = value;
         	template.add("hreflang", value);
         }

      	return this;
      }

      public String getHreflang() {
      	return (String) this._hreflang;
      }

      public aST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public aST setHref(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._href == null) {
            this._href = value;
         	template.add("href", value);
         }

      	return this;
      }

      public String getHref() {
      	return (String) this._href;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class bST implements Html5GroupTemplate {

      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _accesskey;

      private final ST template;

      private bST(STGroup group) {
   		template = group.getInstanceOf("b");
   	}

      public bST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public bST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public bST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public bST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public bST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public bST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public bST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public bST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public bST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public bST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public bST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public bST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public bST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public bST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public bST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public bST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public bST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public bST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class blockST implements Html5GroupTemplate {

      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();

      private final ST template;

      private blockST(STGroup group) {
   		template = group.getInstanceOf("block");
   	}

      public blockST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class blockquoteST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _cite;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private blockquoteST(STGroup group) {
   		template = group.getInstanceOf("blockquote");
   	}

      public blockquoteST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public blockquoteST setCite(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._cite == null) {
            this._cite = value;
         	template.add("cite", value);
         }

      	return this;
      }

      public String getCite() {
      	return (String) this._cite;
      }

      public blockquoteST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public blockquoteST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public blockquoteST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public blockquoteST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public blockquoteST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public blockquoteST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public blockquoteST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public blockquoteST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public blockquoteST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public blockquoteST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public blockquoteST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public blockquoteST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public blockquoteST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public blockquoteST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public blockquoteST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public blockquoteST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public blockquoteST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class bigST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private bigST(STGroup group) {
   		template = group.getInstanceOf("big");
   	}

      public bigST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public bigST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public bigST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public bigST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public bigST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public bigST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public bigST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public bigST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public bigST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public bigST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public bigST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public bigST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public bigST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public bigST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public bigST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public bigST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public bigST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public bigST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class bdoST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private bdoST(STGroup group) {
   		template = group.getInstanceOf("bdo");
   	}

      public bdoST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public bdoST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public bdoST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public bdoST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public bdoST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public bdoST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public bdoST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public bdoST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public bdoST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public bdoST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public bdoST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public bdoST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public bdoST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public bdoST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public bdoST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public bdoST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public bdoST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public bdoST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class bdiST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private bdiST(STGroup group) {
   		template = group.getInstanceOf("bdi");
   	}

      public bdiST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public bdiST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public bdiST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public bdiST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public bdiST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public bdiST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public bdiST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public bdiST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public bdiST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public bdiST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public bdiST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public bdiST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public bdiST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public bdiST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public bdiST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public bdiST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public bdiST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public bdiST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class abbrST implements Html5GroupTemplate {

      private Object _contextmenu;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _class;
      private Object _translate;
      private Object _dir;
      private Object _draggable;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _accesskey;

      private final ST template;

      private abbrST(STGroup group) {
   		template = group.getInstanceOf("abbr");
   	}

      public abbrST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public abbrST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public abbrST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public abbrST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public abbrST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public abbrST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public abbrST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public abbrST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public abbrST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public abbrST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public abbrST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public abbrST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public abbrST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public abbrST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public abbrST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public abbrST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public abbrST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public abbrST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class strikeST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private strikeST(STGroup group) {
   		template = group.getInstanceOf("strike");
   	}

      public strikeST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public strikeST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public strikeST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public strikeST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public strikeST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public strikeST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public strikeST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public strikeST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public strikeST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public strikeST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public strikeST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public strikeST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public strikeST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public strikeST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public strikeST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public strikeST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public strikeST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public strikeST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class spanST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private spanST(STGroup group) {
   		template = group.getInstanceOf("span");
   	}

      public spanST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public spanST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public spanST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public spanST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public spanST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public spanST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public spanST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public spanST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public spanST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public spanST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public spanST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public spanST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public spanST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public spanST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public spanST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public spanST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public spanST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public spanST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class styleST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _media;
      private Object _scoped;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;

      private final ST template;

      private styleST(STGroup group) {
   		template = group.getInstanceOf("style");
   	}

      public styleST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public styleST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public styleST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public styleST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public styleST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public styleST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public styleST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public styleST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public styleST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public styleST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public styleST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public styleST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public styleST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public styleST setMedia(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._media == null) {
            this._media = value;
         	template.add("media", value);
         }

      	return this;
      }

      public String getMedia() {
      	return (String) this._media;
      }

      public styleST setScoped(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._scoped == null) {
            this._scoped = value;
         	template.add("scoped", value);
         }

      	return this;
      }

      public String getScoped() {
      	return (String) this._scoped;
      }

      public styleST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public styleST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public styleST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public styleST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public styleST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public styleST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class strongST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private strongST(STGroup group) {
   		template = group.getInstanceOf("strong");
   	}

      public strongST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public strongST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public strongST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public strongST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public strongST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public strongST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public strongST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public strongST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public strongST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public strongST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public strongST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public strongST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public strongST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public strongST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public strongST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public strongST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public strongST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public strongST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class subST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private subST(STGroup group) {
   		template = group.getInstanceOf("sub");
   	}

      public subST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public subST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public subST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public subST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public subST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public subST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public subST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public subST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public subST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public subST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public subST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public subST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public subST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public subST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public subST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public subST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public subST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public subST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class supST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private supST(STGroup group) {
   		template = group.getInstanceOf("sup");
   	}

      public supST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public supST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public supST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public supST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public supST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public supST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public supST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public supST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public supST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public supST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public supST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public supST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public supST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public supST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public supST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public supST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public supST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public supST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class summaryST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private summaryST(STGroup group) {
   		template = group.getInstanceOf("summary");
   	}

      public summaryST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public summaryST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public summaryST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public summaryST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public summaryST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public summaryST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public summaryST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public summaryST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public summaryST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public summaryST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public summaryST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public summaryST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public summaryST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public summaryST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public summaryST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public summaryST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public summaryST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public summaryST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class tableST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _sortable;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private tableST(STGroup group) {
   		template = group.getInstanceOf("table");
   	}

      public tableST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public tableST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public tableST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public tableST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public tableST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public tableST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public tableST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public tableST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public tableST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public tableST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public tableST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public tableST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public tableST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public tableST setSortable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._sortable == null) {
            this._sortable = value;
         	template.add("sortable", value);
         }

      	return this;
      }

      public String getSortable() {
      	return (String) this._sortable;
      }

      public tableST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public tableST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public tableST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public tableST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public tableST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class tdST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private Object _colspan;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _headers;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _rowspan;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private tdST(STGroup group) {
   		template = group.getInstanceOf("td");
   	}

      public tdST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public tdST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public tdST setColspan(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._colspan == null) {
            this._colspan = value;
         	template.add("colspan", value);
         }

      	return this;
      }

      public String getColspan() {
      	return (String) this._colspan;
      }

      public tdST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public tdST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public tdST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public tdST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public tdST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public tdST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public tdST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public tdST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public tdST setHeaders(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._headers == null) {
            this._headers = value;
         	template.add("headers", value);
         }

      	return this;
      }

      public String getHeaders() {
      	return (String) this._headers;
      }

      public tdST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public tdST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public tdST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public tdST setRowspan(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._rowspan == null) {
            this._rowspan = value;
         	template.add("rowspan", value);
         }

      	return this;
      }

      public String getRowspan() {
      	return (String) this._rowspan;
      }

      public tdST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public tdST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public tdST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public tdST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public tdST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class tbodyST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private tbodyST(STGroup group) {
   		template = group.getInstanceOf("tbody");
   	}

      public tbodyST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public tbodyST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public tbodyST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public tbodyST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public tbodyST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public tbodyST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public tbodyST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public tbodyST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public tbodyST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public tbodyST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public tbodyST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public tbodyST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public tbodyST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public tbodyST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public tbodyST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public tbodyST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public tbodyST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public tbodyST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class textareaST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _autofocus;
      private Object _class;
      private Object _cols;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _disabled;
      private Object _draggable;
      private Object _dropzone;
      private Object _form;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _maxlength;
      private Object _name;
      private Object _placeholder;
      private Object _readonly;
      private Object _required;
      private Object _rows;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _wrap;

      private final ST template;

      private textareaST(STGroup group) {
   		template = group.getInstanceOf("textarea");
   	}

      public textareaST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public textareaST setAutofocus(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._autofocus == null) {
            this._autofocus = value;
         	template.add("autofocus", value);
         }

      	return this;
      }

      public String getAutofocus() {
      	return (String) this._autofocus;
      }

      public textareaST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public textareaST setCols(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._cols == null) {
            this._cols = value;
         	template.add("cols", value);
         }

      	return this;
      }

      public String getCols() {
      	return (String) this._cols;
      }

      public textareaST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public textareaST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public textareaST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public textareaST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public textareaST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public textareaST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public textareaST setDisabled(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._disabled == null) {
            this._disabled = value;
         	template.add("disabled", value);
         }

      	return this;
      }

      public String getDisabled() {
      	return (String) this._disabled;
      }

      public textareaST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public textareaST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public textareaST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public textareaST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public textareaST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public textareaST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public textareaST setMaxlength(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._maxlength == null) {
            this._maxlength = value;
         	template.add("maxlength", value);
         }

      	return this;
      }

      public String getMaxlength() {
      	return (String) this._maxlength;
      }

      public textareaST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public textareaST setPlaceholder(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._placeholder == null) {
            this._placeholder = value;
         	template.add("placeholder", value);
         }

      	return this;
      }

      public String getPlaceholder() {
      	return (String) this._placeholder;
      }

      public textareaST setReadonly(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._readonly == null) {
            this._readonly = value;
         	template.add("readonly", value);
         }

      	return this;
      }

      public String getReadonly() {
      	return (String) this._readonly;
      }

      public textareaST setRequired(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._required == null) {
            this._required = value;
         	template.add("required", value);
         }

      	return this;
      }

      public String getRequired() {
      	return (String) this._required;
      }

      public textareaST setRows(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._rows == null) {
            this._rows = value;
         	template.add("rows", value);
         }

      	return this;
      }

      public String getRows() {
      	return (String) this._rows;
      }

      public textareaST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public textareaST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public textareaST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public textareaST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public textareaST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public textareaST setWrap(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._wrap == null) {
            this._wrap = value;
         	template.add("wrap", value);
         }

      	return this;
      }

      public String getWrap() {
      	return (String) this._wrap;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class codeST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private codeST(STGroup group) {
   		template = group.getInstanceOf("code");
   	}

      public codeST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public codeST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public codeST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public codeST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public codeST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public codeST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public codeST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public codeST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public codeST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public codeST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public codeST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public codeST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public codeST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public codeST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public codeST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public codeST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public codeST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public codeST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class citeST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private citeST(STGroup group) {
   		template = group.getInstanceOf("cite");
   	}

      public citeST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public citeST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public citeST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public citeST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public citeST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public citeST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public citeST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public citeST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public citeST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public citeST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public citeST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public citeST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public citeST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public citeST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public citeST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public citeST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public citeST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public citeST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class colST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _span;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private colST(STGroup group) {
   		template = group.getInstanceOf("col");
   	}

      public colST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public colST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public colST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public colST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public colST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public colST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public colST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public colST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public colST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public colST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public colST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public colST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public colST setSpan(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._span == null) {
            this._span = value;
         	template.add("span", value);
         }

      	return this;
      }

      public String getSpan() {
      	return (String) this._span;
      }

      public colST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public colST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public colST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public colST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public colST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class commentST implements Html5GroupTemplate {

      private Object _comment;

      private final ST template;

      private commentST(STGroup group) {
   		template = group.getInstanceOf("comment");
   	}

      public commentST setComment(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._comment == null) {
            this._comment = value;
         	template.add("comment", value);
         }

      	return this;
      }

      public String getComment() {
      	return (String) this._comment;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class datalistST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private datalistST(STGroup group) {
   		template = group.getInstanceOf("datalist");
   	}

      public datalistST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public datalistST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public datalistST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public datalistST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public datalistST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public datalistST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public datalistST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public datalistST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public datalistST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public datalistST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public datalistST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public datalistST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public datalistST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public datalistST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public datalistST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public datalistST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public datalistST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public datalistST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class colgroupST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _span;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private colgroupST(STGroup group) {
   		template = group.getInstanceOf("colgroup");
   	}

      public colgroupST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public colgroupST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public colgroupST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public colgroupST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public colgroupST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public colgroupST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public colgroupST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public colgroupST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public colgroupST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public colgroupST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public colgroupST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public colgroupST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public colgroupST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public colgroupST setSpan(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._span == null) {
            this._span = value;
         	template.add("span", value);
         }

      	return this;
      }

      public String getSpan() {
      	return (String) this._span;
      }

      public colgroupST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public colgroupST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public colgroupST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public colgroupST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public colgroupST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class ddST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private ddST(STGroup group) {
   		template = group.getInstanceOf("dd");
   	}

      public ddST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public ddST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public ddST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public ddST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public ddST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public ddST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public ddST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public ddST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public ddST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public ddST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public ddST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public ddST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public ddST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public ddST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public ddST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public ddST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public ddST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public ddST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class bodyST implements Html5GroupTemplate {

      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();

      private final ST template;

      private bodyST(STGroup group) {
   		template = group.getInstanceOf("body");
   	}

      public bodyST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class brST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private brST(STGroup group) {
   		template = group.getInstanceOf("br");
   	}

      public brST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public brST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public brST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public brST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public brST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public brST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public brST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public brST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public brST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public brST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public brST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public brST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public brST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public brST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public brST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public brST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public brST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class buttonST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _autofocus;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _disabled;
      private Object _draggable;
      private Object _dropzone;
      private Object _form;
      private Object _formaction;
      private Object _formenctype;
      private Object _formmethod;
      private Object _formnovalidate;
      private Object _formtarget;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _name;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;
      private Object _value;

      private final ST template;

      private buttonST(STGroup group) {
   		template = group.getInstanceOf("button");
   	}

      public buttonST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public buttonST setAutofocus(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._autofocus == null) {
            this._autofocus = value;
         	template.add("autofocus", value);
         }

      	return this;
      }

      public String getAutofocus() {
      	return (String) this._autofocus;
      }

      public buttonST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public buttonST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public buttonST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public buttonST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public buttonST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public buttonST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public buttonST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public buttonST setDisabled(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._disabled == null) {
            this._disabled = value;
         	template.add("disabled", value);
         }

      	return this;
      }

      public String getDisabled() {
      	return (String) this._disabled;
      }

      public buttonST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public buttonST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public buttonST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public buttonST setFormaction(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formaction == null) {
            this._formaction = value;
         	template.add("formaction", value);
         }

      	return this;
      }

      public String getFormaction() {
      	return (String) this._formaction;
      }

      public buttonST setFormenctype(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formenctype == null) {
            this._formenctype = value;
         	template.add("formenctype", value);
         }

      	return this;
      }

      public String getFormenctype() {
      	return (String) this._formenctype;
      }

      public buttonST setFormmethod(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formmethod == null) {
            this._formmethod = value;
         	template.add("formmethod", value);
         }

      	return this;
      }

      public String getFormmethod() {
      	return (String) this._formmethod;
      }

      public buttonST setFormnovalidate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formnovalidate == null) {
            this._formnovalidate = value;
         	template.add("formnovalidate", value);
         }

      	return this;
      }

      public String getFormnovalidate() {
      	return (String) this._formnovalidate;
      }

      public buttonST setFormtarget(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formtarget == null) {
            this._formtarget = value;
         	template.add("formtarget", value);
         }

      	return this;
      }

      public String getFormtarget() {
      	return (String) this._formtarget;
      }

      public buttonST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public buttonST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public buttonST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public buttonST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public buttonST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public buttonST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public buttonST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public buttonST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public buttonST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public buttonST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      public buttonST setValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._value == null) {
            this._value = value;
         	template.add("value", value);
         }

      	return this;
      }

      public String getValue() {
      	return (String) this._value;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class tfootST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private tfootST(STGroup group) {
   		template = group.getInstanceOf("tfoot");
   	}

      public tfootST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public tfootST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public tfootST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public tfootST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public tfootST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public tfootST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public tfootST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public tfootST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public tfootST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public tfootST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public tfootST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public tfootST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public tfootST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public tfootST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public tfootST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public tfootST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public tfootST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public tfootST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class qST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _cite;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private qST(STGroup group) {
   		template = group.getInstanceOf("q");
   	}

      public qST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public qST setCite(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._cite == null) {
            this._cite = value;
         	template.add("cite", value);
         }

      	return this;
      }

      public String getCite() {
      	return (String) this._cite;
      }

      public qST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public qST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public qST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public qST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public qST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public qST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public qST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public qST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public qST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public qST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public qST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public qST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public qST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public qST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public qST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public qST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public qST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class rpST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private rpST(STGroup group) {
   		template = group.getInstanceOf("rp");
   	}

      public rpST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public rpST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public rpST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public rpST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public rpST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public rpST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public rpST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public rpST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public rpST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public rpST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public rpST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public rpST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public rpST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public rpST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public rpST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public rpST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public rpST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public rpST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class rtST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private rtST(STGroup group) {
   		template = group.getInstanceOf("rt");
   	}

      public rtST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public rtST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public rtST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public rtST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public rtST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public rtST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public rtST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public rtST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public rtST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public rtST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public rtST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public rtST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public rtST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public rtST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public rtST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public rtST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public rtST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public rtST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class captionST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private captionST(STGroup group) {
   		template = group.getInstanceOf("caption");
   	}

      public captionST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public captionST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public captionST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public captionST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public captionST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public captionST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public captionST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public captionST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public captionST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public captionST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public captionST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public captionST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public captionST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public captionST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public captionST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public captionST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public captionST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public captionST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class canvasST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _height;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _width;

      private final ST template;

      private canvasST(STGroup group) {
   		template = group.getInstanceOf("canvas");
   	}

      public canvasST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public canvasST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public canvasST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public canvasST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public canvasST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public canvasST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public canvasST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public canvasST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public canvasST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public canvasST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public canvasST setHeight(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._height == null) {
            this._height = value;
         	template.add("height", value);
         }

      	return this;
      }

      public String getHeight() {
      	return (String) this._height;
      }

      public canvasST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public canvasST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public canvasST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public canvasST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public canvasST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public canvasST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public canvasST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public canvasST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public canvasST setWidth(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._width == null) {
            this._width = value;
         	template.add("width", value);
         }

      	return this;
      }

      public String getWidth() {
      	return (String) this._width;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class centerST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private centerST(STGroup group) {
   		template = group.getInstanceOf("center");
   	}

      public centerST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public centerST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public centerST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public centerST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public centerST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public centerST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public centerST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public centerST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public centerST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public centerST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public centerST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public centerST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public centerST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public centerST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public centerST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public centerST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public centerST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public centerST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class dlST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private dlST(STGroup group) {
   		template = group.getInstanceOf("dl");
   	}

      public dlST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public dlST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public dlST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public dlST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public dlST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public dlST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public dlST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public dlST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public dlST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public dlST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public dlST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public dlST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public dlST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public dlST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public dlST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public dlST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public dlST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public dlST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class dtST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private dtST(STGroup group) {
   		template = group.getInstanceOf("dt");
   	}

      public dtST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public dtST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public dtST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public dtST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public dtST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public dtST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public dtST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public dtST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public dtST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public dtST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public dtST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public dtST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public dtST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public dtST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public dtST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public dtST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public dtST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public dtST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class emST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private emST(STGroup group) {
   		template = group.getInstanceOf("em");
   	}

      public emST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public emST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public emST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public emST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public emST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public emST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public emST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public emST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public emST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public emST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public emST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public emST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public emST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public emST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public emST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public emST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public emST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public emST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class embedST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _height;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _src;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;
      private Object _width;

      private final ST template;

      private embedST(STGroup group) {
   		template = group.getInstanceOf("embed");
   	}

      public embedST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public embedST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public embedST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public embedST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public embedST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public embedST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public embedST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public embedST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public embedST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public embedST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public embedST setHeight(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._height == null) {
            this._height = value;
         	template.add("height", value);
         }

      	return this;
      }

      public String getHeight() {
      	return (String) this._height;
      }

      public embedST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public embedST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public embedST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public embedST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public embedST setSrc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._src == null) {
            this._src = value;
         	template.add("src", value);
         }

      	return this;
      }

      public String getSrc() {
      	return (String) this._src;
      }

      public embedST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public embedST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public embedST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public embedST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public embedST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      public embedST setWidth(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._width == null) {
            this._width = value;
         	template.add("width", value);
         }

      	return this;
      }

      public String getWidth() {
      	return (String) this._width;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class fieldsetST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _disabled;
      private Object _draggable;
      private Object _dropzone;
      private Object _form;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _name;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private fieldsetST(STGroup group) {
   		template = group.getInstanceOf("fieldset");
   	}

      public fieldsetST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public fieldsetST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public fieldsetST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public fieldsetST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public fieldsetST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public fieldsetST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public fieldsetST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public fieldsetST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public fieldsetST setDisabled(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._disabled == null) {
            this._disabled = value;
         	template.add("disabled", value);
         }

      	return this;
      }

      public String getDisabled() {
      	return (String) this._disabled;
      }

      public fieldsetST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public fieldsetST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public fieldsetST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public fieldsetST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public fieldsetST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public fieldsetST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public fieldsetST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public fieldsetST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public fieldsetST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public fieldsetST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public fieldsetST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public fieldsetST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class eomST implements Html5GroupTemplate {


      private final ST template;

      private eomST(STGroup group) {
   		template = group.getInstanceOf("eom");
   	}

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class figcaptionST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private figcaptionST(STGroup group) {
   		template = group.getInstanceOf("figcaption");
   	}

      public figcaptionST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public figcaptionST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public figcaptionST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public figcaptionST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public figcaptionST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public figcaptionST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public figcaptionST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public figcaptionST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public figcaptionST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public figcaptionST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public figcaptionST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public figcaptionST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public figcaptionST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public figcaptionST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public figcaptionST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public figcaptionST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public figcaptionST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public figcaptionST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class delST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _cite;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _datetime;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private delST(STGroup group) {
   		template = group.getInstanceOf("del");
   	}

      public delST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public delST setCite(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._cite == null) {
            this._cite = value;
         	template.add("cite", value);
         }

      	return this;
      }

      public String getCite() {
      	return (String) this._cite;
      }

      public delST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public delST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public delST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public delST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public delST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public delST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public delST setDatetime(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._datetime == null) {
            this._datetime = value;
         	template.add("datetime", value);
         }

      	return this;
      }

      public String getDatetime() {
      	return (String) this._datetime;
      }

      public delST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public delST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public delST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public delST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public delST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public delST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public delST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public delST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public delST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public delST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public delST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class rubyST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private rubyST(STGroup group) {
   		template = group.getInstanceOf("ruby");
   	}

      public rubyST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public rubyST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public rubyST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public rubyST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public rubyST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public rubyST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public rubyST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public rubyST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public rubyST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public rubyST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public rubyST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public rubyST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public rubyST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public rubyST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public rubyST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public rubyST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public rubyST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public rubyST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class sST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private sST(STGroup group) {
   		template = group.getInstanceOf("s");
   	}

      public sST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public sST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public sST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public sST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public sST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public sST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public sST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public sST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public sST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public sST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public sST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public sST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public sST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public sST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public sST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public sST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public sST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public sST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class sampST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private sampST(STGroup group) {
   		template = group.getInstanceOf("samp");
   	}

      public sampST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public sampST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public sampST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public sampST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public sampST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public sampST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public sampST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public sampST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public sampST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public sampST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public sampST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public sampST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public sampST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public sampST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public sampST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public sampST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public sampST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public sampST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class scriptST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _async;
      private Object _charset;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _defer;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _src;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;

      private final ST template;

      private scriptST(STGroup group) {
   		template = group.getInstanceOf("script");
   	}

      public scriptST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public scriptST setAsync(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._async == null) {
            this._async = value;
         	template.add("async", value);
         }

      	return this;
      }

      public String getAsync() {
      	return (String) this._async;
      }

      public scriptST setCharset(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._charset == null) {
            this._charset = value;
         	template.add("charset", value);
         }

      	return this;
      }

      public String getCharset() {
      	return (String) this._charset;
      }

      public scriptST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public scriptST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public scriptST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public scriptST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public scriptST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public scriptST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public scriptST setDefer(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._defer == null) {
            this._defer = value;
         	template.add("defer", value);
         }

      	return this;
      }

      public String getDefer() {
      	return (String) this._defer;
      }

      public scriptST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public scriptST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public scriptST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public scriptST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public scriptST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public scriptST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public scriptST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public scriptST setSrc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._src == null) {
            this._src = value;
         	template.add("src", value);
         }

      	return this;
      }

      public String getSrc() {
      	return (String) this._src;
      }

      public scriptST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public scriptST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public scriptST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public scriptST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public scriptST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class sectionST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private sectionST(STGroup group) {
   		template = group.getInstanceOf("section");
   	}

      public sectionST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public sectionST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public sectionST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public sectionST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public sectionST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public sectionST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public sectionST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public sectionST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public sectionST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public sectionST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public sectionST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public sectionST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public sectionST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public sectionST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public sectionST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public sectionST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public sectionST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public sectionST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class selectST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _autofocus;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _disabled;
      private Object _draggable;
      private Object _dropzone;
      private Object _form;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _multiple;
      private Object _name;
      private Object _required;
      private Object _size;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private selectST(STGroup group) {
   		template = group.getInstanceOf("select");
   	}

      public selectST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public selectST setAutofocus(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._autofocus == null) {
            this._autofocus = value;
         	template.add("autofocus", value);
         }

      	return this;
      }

      public String getAutofocus() {
      	return (String) this._autofocus;
      }

      public selectST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public selectST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public selectST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public selectST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public selectST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public selectST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public selectST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public selectST setDisabled(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._disabled == null) {
            this._disabled = value;
         	template.add("disabled", value);
         }

      	return this;
      }

      public String getDisabled() {
      	return (String) this._disabled;
      }

      public selectST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public selectST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public selectST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public selectST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public selectST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public selectST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public selectST setMultiple(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._multiple == null) {
            this._multiple = value;
         	template.add("multiple", value);
         }

      	return this;
      }

      public String getMultiple() {
      	return (String) this._multiple;
      }

      public selectST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public selectST setRequired(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._required == null) {
            this._required = value;
         	template.add("required", value);
         }

      	return this;
      }

      public String getRequired() {
      	return (String) this._required;
      }

      public selectST setSize(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._size == null) {
            this._size = value;
         	template.add("size", value);
         }

      	return this;
      }

      public String getSize() {
      	return (String) this._size;
      }

      public selectST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public selectST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public selectST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public selectST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public selectST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class smallST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private smallST(STGroup group) {
   		template = group.getInstanceOf("small");
   	}

      public smallST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public smallST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public smallST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public smallST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public smallST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public smallST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public smallST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public smallST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public smallST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public smallST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public smallST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public smallST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public smallST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public smallST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public smallST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public smallST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public smallST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public smallST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class sourceST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _media;
      private Object _spellcheck;
      private Object _src;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;

      private final ST template;

      private sourceST(STGroup group) {
   		template = group.getInstanceOf("source");
   	}

      public sourceST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public sourceST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public sourceST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public sourceST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public sourceST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public sourceST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public sourceST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public sourceST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public sourceST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public sourceST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public sourceST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public sourceST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public sourceST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public sourceST setMedia(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._media == null) {
            this._media = value;
         	template.add("media", value);
         }

      	return this;
      }

      public String getMedia() {
      	return (String) this._media;
      }

      public sourceST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public sourceST setSrc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._src == null) {
            this._src = value;
         	template.add("src", value);
         }

      	return this;
      }

      public String getSrc() {
      	return (String) this._src;
      }

      public sourceST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public sourceST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public sourceST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public sourceST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public sourceST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class objectST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _form;
      private Object _height;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _name;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;
      private Object _usemap;
      private Object _width;

      private final ST template;

      private objectST(STGroup group) {
   		template = group.getInstanceOf("object");
   	}

      public objectST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public objectST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public objectST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public objectST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public objectST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public objectST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public objectST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public objectST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public objectST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public objectST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public objectST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public objectST setHeight(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._height == null) {
            this._height = value;
         	template.add("height", value);
         }

      	return this;
      }

      public String getHeight() {
      	return (String) this._height;
      }

      public objectST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public objectST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public objectST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public objectST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public objectST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public objectST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public objectST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public objectST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public objectST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public objectST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      public objectST setUsemap(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._usemap == null) {
            this._usemap = value;
         	template.add("usemap", value);
         }

      	return this;
      }

      public String getUsemap() {
      	return (String) this._usemap;
      }

      public objectST setWidth(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._width == null) {
            this._width = value;
         	template.add("width", value);
         }

      	return this;
      }

      public String getWidth() {
      	return (String) this._width;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class iframeST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _height;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _name;
      private Object _sandbox;
      private Object _spellcheck;
      private Object _src;
      private Object _srcdoc;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _width;

      private final ST template;

      private iframeST(STGroup group) {
   		template = group.getInstanceOf("iframe");
   	}

      public iframeST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public iframeST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public iframeST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public iframeST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public iframeST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public iframeST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public iframeST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public iframeST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public iframeST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public iframeST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public iframeST setHeight(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._height == null) {
            this._height = value;
         	template.add("height", value);
         }

      	return this;
      }

      public String getHeight() {
      	return (String) this._height;
      }

      public iframeST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public iframeST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public iframeST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public iframeST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public iframeST setSandbox(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._sandbox == null) {
            this._sandbox = value;
         	template.add("sandbox", value);
         }

      	return this;
      }

      public String getSandbox() {
      	return (String) this._sandbox;
      }

      public iframeST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public iframeST setSrc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._src == null) {
            this._src = value;
         	template.add("src", value);
         }

      	return this;
      }

      public String getSrc() {
      	return (String) this._src;
      }

      public iframeST setSrcdoc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._srcdoc == null) {
            this._srcdoc = value;
         	template.add("srcdoc", value);
         }

      	return this;
      }

      public String getSrcdoc() {
      	return (String) this._srcdoc;
      }

      public iframeST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public iframeST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public iframeST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public iframeST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public iframeST setWidth(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._width == null) {
            this._width = value;
         	template.add("width", value);
         }

      	return this;
      }

      public String getWidth() {
      	return (String) this._width;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class iST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private iST(STGroup group) {
   		template = group.getInstanceOf("i");
   	}

      public iST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public iST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public iST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public iST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public iST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public iST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public iST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public iST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public iST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public iST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public iST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public iST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public iST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public iST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public iST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public iST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public iST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public iST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class imgST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _alt;
      private Object _class;
      private Object _contenteditable;
      private Object _contextmenu;
      private Object _crossorigin;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _height;
      private Object _hidden;
      private Object _id;
      private Object _ismap;
      private Object _lang;
      private Object _longdesc;
      private Object _spellcheck;
      private Object _src;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _usemap;
      private Object _width;

      private final ST template;

      private imgST(STGroup group) {
   		template = group.getInstanceOf("img");
   	}

      public imgST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public imgST setAlt(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._alt == null) {
            this._alt = value;
         	template.add("alt", value);
         }

      	return this;
      }

      public String getAlt() {
      	return (String) this._alt;
      }

      public imgST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public imgST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public imgST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public imgST setCrossorigin(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._crossorigin == null) {
            this._crossorigin = value;
         	template.add("crossorigin", value);
         }

      	return this;
      }

      public String getCrossorigin() {
      	return (String) this._crossorigin;
      }

      public imgST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public imgST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public imgST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public imgST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public imgST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public imgST setHeight(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._height == null) {
            this._height = value;
         	template.add("height", value);
         }

      	return this;
      }

      public String getHeight() {
      	return (String) this._height;
      }

      public imgST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public imgST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public imgST setIsmap(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._ismap == null) {
            this._ismap = value;
         	template.add("ismap", value);
         }

      	return this;
      }

      public String getIsmap() {
      	return (String) this._ismap;
      }

      public imgST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public imgST setLongdesc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._longdesc == null) {
            this._longdesc = value;
         	template.add("longdesc", value);
         }

      	return this;
      }

      public String getLongdesc() {
      	return (String) this._longdesc;
      }

      public imgST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public imgST setSrc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._src == null) {
            this._src = value;
         	template.add("src", value);
         }

      	return this;
      }

      public String getSrc() {
      	return (String) this._src;
      }

      public imgST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public imgST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public imgST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public imgST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public imgST setUsemap(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._usemap == null) {
            this._usemap = value;
         	template.add("usemap", value);
         }

      	return this;
      }

      public String getUsemap() {
      	return (String) this._usemap;
      }

      public imgST setWidth(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._width == null) {
            this._width = value;
         	template.add("width", value);
         }

      	return this;
      }

      public String getWidth() {
      	return (String) this._width;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class hgroupST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private hgroupST(STGroup group) {
   		template = group.getInstanceOf("hgroup");
   	}

      public hgroupST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public hgroupST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public hgroupST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public hgroupST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public hgroupST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public hgroupST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public hgroupST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public hgroupST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public hgroupST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public hgroupST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public hgroupST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public hgroupST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public hgroupST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public hgroupST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public hgroupST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public hgroupST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public hgroupST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public hgroupST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class headST implements Html5GroupTemplate {

      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();

      private final ST template;

      private headST(STGroup group) {
   		template = group.getInstanceOf("head");
   	}

      public headST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class headerST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private headerST(STGroup group) {
   		template = group.getInstanceOf("header");
   	}

      public headerST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public headerST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public headerST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public headerST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public headerST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public headerST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public headerST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public headerST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public headerST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public headerST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public headerST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public headerST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public headerST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public headerST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public headerST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public headerST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public headerST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public headerST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class hrST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private hrST(STGroup group) {
   		template = group.getInstanceOf("hr");
   	}

      public hrST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public hrST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public hrST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public hrST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public hrST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public hrST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public hrST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public hrST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public hrST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public hrST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public hrST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public hrST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public hrST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public hrST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public hrST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public hrST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public hrST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class kbdST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private kbdST(STGroup group) {
   		template = group.getInstanceOf("kbd");
   	}

      public kbdST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public kbdST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public kbdST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public kbdST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public kbdST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public kbdST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public kbdST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public kbdST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public kbdST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public kbdST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public kbdST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public kbdST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public kbdST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public kbdST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public kbdST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public kbdST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public kbdST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public kbdST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class markST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private markST(STGroup group) {
   		template = group.getInstanceOf("mark");
   	}

      public markST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public markST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public markST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public markST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public markST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public markST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public markST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public markST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public markST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public markST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public markST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public markST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public markST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public markST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public markST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public markST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public markST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public markST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class keygenST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _autofocus;
      private Object _challenge;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _disabled;
      private Object _draggable;
      private Object _dropzone;
      private Object _form;
      private Object _hidden;
      private Object _id;
      private Object _keytype;
      private Object _lang;
      private Object _name;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private keygenST(STGroup group) {
   		template = group.getInstanceOf("keygen");
   	}

      public keygenST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public keygenST setAutofocus(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._autofocus == null) {
            this._autofocus = value;
         	template.add("autofocus", value);
         }

      	return this;
      }

      public String getAutofocus() {
      	return (String) this._autofocus;
      }

      public keygenST setChallenge(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._challenge == null) {
            this._challenge = value;
         	template.add("challenge", value);
         }

      	return this;
      }

      public String getChallenge() {
      	return (String) this._challenge;
      }

      public keygenST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public keygenST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public keygenST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public keygenST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public keygenST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public keygenST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public keygenST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public keygenST setDisabled(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._disabled == null) {
            this._disabled = value;
         	template.add("disabled", value);
         }

      	return this;
      }

      public String getDisabled() {
      	return (String) this._disabled;
      }

      public keygenST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public keygenST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public keygenST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public keygenST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public keygenST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public keygenST setKeytype(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._keytype == null) {
            this._keytype = value;
         	template.add("keytype", value);
         }

      	return this;
      }

      public String getKeytype() {
      	return (String) this._keytype;
      }

      public keygenST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public keygenST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public keygenST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public keygenST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public keygenST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public keygenST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public keygenST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class inputST implements Html5GroupTemplate {

      private Object _accept;
      private Object _accesskey;
      private Object _alt;
      private Object _autocomplete;
      private Object _autofocus;
      private Object _checked;
      private Object _class;
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _disabled;
      private Object _draggable;
      private Object _dropzone;
      private Object _form;
      private Object _formaction;
      private Object _formenctype;
      private Object _formmethod;
      private Object _formnovalidate;
      private Object _formtarget;
      private Object _height;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _list;
      private Object _max;
      private Object _maxlength;
      private Object _min;
      private Object _multiple;
      private Object _name;
      private Object _pattern;
      private Object _placeholder;
      private Object _readonly;
      private Object _required;
      private Object _size;
      private Object _spellcheck;
      private Object _src;
      private Object _step;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;
      private Object _value;
      private Object _width;

      private final ST template;

      private inputST(STGroup group) {
   		template = group.getInstanceOf("input");
   	}

      public inputST setAccept(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accept == null) {
            this._accept = value;
         	template.add("accept", value);
         }

      	return this;
      }

      public String getAccept() {
      	return (String) this._accept;
      }

      public inputST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public inputST setAlt(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._alt == null) {
            this._alt = value;
         	template.add("alt", value);
         }

      	return this;
      }

      public String getAlt() {
      	return (String) this._alt;
      }

      public inputST setAutocomplete(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._autocomplete == null) {
            this._autocomplete = value;
         	template.add("autocomplete", value);
         }

      	return this;
      }

      public String getAutocomplete() {
      	return (String) this._autocomplete;
      }

      public inputST setAutofocus(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._autofocus == null) {
            this._autofocus = value;
         	template.add("autofocus", value);
         }

      	return this;
      }

      public String getAutofocus() {
      	return (String) this._autofocus;
      }

      public inputST setChecked(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._checked == null) {
            this._checked = value;
         	template.add("checked", value);
         }

      	return this;
      }

      public String getChecked() {
      	return (String) this._checked;
      }

      public inputST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public inputST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public inputST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public inputST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public inputST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public inputST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public inputST setDisabled(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._disabled == null) {
            this._disabled = value;
         	template.add("disabled", value);
         }

      	return this;
      }

      public String getDisabled() {
      	return (String) this._disabled;
      }

      public inputST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public inputST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public inputST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public inputST setFormaction(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formaction == null) {
            this._formaction = value;
         	template.add("formaction", value);
         }

      	return this;
      }

      public String getFormaction() {
      	return (String) this._formaction;
      }

      public inputST setFormenctype(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formenctype == null) {
            this._formenctype = value;
         	template.add("formenctype", value);
         }

      	return this;
      }

      public String getFormenctype() {
      	return (String) this._formenctype;
      }

      public inputST setFormmethod(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formmethod == null) {
            this._formmethod = value;
         	template.add("formmethod", value);
         }

      	return this;
      }

      public String getFormmethod() {
      	return (String) this._formmethod;
      }

      public inputST setFormnovalidate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formnovalidate == null) {
            this._formnovalidate = value;
         	template.add("formnovalidate", value);
         }

      	return this;
      }

      public String getFormnovalidate() {
      	return (String) this._formnovalidate;
      }

      public inputST setFormtarget(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._formtarget == null) {
            this._formtarget = value;
         	template.add("formtarget", value);
         }

      	return this;
      }

      public String getFormtarget() {
      	return (String) this._formtarget;
      }

      public inputST setHeight(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._height == null) {
            this._height = value;
         	template.add("height", value);
         }

      	return this;
      }

      public String getHeight() {
      	return (String) this._height;
      }

      public inputST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public inputST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public inputST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public inputST setList(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._list == null) {
            this._list = value;
         	template.add("list", value);
         }

      	return this;
      }

      public String getList() {
      	return (String) this._list;
      }

      public inputST setMax(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._max == null) {
            this._max = value;
         	template.add("max", value);
         }

      	return this;
      }

      public String getMax() {
      	return (String) this._max;
      }

      public inputST setMaxlength(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._maxlength == null) {
            this._maxlength = value;
         	template.add("maxlength", value);
         }

      	return this;
      }

      public String getMaxlength() {
      	return (String) this._maxlength;
      }

      public inputST setMin(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._min == null) {
            this._min = value;
         	template.add("min", value);
         }

      	return this;
      }

      public String getMin() {
      	return (String) this._min;
      }

      public inputST setMultiple(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._multiple == null) {
            this._multiple = value;
         	template.add("multiple", value);
         }

      	return this;
      }

      public String getMultiple() {
      	return (String) this._multiple;
      }

      public inputST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public inputST setPattern(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._pattern == null) {
            this._pattern = value;
         	template.add("pattern", value);
         }

      	return this;
      }

      public String getPattern() {
      	return (String) this._pattern;
      }

      public inputST setPlaceholder(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._placeholder == null) {
            this._placeholder = value;
         	template.add("placeholder", value);
         }

      	return this;
      }

      public String getPlaceholder() {
      	return (String) this._placeholder;
      }

      public inputST setReadonly(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._readonly == null) {
            this._readonly = value;
         	template.add("readonly", value);
         }

      	return this;
      }

      public String getReadonly() {
      	return (String) this._readonly;
      }

      public inputST setRequired(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._required == null) {
            this._required = value;
         	template.add("required", value);
         }

      	return this;
      }

      public String getRequired() {
      	return (String) this._required;
      }

      public inputST setSize(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._size == null) {
            this._size = value;
         	template.add("size", value);
         }

      	return this;
      }

      public String getSize() {
      	return (String) this._size;
      }

      public inputST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public inputST setSrc(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._src == null) {
            this._src = value;
         	template.add("src", value);
         }

      	return this;
      }

      public String getSrc() {
      	return (String) this._src;
      }

      public inputST setStep(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._step == null) {
            this._step = value;
         	template.add("step", value);
         }

      	return this;
      }

      public String getStep() {
      	return (String) this._step;
      }

      public inputST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public inputST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public inputST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public inputST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public inputST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      public inputST setValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._value == null) {
            this._value = value;
         	template.add("value", value);
         }

      	return this;
      }

      public String getValue() {
      	return (String) this._value;
      }

      public inputST setWidth(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._width == null) {
            this._width = value;
         	template.add("width", value);
         }

      	return this;
      }

      public String getWidth() {
      	return (String) this._width;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class insST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _cite;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _datetime;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private insST(STGroup group) {
   		template = group.getInstanceOf("ins");
   	}

      public insST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public insST setCite(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._cite == null) {
            this._cite = value;
         	template.add("cite", value);
         }

      	return this;
      }

      public String getCite() {
      	return (String) this._cite;
      }

      public insST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public insST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public insST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public insST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public insST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public insST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public insST setDatetime(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._datetime == null) {
            this._datetime = value;
         	template.add("datetime", value);
         }

      	return this;
      }

      public String getDatetime() {
      	return (String) this._datetime;
      }

      public insST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public insST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public insST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public insST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public insST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public insST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public insST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public insST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public insST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public insST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public insST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class formST implements Html5GroupTemplate {

      private Object _accept_charset;
      private Object _accesskey;
      private Object _action;
      private Object _autocomplete;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _enctype;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _method;
      private Object _name;
      private Object _novalidate;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _target;
      private Object _title;
      private Object _translate;

      private final ST template;

      private formST(STGroup group) {
   		template = group.getInstanceOf("form");
   	}

      public formST setAccept_charset(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accept_charset == null) {
            this._accept_charset = value;
         	template.add("accept_charset", value);
         }

      	return this;
      }

      public String getAccept_charset() {
      	return (String) this._accept_charset;
      }

      public formST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public formST setAction(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._action == null) {
            this._action = value;
         	template.add("action", value);
         }

      	return this;
      }

      public String getAction() {
      	return (String) this._action;
      }

      public formST setAutocomplete(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._autocomplete == null) {
            this._autocomplete = value;
         	template.add("autocomplete", value);
         }

      	return this;
      }

      public String getAutocomplete() {
      	return (String) this._autocomplete;
      }

      public formST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public formST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public formST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public formST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public formST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public formST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public formST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public formST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public formST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public formST setEnctype(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._enctype == null) {
            this._enctype = value;
         	template.add("enctype", value);
         }

      	return this;
      }

      public String getEnctype() {
      	return (String) this._enctype;
      }

      public formST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public formST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public formST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public formST setMethod(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._method == null) {
            this._method = value;
         	template.add("method", value);
         }

      	return this;
      }

      public String getMethod() {
      	return (String) this._method;
      }

      public formST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public formST setNovalidate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._novalidate == null) {
            this._novalidate = value;
         	template.add("novalidate", value);
         }

      	return this;
      }

      public String getNovalidate() {
      	return (String) this._novalidate;
      }

      public formST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public formST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public formST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public formST setTarget(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._target == null) {
            this._target = value;
         	template.add("target", value);
         }

      	return this;
      }

      public String getTarget() {
      	return (String) this._target;
      }

      public formST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public formST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class frameST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private frameST(STGroup group) {
   		template = group.getInstanceOf("frame");
   	}

      public frameST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public frameST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public frameST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public frameST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public frameST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public frameST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public frameST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public frameST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public frameST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public frameST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public frameST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public frameST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public frameST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public frameST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public frameST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public frameST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public frameST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class framesetST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private framesetST(STGroup group) {
   		template = group.getInstanceOf("frameset");
   	}

      public framesetST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public framesetST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public framesetST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public framesetST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public framesetST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public framesetST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public framesetST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public framesetST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public framesetST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public framesetST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public framesetST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public framesetST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public framesetST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public framesetST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public framesetST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public framesetST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public framesetST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public framesetST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class figureST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private figureST(STGroup group) {
   		template = group.getInstanceOf("figure");
   	}

      public figureST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public figureST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public figureST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public figureST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public figureST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public figureST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public figureST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public figureST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public figureST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public figureST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public figureST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public figureST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public figureST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public figureST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public figureST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public figureST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public figureST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public figureST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class fontST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private fontST(STGroup group) {
   		template = group.getInstanceOf("font");
   	}

      public fontST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public fontST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public fontST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public fontST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public fontST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public fontST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public fontST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public fontST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public fontST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public fontST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public fontST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public fontST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public fontST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public fontST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public fontST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public fontST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public fontST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public fontST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class footerST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private footerST(STGroup group) {
   		template = group.getInstanceOf("footer");
   	}

      public footerST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public footerST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public footerST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public footerST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public footerST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public footerST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public footerST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public footerST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public footerST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public footerST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public footerST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public footerST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public footerST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public footerST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public footerST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public footerST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public footerST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public footerST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class h4ST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private h4ST(STGroup group) {
   		template = group.getInstanceOf("h4");
   	}

      public h4ST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public h4ST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public h4ST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public h4ST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public h4ST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public h4ST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public h4ST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public h4ST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public h4ST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public h4ST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public h4ST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public h4ST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public h4ST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public h4ST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public h4ST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public h4ST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public h4ST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public h4ST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class h5ST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private h5ST(STGroup group) {
   		template = group.getInstanceOf("h5");
   	}

      public h5ST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public h5ST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public h5ST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public h5ST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public h5ST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public h5ST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public h5ST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public h5ST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public h5ST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public h5ST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public h5ST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public h5ST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public h5ST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public h5ST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public h5ST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public h5ST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public h5ST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public h5ST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class menuST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _label;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;

      private final ST template;

      private menuST(STGroup group) {
   		template = group.getInstanceOf("menu");
   	}

      public menuST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public menuST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public menuST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public menuST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public menuST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public menuST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public menuST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public menuST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public menuST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public menuST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public menuST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public menuST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public menuST setLabel(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._label == null) {
            this._label = value;
         	template.add("label", value);
         }

      	return this;
      }

      public String getLabel() {
      	return (String) this._label;
      }

      public menuST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public menuST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public menuST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public menuST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public menuST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public menuST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public menuST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class meterST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _form;
      private Object _hidden;
      private Object _high;
      private Object _id;
      private Object _lang;
      private Object _low;
      private Object _max;
      private Object _min;
      private Object _optimum;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _value;

      private final ST template;

      private meterST(STGroup group) {
   		template = group.getInstanceOf("meter");
   	}

      public meterST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public meterST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public meterST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public meterST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public meterST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public meterST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public meterST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public meterST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public meterST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public meterST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public meterST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public meterST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public meterST setHigh(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._high == null) {
            this._high = value;
         	template.add("high", value);
         }

      	return this;
      }

      public String getHigh() {
      	return (String) this._high;
      }

      public meterST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public meterST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public meterST setLow(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._low == null) {
            this._low = value;
         	template.add("low", value);
         }

      	return this;
      }

      public String getLow() {
      	return (String) this._low;
      }

      public meterST setMax(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._max == null) {
            this._max = value;
         	template.add("max", value);
         }

      	return this;
      }

      public String getMax() {
      	return (String) this._max;
      }

      public meterST setMin(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._min == null) {
            this._min = value;
         	template.add("min", value);
         }

      	return this;
      }

      public String getMin() {
      	return (String) this._min;
      }

      public meterST setOptimum(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._optimum == null) {
            this._optimum = value;
         	template.add("optimum", value);
         }

      	return this;
      }

      public String getOptimum() {
      	return (String) this._optimum;
      }

      public meterST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public meterST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public meterST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public meterST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public meterST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public meterST setValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._value == null) {
            this._value = value;
         	template.add("value", value);
         }

      	return this;
      }

      public String getValue() {
      	return (String) this._value;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class h6ST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private h6ST(STGroup group) {
   		template = group.getInstanceOf("h6");
   	}

      public h6ST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public h6ST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public h6ST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public h6ST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public h6ST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public h6ST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public h6ST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public h6ST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public h6ST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public h6ST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public h6ST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public h6ST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public h6ST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public h6ST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public h6ST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public h6ST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public h6ST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public h6ST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class metaST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _charset;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _http_equiv;
      private Object _id;
      private Object _lang;
      private Object _name;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private metaST(STGroup group) {
   		template = group.getInstanceOf("meta");
   	}

      public metaST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public metaST setCharset(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._charset == null) {
            this._charset = value;
         	template.add("charset", value);
         }

      	return this;
      }

      public String getCharset() {
      	return (String) this._charset;
      }

      public metaST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public metaST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public metaST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public metaST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public metaST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public metaST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public metaST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public metaST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public metaST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public metaST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public metaST setHttp_equiv(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._http_equiv == null) {
            this._http_equiv = value;
         	template.add("http_equiv", value);
         }

      	return this;
      }

      public String getHttp_equiv() {
      	return (String) this._http_equiv;
      }

      public metaST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public metaST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public metaST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public metaST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public metaST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public metaST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public metaST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public metaST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class gtST implements Html5GroupTemplate {


      private final ST template;

      private gtST(STGroup group) {
   		template = group.getInstanceOf("gt");
   	}

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class h2ST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private h2ST(STGroup group) {
   		template = group.getInstanceOf("h2");
   	}

      public h2ST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public h2ST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public h2ST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public h2ST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public h2ST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public h2ST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public h2ST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public h2ST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public h2ST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public h2ST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public h2ST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public h2ST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public h2ST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public h2ST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public h2ST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public h2ST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public h2ST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public h2ST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class h1ST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private h1ST(STGroup group) {
   		template = group.getInstanceOf("h1");
   	}

      public h1ST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public h1ST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public h1ST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public h1ST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public h1ST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public h1ST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public h1ST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public h1ST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public h1ST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public h1ST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public h1ST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public h1ST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public h1ST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public h1ST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public h1ST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public h1ST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public h1ST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public h1ST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class noscriptST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private noscriptST(STGroup group) {
   		template = group.getInstanceOf("noscript");
   	}

      public noscriptST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public noscriptST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public noscriptST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public noscriptST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public noscriptST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public noscriptST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public noscriptST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public noscriptST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public noscriptST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public noscriptST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public noscriptST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public noscriptST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public noscriptST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public noscriptST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public noscriptST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public noscriptST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public noscriptST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public noscriptST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class h3ST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private h3ST(STGroup group) {
   		template = group.getInstanceOf("h3");
   	}

      public h3ST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public h3ST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public h3ST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public h3ST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public h3ST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public h3ST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public h3ST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public h3ST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public h3ST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public h3ST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public h3ST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public h3ST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public h3ST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public h3ST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public h3ST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public h3ST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public h3ST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public h3ST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class noframesST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private noframesST(STGroup group) {
   		template = group.getInstanceOf("noframes");
   	}

      public noframesST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public noframesST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public noframesST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public noframesST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public noframesST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public noframesST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public noframesST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public noframesST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public noframesST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public noframesST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public noframesST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public noframesST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public noframesST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public noframesST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public noframesST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public noframesST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public noframesST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public noframesST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class mimeJsonST implements Html5GroupTemplate {


      private final ST template;

      private mimeJsonST(STGroup group) {
   		template = group.getInstanceOf("mimeJson");
   	}

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class navST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private navST(STGroup group) {
   		template = group.getInstanceOf("nav");
   	}

      public navST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public navST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public navST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public navST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public navST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public navST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public navST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public navST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public navST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public navST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public navST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public navST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public navST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public navST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public navST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public navST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public navST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public navST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class optgroupST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _disabled;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _label;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private optgroupST(STGroup group) {
   		template = group.getInstanceOf("optgroup");
   	}

      public optgroupST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public optgroupST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public optgroupST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public optgroupST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public optgroupST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public optgroupST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public optgroupST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public optgroupST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public optgroupST setDisabled(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._disabled == null) {
            this._disabled = value;
         	template.add("disabled", value);
         }

      	return this;
      }

      public String getDisabled() {
      	return (String) this._disabled;
      }

      public optgroupST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public optgroupST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public optgroupST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public optgroupST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public optgroupST setLabel(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._label == null) {
            this._label = value;
         	template.add("label", value);
         }

      	return this;
      }

      public String getLabel() {
      	return (String) this._label;
      }

      public optgroupST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public optgroupST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public optgroupST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public optgroupST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public optgroupST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public optgroupST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class olST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _reversed;
      private Object _spellcheck;
      private Object _start;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;

      private final ST template;

      private olST(STGroup group) {
   		template = group.getInstanceOf("ol");
   	}

      public olST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public olST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public olST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public olST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public olST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public olST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public olST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public olST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public olST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public olST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public olST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public olST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public olST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public olST setReversed(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._reversed == null) {
            this._reversed = value;
         	template.add("reversed", value);
         }

      	return this;
      }

      public String getReversed() {
      	return (String) this._reversed;
      }

      public olST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public olST setStart(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._start == null) {
            this._start = value;
         	template.add("start", value);
         }

      	return this;
      }

      public String getStart() {
      	return (String) this._start;
      }

      public olST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public olST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public olST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public olST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public olST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class pST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private pST(STGroup group) {
   		template = group.getInstanceOf("p");
   	}

      public pST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public pST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public pST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public pST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public pST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public pST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public pST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public pST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public pST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public pST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public pST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public pST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public pST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public pST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public pST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public pST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public pST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public pST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class outputST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _for;
      private Object _form;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _name;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private outputST(STGroup group) {
   		template = group.getInstanceOf("output");
   	}

      public outputST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public outputST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public outputST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public outputST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public outputST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public outputST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public outputST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public outputST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public outputST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public outputST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public outputST setFor(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._for == null) {
            this._for = value;
         	template.add("for", value);
         }

      	return this;
      }

      public String getFor() {
      	return (String) this._for;
      }

      public outputST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public outputST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public outputST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public outputST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public outputST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public outputST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public outputST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public outputST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public outputST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public outputST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class optionST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _disabled;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _label;
      private Object _lang;
      private Object _selected;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _value;

      private final ST template;

      private optionST(STGroup group) {
   		template = group.getInstanceOf("option");
   	}

      public optionST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public optionST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public optionST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public optionST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public optionST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public optionST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public optionST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public optionST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public optionST setDisabled(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._disabled == null) {
            this._disabled = value;
         	template.add("disabled", value);
         }

      	return this;
      }

      public String getDisabled() {
      	return (String) this._disabled;
      }

      public optionST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public optionST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public optionST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public optionST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public optionST setLabel(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._label == null) {
            this._label = value;
         	template.add("label", value);
         }

      	return this;
      }

      public String getLabel() {
      	return (String) this._label;
      }

      public optionST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public optionST setSelected(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._selected == null) {
            this._selected = value;
         	template.add("selected", value);
         }

      	return this;
      }

      public String getSelected() {
      	return (String) this._selected;
      }

      public optionST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public optionST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public optionST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public optionST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public optionST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public optionST setValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._value == null) {
            this._value = value;
         	template.add("value", value);
         }

      	return this;
      }

      public String getValue() {
      	return (String) this._value;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class progressST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _max;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _value;

      private final ST template;

      private progressST(STGroup group) {
   		template = group.getInstanceOf("progress");
   	}

      public progressST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public progressST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public progressST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public progressST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public progressST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public progressST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public progressST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public progressST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public progressST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public progressST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public progressST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public progressST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public progressST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public progressST setMax(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._max == null) {
            this._max = value;
         	template.add("max", value);
         }

      	return this;
      }

      public String getMax() {
      	return (String) this._max;
      }

      public progressST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public progressST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public progressST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public progressST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public progressST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public progressST setValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._value == null) {
            this._value = value;
         	template.add("value", value);
         }

      	return this;
      }

      public String getValue() {
      	return (String) this._value;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class preST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private preST(STGroup group) {
   		template = group.getInstanceOf("pre");
   	}

      public preST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public preST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public preST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public preST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public preST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public preST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public preST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public preST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public preST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public preST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public preST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public preST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public preST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public preST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public preST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public preST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public preST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public preST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class pageST implements Html5GroupTemplate {

      private Object _body;
      private Object _head;
      private java.util.Set<java.util.Map<String, Object>> _xmlns = new java.util.LinkedHashSet<>();

      private final ST template;

      private pageST(STGroup group) {
   		template = group.getInstanceOf("page");
   	}

      public pageST setBody(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._body == null) {
            this._body = value;
         	template.add("body", value);
         }

      	return this;
      }

      public String getBody() {
      	return (String) this._body;
      }

      public pageST setHead(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._head == null) {
            this._head = value;
         	template.add("head", value);
         }

      	return this;
      }

      public String getHead() {
      	return (String) this._head;
      }

      public pageST addXmlnsValue(Object name_, Object url_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("url", (url_ == null || url_.toString().length() == 0) ? null : url_);
      	this._xmlns.add(map);

         template.addAggr("xmlns.{name, url}", map.get("name"), map.get("url"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getXmlns() {
      	return this._xmlns;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class paramST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _name;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _value;

      private final ST template;

      private paramST(STGroup group) {
   		template = group.getInstanceOf("param");
   	}

      public paramST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public paramST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public paramST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public paramST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public paramST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public paramST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public paramST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public paramST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public paramST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public paramST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public paramST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public paramST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public paramST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public paramST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public paramST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public paramST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public paramST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public paramST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public paramST setValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._value == null) {
            this._value = value;
         	template.add("value", value);
         }

      	return this;
      }

      public String getValue() {
      	return (String) this._value;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class liST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _value;

      private final ST template;

      private liST(STGroup group) {
   		template = group.getInstanceOf("li");
   	}

      public liST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public liST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public liST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public liST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public liST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public liST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public liST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public liST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public liST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public liST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public liST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public liST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public liST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public liST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public liST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public liST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public liST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public liST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public liST setValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._value == null) {
            this._value = value;
         	template.add("value", value);
         }

      	return this;
      }

      public String getValue() {
      	return (String) this._value;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class labelST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _for;
      private Object _form;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private labelST(STGroup group) {
   		template = group.getInstanceOf("label");
   	}

      public labelST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public labelST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public labelST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public labelST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public labelST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public labelST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public labelST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public labelST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public labelST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public labelST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public labelST setFor(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._for == null) {
            this._for = value;
         	template.add("for", value);
         }

      	return this;
      }

      public String getFor() {
      	return (String) this._for;
      }

      public labelST setForm(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._form == null) {
            this._form = value;
         	template.add("form", value);
         }

      	return this;
      }

      public String getForm() {
      	return (String) this._form;
      }

      public labelST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public labelST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public labelST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public labelST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public labelST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public labelST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public labelST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public labelST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class legendST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private legendST(STGroup group) {
   		template = group.getInstanceOf("legend");
   	}

      public legendST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public legendST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public legendST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public legendST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public legendST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public legendST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public legendST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public legendST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public legendST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public legendST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public legendST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public legendST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public legendST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public legendST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public legendST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public legendST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public legendST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public legendST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class mapST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _name;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private mapST(STGroup group) {
   		template = group.getInstanceOf("map");
   	}

      public mapST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public mapST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public mapST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public mapST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public mapST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public mapST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public mapST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public mapST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public mapST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public mapST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public mapST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public mapST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public mapST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public mapST setName(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._name == null) {
            this._name = value;
         	template.add("name", value);
         }

      	return this;
      }

      public String getName() {
      	return (String) this._name;
      }

      public mapST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public mapST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public mapST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public mapST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public mapST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class linkST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private Object _contenteditable;
      private Object _contextmenu;
      private Object _crossorigin;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _href;
      private Object _hreflang;
      private Object _id;
      private Object _lang;
      private Object _media;
      private Object _rel;
      private Object _sizes;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;

      private final ST template;

      private linkST(STGroup group) {
   		template = group.getInstanceOf("link");
   	}

      public linkST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public linkST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public linkST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public linkST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public linkST setCrossorigin(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._crossorigin == null) {
            this._crossorigin = value;
         	template.add("crossorigin", value);
         }

      	return this;
      }

      public String getCrossorigin() {
      	return (String) this._crossorigin;
      }

      public linkST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public linkST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public linkST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public linkST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public linkST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public linkST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public linkST setHref(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._href == null) {
            this._href = value;
         	template.add("href", value);
         }

      	return this;
      }

      public String getHref() {
      	return (String) this._href;
      }

      public linkST setHreflang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hreflang == null) {
            this._hreflang = value;
         	template.add("hreflang", value);
         }

      	return this;
      }

      public String getHreflang() {
      	return (String) this._hreflang;
      }

      public linkST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public linkST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public linkST setMedia(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._media == null) {
            this._media = value;
         	template.add("media", value);
         }

      	return this;
      }

      public String getMedia() {
      	return (String) this._media;
      }

      public linkST setRel(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._rel == null) {
            this._rel = value;
         	template.add("rel", value);
         }

      	return this;
      }

      public String getRel() {
      	return (String) this._rel;
      }

      public linkST setSizes(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._sizes == null) {
            this._sizes = value;
         	template.add("sizes", value);
         }

      	return this;
      }

      public String getSizes() {
      	return (String) this._sizes;
      }

      public linkST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public linkST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public linkST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public linkST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public linkST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public linkST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class mainST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private mainST(STGroup group) {
   		template = group.getInstanceOf("main");
   	}

      public mainST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public mainST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public mainST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public mainST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public mainST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public mainST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public mainST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public mainST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public mainST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public mainST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public mainST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public mainST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public mainST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public mainST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public mainST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public mainST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public mainST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public mainST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class menuitemST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _checked;
      private Object _class;
      private Object _command;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _default_;
      private Object _dir;
      private Object _disabled;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _icon;
      private Object _id;
      private Object _label;
      private Object _lang;
      private Object _radiogroup;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;
      private Object _type;

      private final ST template;

      private menuitemST(STGroup group) {
   		template = group.getInstanceOf("menuitem");
   	}

      public menuitemST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public menuitemST setChecked(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._checked == null) {
            this._checked = value;
         	template.add("checked", value);
         }

      	return this;
      }

      public String getChecked() {
      	return (String) this._checked;
      }

      public menuitemST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public menuitemST setCommand(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._command == null) {
            this._command = value;
         	template.add("command", value);
         }

      	return this;
      }

      public String getCommand() {
      	return (String) this._command;
      }

      public menuitemST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public menuitemST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public menuitemST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public menuitemST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public menuitemST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public menuitemST setDefault_(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._default_ == null) {
            this._default_ = value;
         	template.add("default_", value);
         }

      	return this;
      }

      public String getDefault_() {
      	return (String) this._default_;
      }

      public menuitemST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public menuitemST setDisabled(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._disabled == null) {
            this._disabled = value;
         	template.add("disabled", value);
         }

      	return this;
      }

      public String getDisabled() {
      	return (String) this._disabled;
      }

      public menuitemST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public menuitemST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public menuitemST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public menuitemST setIcon(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._icon == null) {
            this._icon = value;
         	template.add("icon", value);
         }

      	return this;
      }

      public String getIcon() {
      	return (String) this._icon;
      }

      public menuitemST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public menuitemST setLabel(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._label == null) {
            this._label = value;
         	template.add("label", value);
         }

      	return this;
      }

      public String getLabel() {
      	return (String) this._label;
      }

      public menuitemST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public menuitemST setRadiogroup(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._radiogroup == null) {
            this._radiogroup = value;
         	template.add("radiogroup", value);
         }

      	return this;
      }

      public String getRadiogroup() {
      	return (String) this._radiogroup;
      }

      public menuitemST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public menuitemST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public menuitemST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public menuitemST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public menuitemST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      public menuitemST setType(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._type == null) {
            this._type = value;
         	template.add("type", value);
         }

      	return this;
      }

      public String getType() {
      	return (String) this._type;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class divST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private divST(STGroup group) {
   		template = group.getInstanceOf("div");
   	}

      public divST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public divST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public divST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public divST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public divST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public divST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public divST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public divST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public divST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public divST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public divST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public divST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public divST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public divST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public divST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public divST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public divST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public divST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class dirST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private dirST(STGroup group) {
   		template = group.getInstanceOf("dir");
   	}

      public dirST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public dirST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public dirST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public dirST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public dirST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public dirST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public dirST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public dirST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public dirST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public dirST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public dirST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public dirST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public dirST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public dirST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public dirST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public dirST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public dirST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public dirST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class dialogST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _open;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private dialogST(STGroup group) {
   		template = group.getInstanceOf("dialog");
   	}

      public dialogST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public dialogST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public dialogST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public dialogST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public dialogST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public dialogST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public dialogST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public dialogST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public dialogST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public dialogST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public dialogST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public dialogST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public dialogST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public dialogST setOpen(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._open == null) {
            this._open = value;
         	template.add("open", value);
         }

      	return this;
      }

      public String getOpen() {
      	return (String) this._open;
      }

      public dialogST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public dialogST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public dialogST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public dialogST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public dialogST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

   public final class dfnST implements Html5GroupTemplate {

      private Object _accesskey;
      private Object _class;
      private java.util.Set<Object> _content = new java.util.LinkedHashSet<>();
      private Object _contenteditable;
      private Object _contextmenu;
      private java.util.Set<java.util.Map<String, Object>> _data = new java.util.LinkedHashSet<>();
      private Object _databind;
      private Object _dir;
      private Object _draggable;
      private Object _dropzone;
      private Object _hidden;
      private Object _id;
      private Object _lang;
      private Object _spellcheck;
      private Object _style;
      private Object _tabindex;
      private Object _title;
      private Object _translate;

      private final ST template;

      private dfnST(STGroup group) {
   		template = group.getInstanceOf("dfn");
   	}

      public dfnST setAccesskey(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._accesskey == null) {
            this._accesskey = value;
         	template.add("accesskey", value);
         }

      	return this;
      }

      public String getAccesskey() {
      	return (String) this._accesskey;
      }

      public dfnST setClass(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._class == null) {
            this._class = value;
         	template.add("class", value);
         }

      	return this;
      }

      public String getClassValueValue() {
      	return (String) this._class;
      }

      public dfnST addContentValue(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	this._content.add(value);
      	template.add("content", value);

         return this;
      }

      public java.util.Set<Object> getContentValues() {
      	return this._content;
      }

      public dfnST setContenteditable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contenteditable == null) {
            this._contenteditable = value;
         	template.add("contenteditable", value);
         }

      	return this;
      }

      public String getContenteditable() {
      	return (String) this._contenteditable;
      }

      public dfnST setContextmenu(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._contextmenu == null) {
            this._contextmenu = value;
         	template.add("contextmenu", value);
         }

      	return this;
      }

      public String getContextmenu() {
      	return (String) this._contextmenu;
      }

      public dfnST addDataValue(Object name_, Object value_) {
      	final java.util.Map<String, Object> map = new java.util.LinkedHashMap<>();
      	map.put("name", (name_ == null || name_.toString().length() == 0) ? null : name_);
      	map.put("value", (value_ == null || value_.toString().length() == 0) ? null : value_);
      	this._data.add(map);

         template.addAggr("data.{name, value}", map.get("name"), map.get("value"));
         return this;
      }

      public java.util.Set<java.util.Map<String, Object>> getData() {
      	return this._data;
      }

      public dfnST setDatabind(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._databind == null) {
            this._databind = value;
         	template.add("databind", value);
         }

      	return this;
      }

      public String getDatabind() {
      	return (String) this._databind;
      }

      public dfnST setDir(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dir == null) {
            this._dir = value;
         	template.add("dir", value);
         }

      	return this;
      }

      public String getDir() {
      	return (String) this._dir;
      }

      public dfnST setDraggable(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._draggable == null) {
            this._draggable = value;
         	template.add("draggable", value);
         }

      	return this;
      }

      public String getDraggable() {
      	return (String) this._draggable;
      }

      public dfnST setDropzone(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._dropzone == null) {
            this._dropzone = value;
         	template.add("dropzone", value);
         }

      	return this;
      }

      public String getDropzone() {
      	return (String) this._dropzone;
      }

      public dfnST setHidden(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._hidden == null) {
            this._hidden = value;
         	template.add("hidden", value);
         }

      	return this;
      }

      public String getHidden() {
      	return (String) this._hidden;
      }

      public dfnST setId(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._id == null) {
            this._id = value;
         	template.add("id", value);
         }

      	return this;
      }

      public String getId() {
      	return (String) this._id;
      }

      public dfnST setLang(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._lang == null) {
            this._lang = value;
         	template.add("lang", value);
         }

      	return this;
      }

      public String getLang() {
      	return (String) this._lang;
      }

      public dfnST setSpellcheck(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._spellcheck == null) {
            this._spellcheck = value;
         	template.add("spellcheck", value);
         }

      	return this;
      }

      public String getSpellcheck() {
      	return (String) this._spellcheck;
      }

      public dfnST setStyle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._style == null) {
            this._style = value;
         	template.add("style", value);
         }

      	return this;
      }

      public String getStyle() {
      	return (String) this._style;
      }

      public dfnST setTabindex(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._tabindex == null) {
            this._tabindex = value;
         	template.add("tabindex", value);
         }

      	return this;
      }

      public String getTabindex() {
      	return (String) this._tabindex;
      }

      public dfnST setTitle(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._title == null) {
            this._title = value;
         	template.add("title", value);
         }

      	return this;
      }

      public String getTitle() {
      	return (String) this._title;
      }

      public dfnST setTranslate(Object value) {
      	if (value == null || value.toString().length() == 0)
         	return this;

      	if (this._translate == null) {
            this._translate = value;
         	template.add("translate", value);
         }

      	return this;
      }

      public String getTranslate() {
      	return (String) this._translate;
      }

      @Override
   	public String toString() {
   		return template.render();
   	}
   }

	static boolean tryToSetListProperty(ST template, Object value, AtomicBoolean alreadySet, String name) {
		if (value == null || value.toString().length() == 0) return true;
		alreadySet.set(true);
		template.add(name, value);
		return false;
	}

	private enum FormatCode {
	      capitalize, toUpper, lowFirst, toLower, humpToCap, camelHump, splitCamelHump, singlify, packageToPath
	   }

	   private final class DefaultAttributeRenderer implements org.stringtemplate.v4.AttributeRenderer {

	      @Override
	      public String toString(Object o, String formatString, java.util.Locale locale) {

	         final String text = o.toString();

	         if (formatString == null) return text;

	         switch (FormatCode.valueOf(formatString)) {
	            case capitalize:
	               return capitalize(text);
	            case toUpper:
	               return toUpper(text);
	            case lowFirst:
	               return lowFirst(text);
	            case toLower:
	               return text.toLowerCase();
	            case humpToCap:
	               return humpToCap(text);
	            case camelHump:
	               return camelHump(text);
	            case splitCamelHump:
	               return splitCamelHump(text);
	            case singlify:
	               String s = toUpper(text).substring(0, 1) + text.substring(1);
	               if (s.toLowerCase().endsWith("ies")) return s.substring(0, s.length() - 3) + "y";
	               else if (s.toLowerCase().endsWith("es") || s.toLowerCase().endsWith("nts")) return s.substring(0, s.length() - 1);
	               else if (s.toLowerCase().endsWith("ions") || s.toLowerCase().endsWith("mns"))
	                  return s.substring(0, s.length() - 1);
	               return s;
	            case packageToPath:
	               return packageToPath((text));
	            default:
	               return o.toString();
	         }
	      }

	      private String capitalize(String string) {
	         if (string == null || string.length() == 0) return "";
	         return Character.toUpperCase(string.charAt(0)) + (string.length() > 1 ? string.substring(1) : "");
	      }

	      private String lowFirst(String string) {
	         if (string == null || string.length() == 0) return "";
	         return Character.toLowerCase(string.charAt(0)) + (string.length() > 1 ? string.substring(1) : "");
	      }

	      private String toUpper(String text) {
	         return text.toUpperCase();
	      }

	      private String humpToCap(String text) {
	         final char[] chars = text.toCharArray();
	         final StringBuilder out = new StringBuilder();
	         boolean first = true;
	         for (int i = 0; i < chars.length; i++) {
	            char aChar = chars[i];
	            if (!first && Character.isUpperCase(aChar) && (i < chars.length - 2 && Character.isLowerCase(chars[i + 1]))) {
	               out.append("_");
	            }
	            first = false;
	            out.append(Character.toUpperCase(aChar));
	         }
	         return out.toString();
	      }

	      private String camelHump(String text) {
	         final char[] chars = text.toCharArray();
	         final StringBuilder out = new StringBuilder();
	         boolean capitalize = true;
	         for (char aChar : chars) {
	            if (Character.isWhitespace(aChar)) {
	               capitalize = true;
	               continue;
	            }
	            out.append(capitalize ? Character.toUpperCase(aChar) : aChar);
	            capitalize = false;
	         }
	         return out.toString();
	      }

	      private String splitCamelHump(String text) {
	         final char[] chars = text.toCharArray();
	         final StringBuilder out = new StringBuilder();
	         boolean first = true;
	         for (char aChar : chars) {
	            if (Character.isUpperCase(aChar)) out.append(" ");
	            out.append(first ? Character.toUpperCase(aChar) : Character.toLowerCase(aChar));
	            first = false;
	         }
	         return out.toString();
	      }

	      private String packageToPath(String packageName) {
	          return (packageName == null ? "" : (packageName.replaceAll("[.]", "/") + java.io.File.separator));
	      }
	   }

	public String list(String delimiter, Object... elements) {
		final StringBuilder list = new StringBuilder();
		boolean first = true;
		for (Object element : elements) {
			if (!first) list.append(delimiter);
			list.append(element);
			first = false;
		}
		return list.toString() + delimiter;
	}

	public static void toSTGFile(java.io.File dir) throws java.io.IOException {
		final java.io.BufferedWriter out = new java.io.BufferedWriter(new java.io.FileWriter(new java.io.File(dir, "Html5Group.stg")));
		out.write(stg);
		out.close();
   }

	private static final String stg = new StringBuilder("delimiters \"~\", \"~\"\n")
		.append("eom() ::= <<}>>\n")
		.append("gt() ::= \">\"\n")
			.append("details(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,open,spellcheck,style,tabindex,title,translate) ::= <<<details~if(open)~ open=\"~open~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</details> >>\n")
			.append("audio(accesskey,autoplay,class,content,contenteditable,contextmenu,controls,data,databind,dir,draggable,dropzone,hidden,muted,preload,spellcheck,src,style,tabindex,title,translate,id,lang,loop) ::= <<<audio~if(autoplay)~ autoplay=\"~autoplay~\"~endif~~if(controls)~ controls=\"~controls~\"~endif~~if(loop)~ loop=\"~loop~\"~endif~~if(muted)~ muted=\"~muted~\"~endif~~if(preload)~ preload=\"~preload~\"~endif~~if(src)~ src=\"~src~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</audio> >>\n")
			.append("thead(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<thead~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</thead> >>\n")
			.append("time(accesskey,class,content,contenteditable,contextmenu,data,databind,datetime,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<time~if(datetime)~ datetime=\"~datetime~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</time> >>\n")
			.append("th(abbr,accesskey,class,colspan,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,headers,hidden,id,lang,rowspan,scope,sorted,spellcheck,style,tabindex,title,translate) ::= <<<th~if(abbr)~ abbr=\"~abbr~\"~endif~~if(colspan)~ colspan=\"~colspan~\"~endif~~if(headers)~ headers=\"~headers~\"~endif~~if(rowspan)~ rowspan=\"~rowspan~\"~endif~~if(scope)~ scope=\"~scope~\"~endif~~if(sorted)~ sorted=\"~sorted~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</th> >>\n")
			.append("tr(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<tr~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</tr> >>\n")
			.append("track(accesskey,class,content,contenteditable,contextmenu,data,databind,default_,dir,draggable,dropzone,hidden,id,kind,label,lang,spellcheck,src,srclang,style,tabindex,title,translate) ::= <<<track~if(default_)~ default_=\"~default_~\"~endif~~if(kind)~ kind=\"~kind~\"~endif~~if(label)~ label=\"~label~\"~endif~~if(src)~ src=\"~src~\"~endif~~if(srclang)~ srclang=\"~srclang~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</track> >>\n")
			.append("title(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<title~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</title> >>\n")
			.append("u(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<u~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</u> >>\n")
			.append("ul(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<ul~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</ul> >>\n")
			.append("tt(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<tt~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</tt> >>\n")
			.append("video(accesskey,autoplay,class,content,contenteditable,contextmenu,controls,data,databind,dir,draggable,dropzone,height,hidden,id,lang,loop,muted,poster,preload,spellcheck,src,style,tabindex,title,translate,width) ::= <<<video~if(autoplay)~ autoplay=\"~autoplay~\"~endif~~if(controls)~ controls=\"~controls~\"~endif~~if(height)~ height=\"~height~\"~endif~~if(loop)~ loop=\"~loop~\"~endif~~if(muted)~ muted=\"~muted~\"~endif~~if(poster)~ poster=\"~poster~\"~endif~~if(preload)~ preload=\"~preload~\"~endif~~if(src)~ src=\"~src~\"~endif~~if(width)~ width=\"~width~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</video> >>\n")
			.append("wbr(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<wbr~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</wbr> >>\n")
			.append("var(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<var~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</var> >>\n")
			.append("article(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<article~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</article> >>\n")
			.append("acronym(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<acronym~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</acronym> >>\n")
			.append("address(contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,accesskey,class,content,spellcheck,style,tabindex,title,translate) ::= <<<address~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</address> >>\n")
			.append("base(contextmenu,data,accesskey,class,contenteditable,tabindex,target,title,translate,databind,dir,draggable,dropzone,hidden,href,id,lang,spellcheck,style) ::= <<<base~if(href)~ href=\"~href~\"~endif~~if(target)~ target=\"~target~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("aside(style,tabindex,title,translate,databind,id,lang,spellcheck,accesskey,class,content,contenteditable,contextmenu,data,dir,draggable,dropzone,hidden) ::= <<<aside~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</aside> >>\n")
			.append("applet(code,codebase,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,height,hidden,accesskey,align,alt,archive,class,hspace,id,lang,name,object,spellcheck,style,tabindex,title,translate,vspace,width) ::= <<<applet~if(align)~ align=\"~align~\"~endif~~if(alt)~ alt=\"~alt~\"~endif~~if(archive)~ archive=\"~archive~\"~endif~~if(code)~ code=\"~code~\"~endif~~if(codebase)~ codebase=\"~codebase~\"~endif~~if(height)~ height=\"~height~\"~endif~~if(hspace)~ hspace=\"~hspace~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(object)~ object=\"~object~\"~endif~~if(vspace)~ vspace=\"~vspace~\"~endif~~if(width)~ width=\"~width~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</applet>>\n")
			.append("area(dir,download,draggable,hidden,href,translate,type,dropzone,hreflang,id,lang,media,rel,shape,spellcheck,style,tabindex,target,title,accesskey,alt,class,contenteditable,contextmenu,coords,data,databind) ::= <<<area~if(alt)~ alt=\"~alt~\"~endif~~if(coords)~ coords=\"~coords~\"~endif~~if(download)~ download=\"~download~\"~endif~~if(href)~ href=\"~href~\"~endif~~if(hreflang)~ hreflang=\"~hreflang~\"~endif~~if(media)~ media=\"~media~\"~endif~~if(rel)~ rel=\"~rel~\"~endif~~if(shape)~ shape=\"~shape~\"~endif~~if(target)~ target=\"~target~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("basefont(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<basefont~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</basefont> >>\n")
			.append("a(lang,spellcheck,rel,style,tabindex,target,title,translate,type,dropzone,data,databind,dir,download,draggable,media,hidden,accesskey,class,content,contenteditable,contextmenu,hreflang,id,href) ::= <<<a~if(download)~ download=\"~download~\"~endif~~if(href)~ href=\"~href~\"~endif~~if(hreflang)~ hreflang=\"~hreflang~\"~endif~~if(media)~ media=\"~media~\"~endif~~if(rel)~ rel=\"~rel~\"~endif~~if(target)~ target=\"~target~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</a> >>\n")
			.append("b(class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate,accesskey) ::= <<<b~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</b> >>\n")
			.append("block(content) ::= <<~content:{it|~it~};separator=\"\\n\"~>>\n")
			.append("blockquote(accesskey,cite,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<blockquote~if(cite)~ cite=\"~cite~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</blockquote> >>\n")
			.append("big(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<big~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</big> >>\n")
			.append("bdo(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<bdo~if(dir)~ dir=\"~dir~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</bdo> >>\n")
			.append("bdi(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<bdi~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</bdi> >>\n")
			.append("abbr(contextmenu,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,class,translate,dir,draggable,content,contenteditable,data,databind,accesskey) ::= <<<abbr~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</abbr> >>\n")
			.append("strike(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<strike~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</strike> >>\n")
			.append("span(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<span~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</span> >>\n")
			.append("style(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,media,scoped,spellcheck,style,tabindex,title,translate,type) ::= <<<style~if(media)~ media=\"~media~\"~endif~~if(scoped)~ scoped=\"~scoped~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</style> >>\n")
			.append("strong(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<strong~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</strong> >>\n")
			.append("sub(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<sub~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</sub> >>\n")
			.append("sup(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<sup~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</sup> >>\n")
			.append("summary(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<summary~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</summary> >>\n")
			.append("table(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,sortable,spellcheck,style,tabindex,title,translate) ::= <<<table~if(sortable)~ sortable=\"~sortable~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</table> >>\n")
			.append("td(accesskey,class,colspan,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,headers,hidden,id,lang,rowspan,spellcheck,style,tabindex,title,translate) ::= <<<td~if(colspan)~ colspan=\"~colspan~\"~endif~~if(headers)~ headers=\"~headers~\"~endif~~if(rowspan)~ rowspan=\"~rowspan~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</td> >>\n")
			.append("tbody(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<tbody~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</tbody> >>\n")
			.append("textarea(accesskey,autofocus,class,cols,content,contenteditable,contextmenu,data,databind,dir,disabled,draggable,dropzone,form,hidden,id,lang,maxlength,name,placeholder,readonly,required,rows,spellcheck,style,tabindex,title,translate,wrap) ::= <<<textarea~if(autofocus)~ autofocus=\"~autofocus~\"~endif~~if(cols)~ cols=\"~cols~\"~endif~~if(disabled)~ disabled=\"~disabled~\"~endif~~if(form)~ form=\"~form~\"~endif~~if(maxlength)~ maxlength=\"~maxlength~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(placeholder)~ placeholder=\"~placeholder~\"~endif~~if(readonly)~ readonly=\"~readonly~\"~endif~~if(required)~ required=\"~required~\"~endif~~if(rows)~ rows=\"~rows~\"~endif~~if(wrap)~ wrap=\"~wrap~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</textarea> >>\n")
			.append("code(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<code~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</code> >>\n")
			.append("cite(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<cite~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</cite> >>\n")
			.append("col(accesskey,class,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,span,spellcheck,style,tabindex,title,translate) ::= <<<col~if(span)~ span=\"~span~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("comment(comment) ::= <<<!-- ~comment~ --> >>\n")
			.append("datalist(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<datalist~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</datalist> >>\n")
			.append("colgroup(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,span,spellcheck,style,tabindex,title,translate) ::= <<<colgroup~if(span)~ span=\"~span~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</colgroup> >>\n")
			.append("dd(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<dd~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</dd> >>\n")
			.append("body(content) ::= <<<body>\n" + 
		"    ~content:{it|~it~};separator=\"\\n\"~\n" + 
		"</body> >>\n")
			.append("br(accesskey,class,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<br~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("button(accesskey,autofocus,class,content,contenteditable,contextmenu,data,databind,dir,disabled,draggable,dropzone,form,formaction,formenctype,formmethod,formnovalidate,formtarget,hidden,id,lang,name,spellcheck,style,tabindex,title,translate,type,value) ::= <<<button~if(autofocus)~ autofocus=\"~autofocus~\"~endif~~if(disabled)~ disabled=\"~disabled~\"~endif~~if(form)~ form=\"~form~\"~endif~~if(formaction)~ formaction=\"~formaction~\"~endif~~if(formenctype)~ formenctype=\"~formenctype~\"~endif~~if(formmethod)~ formmethod=\"~formmethod~\"~endif~~if(formnovalidate)~ formnovalidate=\"~formnovalidate~\"~endif~~if(formtarget)~ formtarget=\"~formtarget~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(value)~ value=\"~value~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</button> >>\n")
			.append("tfoot(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<tfoot~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</tfoot> >>\n")
			.append("q(accesskey,cite,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<q~if(cite)~ cite=\"~cite~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</q> >>\n")
			.append("rp(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<rp~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</rp> >>\n")
			.append("rt(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<rt~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</rt> >>\n")
			.append("caption(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<caption~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</caption> >>\n")
			.append("canvas(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,height,hidden,id,lang,spellcheck,style,tabindex,title,translate,width) ::= <<<canvas~if(height)~ height=\"~height~\"~endif~~if(width)~ width=\"~width~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</canvas> >>\n")
			.append("center(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<center~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</center> >>\n")
			.append("dl(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<dl~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</dl> >>\n")
			.append("dt(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<dt~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</dt> >>\n")
			.append("em(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<em~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</em> >>\n")
			.append("embed(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,height,hidden,id,lang,spellcheck,src,style,tabindex,title,translate,type,width) ::= <<<embed~if(height)~ height=\"~height~\"~endif~~if(src)~ src=\"~src~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(width)~ width=\"~width~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</embed> >>\n")
			.append("fieldset(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,disabled,draggable,dropzone,form,hidden,id,lang,name,spellcheck,style,tabindex,title,translate) ::= <<<fieldset~if(disabled)~ disabled=\"~disabled~\"~endif~~if(form)~ form=\"~form~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</fieldset> >>\n")
			.append("eom() ::= <<}>>\n")
			.append("figcaption(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<figcaption~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</figcaption> >>\n")
			.append("del(accesskey,cite,class,content,contenteditable,contextmenu,data,databind,datetime,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<del~if(cite)~ cite=\"~cite~\"~endif~~if(datetime)~ datetime=\"~datetime~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</del> >>\n")
			.append("ruby(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<ruby~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</ruby> >>\n")
			.append("s(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<s~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</s> >>\n")
			.append("samp(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<samp~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</samp> >>\n")
			.append("script(accesskey,async,charset,class,content,contenteditable,contextmenu,data,databind,defer,dir,draggable,dropzone,hidden,id,lang,spellcheck,src,style,tabindex,title,translate,type) ::= <<<script~if(async)~ async=\"~async~\"~endif~~if(charset)~ charset=\"~charset~\"~endif~~if(defer)~ defer=\"~defer~\"~endif~~if(src)~ src=\"~src~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</script> >>\n")
			.append("section(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<section~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</section> >>\n")
			.append("select(accesskey,autofocus,class,content,contenteditable,contextmenu,data,databind,dir,disabled,draggable,dropzone,form,hidden,id,lang,multiple,name,required,size,spellcheck,style,tabindex,title,translate) ::= <<<select~if(autofocus)~ autofocus=\"~autofocus~\"~endif~~if(disabled)~ disabled=\"~disabled~\"~endif~~if(form)~ form=\"~form~\"~endif~~if(multiple)~ multiple=\"~multiple~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(required)~ required=\"~required~\"~endif~~if(size)~ size=\"~size~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</select> >>\n")
			.append("small(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<small~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</small> >>\n")
			.append("source(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,media,spellcheck,src,style,tabindex,title,translate,type) ::= <<<source~if(media)~ media=\"~media~\"~endif~~if(src)~ src=\"~src~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</source> >>\n")
			.append("object(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,form,height,hidden,id,lang,name,spellcheck,style,tabindex,title,translate,type,usemap,width) ::= <<<object~if(data)~ data=\"~data~\"~endif~~if(form)~ form=\"~form~\"~endif~~if(height)~ height=\"~height~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(usemap)~ usemap=\"~usemap~\"~endif~~if(width)~ width=\"~width~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</object> >>\n")
			.append("iframe(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,height,hidden,id,lang,name,sandbox,spellcheck,src,srcdoc,style,tabindex,title,translate,width) ::= <<<iframe~if(height)~ height=\"~height~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(sandbox)~ sandbox=\"~sandbox~\"~endif~~if(src)~ src=\"~src~\"~endif~~if(srcdoc)~ srcdoc=\"~srcdoc~\"~endif~~if(width)~ width=\"~width~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</iframe> >>\n")
			.append("i(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<i~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</i> >>\n")
			.append("img(accesskey,alt,class,contenteditable,contextmenu,crossorigin,data,databind,dir,draggable,dropzone,height,hidden,id,ismap,lang,longdesc,spellcheck,src,style,tabindex,title,translate,usemap,width) ::= <<<img~if(alt)~ alt=\"~alt~\"~endif~~if(crossorigin)~ crossorigin=\"~crossorigin~\"~endif~~if(height)~ height=\"~height~\"~endif~~if(ismap)~ ismap=\"~ismap~\"~endif~~if(longdesc)~ longdesc=\"~longdesc~\"~endif~~if(src)~ src=\"~src~\"~endif~~if(usemap)~ usemap=\"~usemap~\"~endif~~if(width)~ width=\"~width~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("hgroup(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<hgroup~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</hgroup> >>\n")
			.append("head(content) ::= <<<head>\n" + 
		"    ~content:{it|~it~};separator=\"\\n\"~\n" + 
		"</head> >>\n")
			.append("header(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<header~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</header> >>\n")
			.append("hr(accesskey,class,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<hr~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("kbd(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<kbd~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</kbd> >>\n")
			.append("mark(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<mark~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</mark> >>\n")
			.append("keygen(accesskey,autofocus,challenge,class,content,contenteditable,contextmenu,data,databind,dir,disabled,draggable,dropzone,form,hidden,id,keytype,lang,name,spellcheck,style,tabindex,title,translate) ::= <<<keygen~if(autofocus)~ autofocus=\"~autofocus~\"~endif~~if(challenge)~ challenge=\"~challenge~\"~endif~~if(disabled)~ disabled=\"~disabled~\"~endif~~if(form)~ form=\"~form~\"~endif~~if(keytype)~ keytype=\"~keytype~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</keygen> >>\n")
			.append("input(accept,accesskey,alt,autocomplete,autofocus,checked,class,contenteditable,contextmenu,data,databind,dir,disabled,draggable,dropzone,form,formaction,formenctype,formmethod,formnovalidate,formtarget,height,hidden,id,lang,list,max,maxlength,min,multiple,name,pattern,placeholder,readonly,required,size,spellcheck,src,step,style,tabindex,title,translate,type,value,width) ::= <<<input~if(accept)~ accept=\"~accept~\"~endif~~if(alt)~ alt=\"~alt~\"~endif~~if(autocomplete)~ autocomplete=\"~autocomplete~\"~endif~~if(autofocus)~ autofocus=\"~autofocus~\"~endif~~if(checked)~ checked=\"~checked~\"~endif~~if(disabled)~ disabled=\"~disabled~\"~endif~~if(form)~ form=\"~form~\"~endif~~if(formaction)~ formaction=\"~formaction~\"~endif~~if(formenctype)~ formenctype=\"~formenctype~\"~endif~~if(formmethod)~ formmethod=\"~formmethod~\"~endif~~if(formnovalidate)~ formnovalidate=\"~formnovalidate~\"~endif~~if(formtarget)~ formtarget=\"~formtarget~\"~endif~~if(height)~ height=\"~height~\"~endif~~if(list)~ list=\"~list~\"~endif~~if(max)~ max=\"~max~\"~endif~~if(maxlength)~ maxlength=\"~maxlength~\"~endif~~if(min)~ min=\"~min~\"~endif~~if(multiple)~ multiple=\"~multiple~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(pattern)~ pattern=\"~pattern~\"~endif~~if(placeholder)~ placeholder=\"~placeholder~\"~endif~~if(readonly)~ readonly=\"~readonly~\"~endif~~if(required)~ required=\"~required~\"~endif~~if(size)~ size=\"~size~\"~endif~~if(src)~ src=\"~src~\"~endif~~if(step)~ step=\"~step~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(value)~ value=\"~value~\"~endif~~if(width)~ width=\"~width~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("ins(accesskey,cite,class,content,contenteditable,contextmenu,data,databind,datetime,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<ins~if(cite)~ cite=\"~cite~\"~endif~~if(datetime)~ datetime=\"~datetime~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</ins> >>\n")
			.append("form(accept_charset,accesskey,action,autocomplete,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,enctype,hidden,id,lang,method,name,novalidate,spellcheck,style,tabindex,target,title,translate) ::= <<<form~if(accept_charset)~ accept_charset=\"~accept_charset~\"~endif~~if(action)~ action=\"~action~\"~endif~~if(autocomplete)~ autocomplete=\"~autocomplete~\"~endif~~if(enctype)~ enctype=\"~enctype~\"~endif~~if(method)~ method=\"~method~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(novalidate)~ novalidate=\"~novalidate~\"~endif~~if(target)~ target=\"~target~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</form> >>\n")
			.append("frame(accesskey,class,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<frame~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("frameset(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<frameset~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</frameset> >>\n")
			.append("figure(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<figure~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</figure> >>\n")
			.append("font(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<font~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</font> >>\n")
			.append("footer(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<footer~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</footer> >>\n")
			.append("h4(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<h4~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</h4> >>\n")
			.append("h5(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<h5~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</h5> >>\n")
			.append("menu(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,label,lang,spellcheck,style,tabindex,title,translate,type) ::= <<<menu~if(label)~ label=\"~label~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</menu> >>\n")
			.append("meter(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,form,hidden,high,id,lang,low,max,min,optimum,spellcheck,style,tabindex,title,translate,value) ::= <<<meter~if(form)~ form=\"~form~\"~endif~~if(high)~ high=\"~high~\"~endif~~if(low)~ low=\"~low~\"~endif~~if(max)~ max=\"~max~\"~endif~~if(min)~ min=\"~min~\"~endif~~if(optimum)~ optimum=\"~optimum~\"~endif~~if(value)~ value=\"~value~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</meter> >>\n")
			.append("h6(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<h6~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</h6> >>\n")
			.append("meta(accesskey,charset,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,http_equiv,id,lang,name,spellcheck,style,tabindex,title,translate) ::= <<<meta~if(charset)~ charset=\"~charset~\"~endif~~if(content)~ content=\"~content:{it|~it~};separator=\"\\n\"~\"~endif~~if(http_equiv)~ http_equiv=\"~http_equiv~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("gt() ::= <<> >>\n")
			.append("h2(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<h2~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</h2> >>\n")
			.append("h1(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<h1~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</h1> >>\n")
			.append("noscript(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<noscript~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</noscript> >>\n")
			.append("h3(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<h3~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</h3> >>\n")
			.append("noframes(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<noframes~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</noframes> >>\n")
			.append("mimeJson() ::= <<\"application/json; charset=UTF-8\">>\n")
			.append("nav(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<nav~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</nav> >>\n")
			.append("optgroup(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,disabled,draggable,dropzone,hidden,id,label,lang,spellcheck,style,tabindex,title,translate) ::= <<<optgroup~if(disabled)~ disabled=\"~disabled~\"~endif~~if(label)~ label=\"~label~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</optgroup> >>\n")
			.append("ol(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,reversed,spellcheck,start,style,tabindex,title,translate,type) ::= <<<ol~if(reversed)~ reversed=\"~reversed~\"~endif~~if(start)~ start=\"~start~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</ol> >>\n")
			.append("p(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<p~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</p> >>\n")
			.append("output(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,for,form,hidden,id,lang,name,spellcheck,style,tabindex,title,translate) ::= <<<output~if(for)~ for=\"~for~\"~endif~~if(form)~ form=\"~form~\"~endif~~if(name)~ name=\"~name~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</output> >>\n")
			.append("option(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,disabled,draggable,dropzone,hidden,id,label,lang,selected,spellcheck,style,tabindex,title,translate,value) ::= <<<option~if(disabled)~ disabled=\"~disabled~\"~endif~~if(label)~ label=\"~label~\"~endif~~if(selected)~ selected=\"~selected~\"~endif~~if(value)~ value=\"~value~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</option> >>\n")
			.append("progress(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,max,spellcheck,style,tabindex,title,translate,value) ::= <<<progress~if(max)~ max=\"~max~\"~endif~~if(value)~ value=\"~value~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</progress> >>\n")
			.append("pre(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<pre~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</pre> >>\n")
			.append("page(body,head,xmlns) ::= <<<!DOCTYPE HTML>~xmlns:{it|\n" + 
		"<html xmlns:~it.name~=\"~it.url~\">};separator=\"\\n\"~\n" + 
		"~head~\n" + 
		"~body~>>\n")
			.append("param(accesskey,class,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,name,spellcheck,style,tabindex,title,translate,value) ::= <<<param~if(name)~ name=\"~name~\"~endif~~if(value)~ value=\"~value~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("li(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate,value) ::= <<<li~if(value)~ value=\"~value~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</li> >>\n")
			.append("label(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,for,form,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<label~if(for)~ for=\"~for~\"~endif~~if(form)~ form=\"~form~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</label> >>\n")
			.append("legend(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<legend~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</legend> >>\n")
			.append("map(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,name,spellcheck,style,tabindex,title,translate) ::= <<<map~if(name)~ name=\"~name~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</map> >>\n")
			.append("link(accesskey,class,contenteditable,contextmenu,crossorigin,data,databind,dir,draggable,dropzone,hidden,href,hreflang,id,lang,media,rel,sizes,spellcheck,style,tabindex,title,translate,type) ::= <<<link~if(crossorigin)~ crossorigin=\"~crossorigin~\"~endif~~if(href)~ href=\"~href~\"~endif~~if(hreflang)~ hreflang=\"~hreflang~\"~endif~~if(media)~ media=\"~media~\"~endif~~if(rel)~ rel=\"~rel~\"~endif~~if(sizes)~ sizes=\"~sizes~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~> >>\n")
			.append("main(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<main~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</main> >>\n")
			.append("menuitem(accesskey,checked,class,command,content,contenteditable,contextmenu,data,databind,default_,dir,disabled,draggable,dropzone,hidden,icon,id,label,lang,radiogroup,spellcheck,style,tabindex,title,translate,type) ::= <<<menuitem~if(checked)~ checked=\"~checked~\"~endif~~if(command)~ command=\"~command~\"~endif~~if(default_)~ default_=\"~default_~\"~endif~~if(disabled)~ disabled=\"~disabled~\"~endif~~if(icon)~ icon=\"~icon~\"~endif~~if(label)~ label=\"~label~\"~endif~~if(radiogroup)~ radiogroup=\"~radiogroup~\"~endif~~if(type)~ type=\"~type~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</menuitem> >>\n")
			.append("div(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<div~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</div> >>\n")
			.append("dir(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<dir~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</dir> >>\n")
			.append("dialog(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,open,spellcheck,style,tabindex,title,translate) ::= <<<dialog~if(open)~ open=\"~open~\"~endif~~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</dialog> >>\n")
			.append("dfn(accesskey,class,content,contenteditable,contextmenu,data,databind,dir,draggable,dropzone,hidden,id,lang,spellcheck,style,tabindex,title,translate) ::= <<<dfn~if(databind)~ data-bind=\"~databind~\"~endif~~if(accesskey)~ accesskey=\"~accesskey~\"~endif~~if(class)~ class=\"~class~\"~endif~~if(contenteditable)~ contenteditable=\"~contenteditable~\"~endif~~if(contextmenu)~ contextmenu=\"~contextmenu~\"~endif~~if(dir)~ dir=\"~dir~\"~endif~~if(draggable)~ draggable=\"~draggable~\"~endif~~if(dropzone)~ dropzone=\"~dropzone~\"~endif~~if(hidden)~ hidden=\"~hidden~\"~endif~~if(id)~ id=\"~id~\"~endif~~if(lang)~ lang=\"~lang~\"~endif~~if(spellcheck)~ spellcheck=\"~spellcheck~\"~endif~~if(style)~ style=\"~style~\"~endif~~if(tabindex)~ tabindex=\"~tabindex~\"~endif~~if(title)~ title=\"~title~\"~endif~~if(translate)~ translate=\"~translate~\"~endif~~if(data)~ ~data:{it|~it.name~=\"~it.value~\"};separator=\" \"~~endif~>~if(content)~\n" + 
		"	~content:{it|~it~};separator=\"\\n\"~\n" + 
		"~endif~</dfn> >>\n")
		.toString();
}