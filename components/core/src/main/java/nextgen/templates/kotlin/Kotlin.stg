delimiters "~","~"

Entities() ::= << >>

Poko(packageDeclaration,classDeclaration) ::= <<~packageDeclaration~

~classDeclaration~ >>

Grammar() ::= << >>

Declarations() ::= << >>

AnnotationDeclaration(annotations) ::= <<~annotations:{it|@~it.name~(~it.params~)};separator="\n"~ >>

AnnotationParam(param) ::= <<~param:{it|~it.key~ = ~it.value~};separator=", "~ >>

PackageDeclaration(name) ::= <<package ~name~ >>

ClassDeclaration(annotations,isOpen,isAbstract,name,fields,extends) ::= <<~annotations~
~if(isOpen)~open ~elseif(isAbstract)~abstract ~endif~class ~name~(
	~fields:{it|~it~};separator="\n"~
) ~if(extends)~extends : ~extends~~endif~{
	
} >>

FieldDeclaration(annotations,fields) ::= <<~annotations:{it|~it~};separator="\n"~
~fields:{it|~if(it.isMutable)~var ~elseif(it.isNonMember)~~else~val ~endif~~it.name~: ~it.type~~if(it.initializer)~ = ~it.initializer~~endif~};separator=",\n"~ >>

Extending(className,params) ::= <<~className~(~params:{it|~it.name~};separator=", "~) >>

eom() ::= "}"

gt() ::= ">"
