delimiters "~","~"

build(testResources,plugin) ::= <<<build>
~if(testResources)~
	<testResources>
		<testResource>
			~testResources:{it|<~it.name~>~it.value~</~it.name~>};separator="\n"~
		</testResource>
	</testResources>
~endif~
	<plugins>
		~plugin:{it|~it~};separator="\n"~
	</plugins>
</build>  >>

dependency(groupId,artifactId,version,scope,systemPath,classifier,type) ::= <<<dependency>
	<groupId>~groupId~</groupId>
	<artifactId>~artifactId~</artifactId>~if(version)~
	<version>~version~</version>~endif~~if(scope)~
	<scope>~scope;format="toLower"~</scope>~endif~~if(systemPath)~
	<systemPath>~systemPath~</systemPath>~endif~~if(classifier)~
	<classifier>~classifier~</classifier>~endif~~if(type)~
	<type>~type~</type>~endif~
	
</dependency>  >>

dependencyManagement(dependencies) ::= <<<dependencyManagement>
	<dependencies>
		~dependencies:{it|~it~};separator="\n"~
	</dependencies>
</dependencyManagement>  >>

Entities() ::= << >>

DependencyGroup(name,groupId,version,artifacts) ::= <<Name ~name~
GroupId ~groupId~
Version ~version~

~artifacts:{it|~it~};separator="\n"~ >>

Project(name,root,pom,modules) ::= <<Project ~name~

root	:	~root~
Pom	: ~pom~

Modules :
~modules:{it|~it~};separator="\n"~ >>

Module(name,pom,modules) ::= <<Module ~name~
Pom : ~pom~

Modules:
~modules:{it|~it~};separator="\n"~ >>

execution() ::= <<<execution>
    <phase>package</phase>
    <goals>
        <goal>shade</goal>
    </goals>
</execution>  >>

MavenProject(projectName,root,mainJava,testJava) ::= <<~projectName~

root : ~root~
mainJava : ~mainJava~
testJava : ~testJava~  >>

parent(artifactId,groupId,version) ::= <<<parent>
	<artifactId>~artifactId~</artifactId>
	<groupId>~groupId~</groupId>
	<version>~version~</version>
</parent>  >>

Plugins() ::= << >>

frontEndMavenPlugin(pluginVersion,installDirectory,nodeVersion) ::= <<<!-- https://github.com/eirslett/frontend-maven-plugin -->
<plugin>
    <groupId>com.github.eirslett</groupId>
    <artifactId>frontend-maven-plugin</artifactId>
    <version>~if(pluginVersion)~~pluginVersion~~else~1.10.0~endif~</version>
    <configuration>
        <installDirectory>~if(installDirectory)~~installDirectory~~else~target~endif~</installDirectory>
        <nodeVersion>v~nodeVersion~</nodeVersion>
    </configuration>
    <executions>
        <execution>
            <id>install node and npm</id>
            <goals>
                <goal>install-node-and-npm</goal>
            </goals>
        </execution>
        <execution>
            <id>npm install</id>
            <goals>
                <goal>npm</goal>
            </goals>
            <configuration>
                <arguments>install</arguments>
            </configuration>
        </execution>
        <execution>
            <id>webpack build</id>
            <goals>
                <goal>webpack</goal>
            </goals>
        </execution>
    </executions>
</plugin~gt()~  >>

shadePlugin(packageName,className) ::= <<<!-- https://maven.apache.org/plugins/maven-shade-plugin/ -->
<plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-shade-plugin</artifactId>
	<version>2.4.3</version>
	<executions>
		<execution>
			<phase>package</phase>
			<goals>
				<goal>shade</goal>
			</goals>
			<configuration>
				<filters>
					<filter>
						<artifact>*:*</artifact>
						<excludes>
							<exclude>META-INF/*.SF</exclude>
							<exclude>META-INF/*.DSA</exclude>
							<exclude>META-INF/*.RSA</exclude>
						</excludes>
					</filter>
				</filters>
				<transformers>
					<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
					<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
						<manifestEntries>
							<Main-Class>io.vertx.core.Launcher</Main-Class>
							<Main-Verticle>~packageName~.~className~</Main-Verticle>
						</manifestEntries>
					</transformer>
				</transformers>
				<artifactSet/>
				<outputFile>target/${project.artifactId}-${project.version}-fat.jar</outputFile>
			</configuration>
		</execution>
	</executions>
</plugin>  >>

plugin(groupId,artifactId,version,configuration,executions) ::= <<<plugin>
	<groupId>~groupId~</groupId>
	<artifactId>~artifactId~</artifactId>
	<version>~version~</version>
	<configuration>
		~configuration:{it|<~it.name~>~it.value~</~it.name~>};separator="\n"~
	</configuration>
	<executions>
		~executions:{it|~it~};separator="\n"~
	</executions>
</plugin> >>

copyPlugin(outputDirectory,directory,include) ::= <<<!-- https://maven.apache.org/plugins/maven-resources-plugin/ -->
<plugin>
	<artifactId>maven-resources-plugin</artifactId>
	<version>3.1.0</version>
	<executions>
		<execution>
			<id>copy-resources</id>
			<phase>validate</phase>
			<goals>
				<goal>copy-resources</goal>
			</goals>
			<configuration>
				<outputDirectory>~outputDirectory~</outputDirectory>
				<resources>			 
					<resource>
						<directory>~directory~</directory>
						<includes>
							~include:{it|<include>~it~</include>};separator="\n"~
						</includes>
					</resource>
				</resources>				  
			</configuration>				
		</execution>
	</executions>
</plugin>  >>

antlr4(version,sourceDirectory,grammars,includes,arguments,outputDirectory,visitor,listener,goal) ::= <<<plugin>
	<groupId>org.antlr</groupId>
	<artifactId>antlr4-maven-plugin</artifactId>
	<version>~if(version)~~version~~else~4.8-1~endif~</version>
	<configuration>
		<sourceDirectory>~sourceDirectory~</sourceDirectory>
		~grammars:{it|<grammars>~it~.g4</grammars>};separator="\n"~
		<includes>
			~includes:{it|<include>~it~.g4</include>};separator="\n"~
		</includes>		
		<arguments>
			~arguments:{it|<argument>~it~</argument>};separator="\n"~
		</arguments>
		<outputDirectory>~outputDirectory~</outputDirectory>
		<visitor>~if(visitor)~true~else~false~endif~</visitor>
		<listener>~if(listener)~true~else~false~endif~</listener>
	</configuration>
	<executions>
		<execution>
			<goals>
				<goal>~if(goal)~~goal~~else~antlr4~endif~</goal>
		</goals>
		</execution>
	</executions>
</plugin>  >>

pom(parent,name,groupId,artifactId,version,packaging,modules,properties,build,dependencyManagement,dependencies,distributionManagement,repositories) ::= <<<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
~if(parent)~

	~parent~
~endif~	 
	<modelVersion>4.0.0</modelVersion>

	<name>~name~</name>

	~if(groupId)~<groupId>~groupId~</groupId>~endif~
	~if(artifactId)~<artifactId>~artifactId~</artifactId>~endif~
	~if(version)~<version>~version~</version>~endif~
	~if(packaging)~<packaging>~packaging~</packaging>~endif~

~if(modules)~
	<modules>
		~modules:{it|<module>~it~</module>};separator="\n"~
	</modules>
~endif~
~if(properties)~
	<properties>
		~properties:{it|~it~};separator="\n"~		
	</properties>
~endif~
~if(build)~

	~build~

~endif~
~if(dependencyManagement)~
	~dependencyManagement~
~endif~
~if(dependencies)~

	<dependencies>
		~dependencies:{it|~it~};separator="\n"~  
	</dependencies>

~endif~
~if(distributionManagement)~

	<distributionManagement>
		~distributionManagement:{it|~it~};separator="\n"~
	</distributionManagement>
~endif~
~if(repositories)~

	<repositories>
		~repositories:{it|~it~};separator="\n"~
	</repositories>
~endif~
</project>  >>

Properties(name,value) ::= <<<~name~>~value~</~name~>  >>

MavenCompilerSource(value) ::= <<<maven.compiler.source>~value~</maven.compiler.source>  >>

ProjectBuildSourceEncoding(value) ::= <<<project.build.sourceEncoding>~if(value)~~value~~else~UTF-8~endif~</project.build.sourceEncoding>  >>

MavenCompilerTarget(value) ::= <<<maven.compiler.target>~value~</maven.compiler.target>  >>

ProjectReportingOutputEncoding(value) ::= <<<project.reporting.outputEncoding>~if(value)~~value~~else~UTF-8~endif~</project.reporting.outputEncoding>  >>

propertyReference(name) ::= <<${~name~} >>

repository(id,name,url) ::= <<<repository>
	<id>~id~</id>
	<name>~name~</name>
	<url>~url~</url>
</repository> >>

eom() ::= "}"

gt() ::= ">"
